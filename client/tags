!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(DESTDIR)$(bindir)/%	lib/tinycbor/Makefile	/^$(DESTDIR)$(bindir)\/%: bin\/%$/;"	t
$(DESTDIR)$(includedir)/tinycbor/%	lib/tinycbor/Makefile	/^$(DESTDIR)$(includedir)\/tinycbor\/%: src\/%$/;"	t
$(DESTDIR)$(libdir)/%	lib/tinycbor/Makefile	/^$(DESTDIR)$(libdir)\/%: lib\/%$/;"	t
$(DESTDIR)$(pkgconfigdir)/%	lib/tinycbor/Makefile	/^$(DESTDIR)$(pkgconfigdir)\/%: %$/;"	t
$(PACKAGE).tar.gz	lib/tinycbor/Makefile	/^$(PACKAGE).tar.gz: | .git$/;"	t
$(PACKAGE).zip	lib/tinycbor/Makefile	/^$(PACKAGE).zip: | .git$/;"	t
$(VERBOSE).SILENT	Makefile	/^$(VERBOSE).SILENT:$/;"	t
%.o	lib/tinycbor/Makefile	/^%.o: %.c$/;"	t
%.pic.o	lib/tinycbor/Makefile	/^%.pic.o: %.c$/;"	t
../bin	lib/tinycbor/tools/Makefile	/^..\/bin:$/;"	t
../bin/cbordump	lib/tinycbor/tools/Makefile	/^..\/bin\/cbordump: cbordump.o cborparser.o cborparser_dup_string.o cbortojson.o cborerrorstrings/;"	t
.config	lib/tinycbor/Makefile	/^.config: Makefile.configure$/;"	t
ADDINFO_RESERVED1	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define ADDINFO_RESERVED1 /;"	d
ADDINFO_RESERVED2	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define ADDINFO_RESERVED2 /;"	d
ADDINFO_RESERVED3	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define ADDINFO_RESERVED3 /;"	d
AI_1	lib/cn-cbor/src/cbor.h	/^#define AI_1 /;"	d
AI_2	lib/cn-cbor/src/cbor.h	/^#define AI_2 /;"	d
AI_4	lib/cn-cbor/src/cbor.h	/^#define AI_4 /;"	d
AI_8	lib/cn-cbor/src/cbor.h	/^#define AI_8 /;"	d
AI_INDEF	lib/cn-cbor/src/cbor.h	/^#define AI_INDEF /;"	d
ANSI_BBLUE	lib/cn-cbor/test/ctest.h	/^#define ANSI_BBLUE /;"	d
ANSI_BCYAN	lib/cn-cbor/test/ctest.h	/^#define ANSI_BCYAN /;"	d
ANSI_BGREEN	lib/cn-cbor/test/ctest.h	/^#define ANSI_BGREEN /;"	d
ANSI_BLACK	lib/cn-cbor/test/ctest.h	/^#define ANSI_BLACK /;"	d
ANSI_BLUE	lib/cn-cbor/test/ctest.h	/^#define ANSI_BLUE /;"	d
ANSI_BMAGENTA	lib/cn-cbor/test/ctest.h	/^#define ANSI_BMAGENTA /;"	d
ANSI_BRED	lib/cn-cbor/test/ctest.h	/^#define ANSI_BRED /;"	d
ANSI_BYELLOW	lib/cn-cbor/test/ctest.h	/^#define ANSI_BYELLOW /;"	d
ANSI_CYAN	lib/cn-cbor/test/ctest.h	/^#define ANSI_CYAN /;"	d
ANSI_DARKGREY	lib/cn-cbor/test/ctest.h	/^#define ANSI_DARKGREY /;"	d
ANSI_GREEN	lib/cn-cbor/test/ctest.h	/^#define ANSI_GREEN /;"	d
ANSI_GREY	lib/cn-cbor/test/ctest.h	/^#define ANSI_GREY /;"	d
ANSI_MAGENTA	lib/cn-cbor/test/ctest.h	/^#define ANSI_MAGENTA /;"	d
ANSI_NORMAL	lib/cn-cbor/test/ctest.h	/^#define ANSI_NORMAL /;"	d
ANSI_RED	lib/cn-cbor/test/ctest.h	/^#define ANSI_RED /;"	d
ANSI_WHITE	lib/cn-cbor/test/ctest.h	/^#define ANSI_WHITE /;"	d
ANSI_YELLOW	lib/cn-cbor/test/ctest.h	/^#define ANSI_YELLOW /;"	d
ARCHITECTURE_ID	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID$/;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID$/;"	d	file:
ASSERT_DATA	lib/cn-cbor/test/ctest.h	/^#define ASSERT_DATA(/;"	d
ASSERT_EQUAL	lib/cn-cbor/test/ctest.h	/^#define ASSERT_EQUAL(/;"	d
ASSERT_FAIL	lib/cn-cbor/test/ctest.h	/^#define ASSERT_FAIL(/;"	d
ASSERT_FALSE	lib/cn-cbor/test/ctest.h	/^#define ASSERT_FALSE(/;"	d
ASSERT_NOT_EQUAL	lib/cn-cbor/test/ctest.h	/^#define ASSERT_NOT_EQUAL(/;"	d
ASSERT_NOT_NULL	lib/cn-cbor/test/ctest.h	/^#define ASSERT_NOT_NULL(/;"	d
ASSERT_NULL	lib/cn-cbor/test/ctest.h	/^#define ASSERT_NULL(/;"	d
ASSERT_STR	lib/cn-cbor/test/ctest.h	/^#define ASSERT_STR(/;"	d
ASSERT_TRUE	lib/cn-cbor/test/ctest.h	/^#define ASSERT_TRUE(/;"	d
AllAddMethodsTest	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t AllAddMethodsTest()$/;"	f	typeref:typename:int32_t
AllocAllStringsTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t AllocAllStringsTest()$/;"	f	typeref:typename:int32_t
AllocateTestFunction	lib/QCBOR/test/qcbor_decode_tests.c	/^static UsefulBuf AllocateTestFunction(void *pCtx, void *pOldMem, size_t uNewSize)$/;"	f	typeref:typename:UsefulBuf	file:
AppendCBORHead	lib/QCBOR/src/qcbor_encode.c	/^static void AppendCBORHead(QCBOREncodeContext *me, uint8_t uMajorType,  uint64_t uArgument, uint/;"	f	typeref:typename:void	file:
AppendTest	lib/QCBOR/test/UsefulBuf_Tests.c	/^static int AppendTest(UsefulOutBuf *pUOB, size_t num, int expected)$/;"	f	typeref:typename:int	file:
Are Tags "Optional"?	lib/QCBOR/doc/Tagging.md	/^## Are Tags "Optional"?$/;"	s
ArrayNestingTest1	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t ArrayNestingTest1()$/;"	f	typeref:typename:int32_t
ArrayNestingTest2	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t ArrayNestingTest2()$/;"	f	typeref:typename:int32_t
ArrayNestingTest3	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t ArrayNestingTest3()$/;"	f	typeref:typename:int32_t
ArrayType	lib/tinycbor/src/cborinternal_p.h	/^    ArrayType = 4U,$/;"	e	enum:CborMajorTypes
BINLIBRARY	lib/tinycbor/Makefile	/^BINLIBRARY=lib\/libtinycbor.a$/;"	m
BINLIBRARY	lib/tinycbor/Makefile	/^BINLIBRARY=lib\/libtinycbor.so$/;"	m
BSD-3-Clause license	lib/QCBOR/README.md	/^### BSD-3-Clause license$/;"	S
BSTR_TEST_DEPTH	lib/QCBOR/test/qcbor_encode_tests.c	/^   #define BSTR_TEST_DEPTH /;"	d	file:
BUILD_SHARED	lib/tinycbor/Makefile	/^BUILD_SHARED = $(shell file -L \/bin\/sh 2>\/dev\/null | grep -q ELF && echo 1)$/;"	m
BUILD_STATIC	lib/tinycbor/Makefile	/^BUILD_STATIC = 1$/;"	m
BasicEncodeTest	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t BasicEncodeTest()$/;"	f	typeref:typename:int32_t
BigComprehensiveInputTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t BigComprehensiveInputTest()$/;"	f	typeref:typename:int32_t
BignumParseTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t BignumParseTest()$/;"	f	typeref:typename:int32_t
Break	lib/tinycbor/src/cborinternal_p.h	/^    Break                   = 31$/;"	e	enum:CborSimpleTypes
BreakByte	lib/tinycbor/src/cborinternal_p.h	/^    BreakByte               = (unsigned)Break | (SimpleTypesType << MajorTypeShift)$/;"	e	enum:__anon5d9aee230103
BstrWrapErrorTest	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t BstrWrapErrorTest()$/;"	f	typeref:typename:int32_t
BstrWrapNestTest	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t BstrWrapNestTest()$/;"	f	typeref:typename:int32_t
BstrWrapTest	lib/QCBOR/test/qcbor_encode_tests.c	/^int BstrWrapTest()$/;"	f	typeref:typename:int
Buffer	lib/tinycbor/src/open_memstream.c	/^struct Buffer$/;"	s	file:
Building	lib/QCBOR/README.md	/^## Building$/;"	s
Building	lib/cn-cbor/README.md	/^## Building$/;"	s
ByteArrayLiteralToUsefulBufC	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^#define ByteArrayLiteralToUsefulBufC(/;"	d
ByteStringType	lib/tinycbor/src/cborinternal_p.h	/^    ByteStringType = 2U,$/;"	e	enum:CborMajorTypes
CBOR	lib/QCBOR/test/qcbor_decode_tests.c	/^   UsefulBufC  CBOR;$/;"	m	struct:NumberConversion	typeref:typename:UsefulBufC	file:
CBORClientExample	CMakeLists.txt	/^project(CBORClientExample)$/;"	p
CBORDUMP_SOURCES	lib/tinycbor/Makefile	/^CBORDUMP_SOURCES = tools\/cbordump\/cbordump.c$/;"	m
CBORINTERNAL_P_H	lib/tinycbor/src/cborinternal_p.h	/^#define CBORINTERNAL_P_H$/;"	d
CBORJSON_H	lib/tinycbor/src/cborjson.h	/^#define CBORJSON_H$/;"	d
CBORNotWellFormed	lib/QCBOR/example.c	/^    CBORNotWellFormed,$/;"	e	enum:__anon03c895ae0303	file:
CBORSequenceDecodeTests	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t CBORSequenceDecodeTests(void)$/;"	f	typeref:typename:int32_t
CBOR_API	lib/tinycbor/src/cbor.h	/^#  define CBOR_API$/;"	d
CBOR_CONTEXT	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^#define CBOR_CONTEXT /;"	d
CBOR_CONTEXT	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^#define CBOR_CONTEXT$/;"	d
CBOR_CONTEXT_COMMA	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^#define CBOR_CONTEXT_COMMA /;"	d
CBOR_CONTEXT_COMMA	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^#define CBOR_CONTEXT_COMMA$/;"	d
CBOR_CONTEXT_PARAM	lib/cn-cbor/src/cbor.h	/^#define CBOR_CONTEXT_PARAM /;"	d
CBOR_CONTEXT_PARAM	lib/cn-cbor/src/cbor.h	/^#define CBOR_CONTEXT_PARAM$/;"	d
CBOR_CONTEXT_PARAM	lib/cn-cbor/test/file_test.c	/^#define CBOR_CONTEXT_PARAM /;"	d	file:
CBOR_CONTEXT_PARAM	lib/cn-cbor/test/file_test.c	/^#define CBOR_CONTEXT_PARAM$/;"	d	file:
CBOR_CONTEXT_PARAM	lib/cn-cbor/test/memory_test.c	/^#define CBOR_CONTEXT_PARAM /;"	d	file:
CBOR_CONTEXT_PARAM	lib/cn-cbor/test/memory_test.c	/^#define CBOR_CONTEXT_PARAM$/;"	d	file:
CBOR_CONTEXT_PARAM	lib/cn-cbor/test/test.c	/^#define CBOR_CONTEXT_PARAM /;"	d	file:
CBOR_CONTEXT_PARAM	lib/cn-cbor/test/test.c	/^#define CBOR_CONTEXT_PARAM$/;"	d	file:
CBOR_ENCODER_WRITER_CONTROL	lib/tinycbor/src/cborinternal_p.h	/^#  define CBOR_ENCODER_WRITER_CONTROL /;"	d
CBOR_H	lib/tinycbor/src/cbor.h	/^#define CBOR_H$/;"	d
CBOR_INLINE	lib/tinycbor/src/cbor.h	/^#    define CBOR_INLINE /;"	d
CBOR_INLINE_API	lib/tinycbor/src/cbor.h	/^#    define CBOR_INLINE_API /;"	d
CBOR_INTERNAL_API	lib/tinycbor/src/cborinternal_p.h	/^#  define CBOR_INTERNAL_API$/;"	d
CBOR_INTERNAL_API_CC	lib/tinycbor/src/compilersupport_p.h	/^#  define CBOR_INTERNAL_API_CC /;"	d
CBOR_INTERNAL_API_CC	lib/tinycbor/src/compilersupport_p.h	/^#  define CBOR_INTERNAL_API_CC$/;"	d
CBOR_MAJOR_NONE_TAG_LABEL_REORDER	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define CBOR_MAJOR_NONE_TAG_LABEL_REORDER /;"	d
CBOR_MAJOR_NONE_TYPE_ARRAY_INDEFINITE_LEN	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define CBOR_MAJOR_NONE_TYPE_ARRAY_INDEFINITE_LEN /;"	d
CBOR_MAJOR_NONE_TYPE_BSTR_LEN_ONLY	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define CBOR_MAJOR_NONE_TYPE_BSTR_LEN_ONLY /;"	d
CBOR_MAJOR_NONE_TYPE_MAP_INDEFINITE_LEN	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define CBOR_MAJOR_NONE_TYPE_MAP_INDEFINITE_LEN /;"	d
CBOR_MAJOR_NONE_TYPE_RAW	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define CBOR_MAJOR_NONE_TYPE_RAW /;"	d
CBOR_MAJOR_NONE_TYPE_SIMPLE_BREAK	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define CBOR_MAJOR_NONE_TYPE_SIMPLE_BREAK /;"	d
CBOR_MAJOR_TYPE_ARRAY	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_MAJOR_TYPE_ARRAY /;"	d
CBOR_MAJOR_TYPE_BYTE_STRING	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_MAJOR_TYPE_BYTE_STRING /;"	d
CBOR_MAJOR_TYPE_MAP	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_MAJOR_TYPE_MAP /;"	d
CBOR_MAJOR_TYPE_NEGATIVE_INT	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_MAJOR_TYPE_NEGATIVE_INT /;"	d
CBOR_MAJOR_TYPE_OPTIONAL	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_MAJOR_TYPE_OPTIONAL /;"	d
CBOR_MAJOR_TYPE_POSITIVE_INT	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_MAJOR_TYPE_POSITIVE_INT /;"	d
CBOR_MAJOR_TYPE_SIMPLE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_MAJOR_TYPE_SIMPLE /;"	d
CBOR_MAJOR_TYPE_TEXT_STRING	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_MAJOR_TYPE_TEXT_STRING /;"	d
CBOR_NO_HALF_FLOAT_TYPE	lib/tinycbor/src/cborinternal_p.h	/^#    define CBOR_NO_HALF_FLOAT_TYPE /;"	d
CBOR_PARSER_MAX_RECURSIONS	lib/tinycbor/src/cborinternal_p.h	/^#  define CBOR_PARSER_MAX_RECURSIONS /;"	d
CBOR_PARSER_MAX_RECURSIONS	lib/tinycbor/src/cborvalidation.c	/^#  define CBOR_PARSER_MAX_RECURSIONS /;"	d	file:
CBOR_PARSER_READER_CONTROL	lib/tinycbor/src/cborinternal_p.h	/^#  define CBOR_PARSER_READER_CONTROL /;"	d
CBOR_PRIVATE_API	lib/tinycbor/src/cbor.h	/^#  define CBOR_PRIVATE_API$/;"	d
CBOR_PROTOCOL_H__	lib/cn-cbor/src/cbor.h	/^#define CBOR_PROTOCOL_H__$/;"	d
CBOR_SIMPLEV_FALSE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_SIMPLEV_FALSE /;"	d
CBOR_SIMPLEV_NULL	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_SIMPLEV_NULL /;"	d
CBOR_SIMPLEV_ONEBYTE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_SIMPLEV_ONEBYTE /;"	d
CBOR_SIMPLEV_RESERVED_END	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_SIMPLEV_RESERVED_END /;"	d
CBOR_SIMPLEV_RESERVED_START	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_SIMPLEV_RESERVED_START /;"	d
CBOR_SIMPLEV_TRUE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_SIMPLEV_TRUE /;"	d
CBOR_SIMPLEV_UNDEF	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_SIMPLEV_UNDEF /;"	d
CBOR_SIMPLE_BREAK	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_SIMPLE_BREAK /;"	d
CBOR_TAG_B64	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_B64 /;"	d
CBOR_TAG_B64URL	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_B64URL /;"	d
CBOR_TAG_BIGFLOAT	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_BIGFLOAT /;"	d
CBOR_TAG_BINARY_MIME	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_BINARY_MIME /;"	d
CBOR_TAG_BIN_UUID	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_BIN_UUID /;"	d
CBOR_TAG_CBOR	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_CBOR /;"	d
CBOR_TAG_CBOR_MAGIC	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_CBOR_MAGIC /;"	d
CBOR_TAG_CBOR_SEQUENCE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_CBOR_SEQUENCE /;"	d
CBOR_TAG_COSE_ENCRYPTO	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_COSE_ENCRYPTO /;"	d
CBOR_TAG_COSE_MAC0	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_COSE_MAC0 /;"	d
CBOR_TAG_COSE_SIGN1	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_COSE_SIGN1 /;"	d
CBOR_TAG_CWT	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_CWT /;"	d
CBOR_TAG_DATE_EPOCH	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_DATE_EPOCH /;"	d
CBOR_TAG_DATE_STRING	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_DATE_STRING /;"	d
CBOR_TAG_DECIMAL_FRACTION	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_DECIMAL_FRACTION /;"	d
CBOR_TAG_ENCRYPT	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_ENCRYPT /;"	d
CBOR_TAG_ENC_AS_B16	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_ENC_AS_B16 /;"	d
CBOR_TAG_ENC_AS_B64	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_ENC_AS_B64 /;"	d
CBOR_TAG_ENC_AS_B64URL	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_ENC_AS_B64URL /;"	d
CBOR_TAG_GEO_COORD	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_GEO_COORD /;"	d
CBOR_TAG_INVALID16	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_INVALID16 /;"	d
CBOR_TAG_INVALID32	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_INVALID32 /;"	d
CBOR_TAG_INVALID64	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_INVALID64 /;"	d
CBOR_TAG_MAC	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_MAC /;"	d
CBOR_TAG_MIME	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_MIME /;"	d
CBOR_TAG_NEG_BIGNUM	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_NEG_BIGNUM /;"	d
CBOR_TAG_POS_BIGNUM	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_POS_BIGNUM /;"	d
CBOR_TAG_REGEX	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_REGEX /;"	d
CBOR_TAG_SIGN	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_SIGN /;"	d
CBOR_TAG_URI	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TAG_URI /;"	d
CBOR_TWENTY_FOUR	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define CBOR_TWENTY_FOUR /;"	d
CBOR_UTF8_H	lib/tinycbor/src/utf8_p.h	/^#define CBOR_UTF8_H$/;"	d
CC	lib/QCBOR/Makefile	/^CC=cc$/;"	m
CFLAGS	lib/QCBOR/Makefile	/^CFLAGS=$(CMD_LINE) -I inc -I test -Os -fPIC $/;"	m
CFLAGS	lib/tinycbor/Makefile	/^CFLAGS = -Wall -Wextra$/;"	m
CFLAGS	lib/tinycbor/tools/Makefile	/^CFLAGS = -O2 -g$/;"	m
CFails	lib/cn-cbor/test/memory_test.c	/^int CFails;$/;"	v	typeref:typename:int
CHECK	lib/cn-cbor/src/cn-encoder.c	/^#define CHECK(/;"	d	file:
CHECK_EXPECTED_DOUBLE	lib/QCBOR/test/float_tests.c	/^static int CHECK_EXPECTED_DOUBLE(double val, double expected)$/;"	f	typeref:typename:int	file:
CHECK_EXPECTED_DOUBLE	lib/QCBOR/test/qcbor_decode_tests.c	/^static int CHECK_EXPECTED_DOUBLE(double val, double expected) {$/;"	f	typeref:typename:int	file:
CMAKE_AR	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_AR	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_ARCHIVE_OUTPUT_DIRECTORY	lib/cn-cbor/CMakeLists.txt	/^set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${dist_dir}\/lib)$/;"	v
CMAKE_BINARY_DIR	Makefile	/^CMAKE_BINARY_DIR = \/home\/hrishi\/cbor\/cbor-example\/client$/;"	m
CMAKE_BUILD_TYPE	lib/cn-cbor/CMakeLists.txt	/^    set(CMAKE_BUILD_TYPE Debug)$/;"	v
CMAKE_BUILD_TYPE	lib/cn-cbor/CMakeLists.txt	/^    set(CMAKE_BUILD_TYPE MinSizeRel)$/;"	v
CMAKE_C11_COMPILE_FEATURES	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")$/;"	v
CMAKE_C90_COMPILE_FEATURES	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")$/;"	v
CMAKE_C99_COMPILE_FEATURES	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_COMMAND	Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMPILER_IS_CYGWIN	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_CYGWIN )$/;"	v
CMAKE_COMPILER_IS_CYGWIN	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_CYGWIN )$/;"	v
CMAKE_COMPILER_IS_GNUCC	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCC 1)$/;"	v
CMAKE_COMPILER_IS_GNUCXX	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCXX 1)$/;"	v
CMAKE_COMPILER_IS_MINGW	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_MINGW )$/;"	v
CMAKE_COMPILER_IS_MINGW	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_MINGW )$/;"	v
CMAKE_CROSSCOMPILING	CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CXX11_COMPILE_FEATURES	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_att/;"	v
CMAKE_CXX14_COMPILE_FEATURES	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_de/;"	v
CMAKE_CXX17_COMPILE_FEATURES	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")$/;"	v
CMAKE_CXX20_COMPILE_FEATURES	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")$/;"	v
CMAKE_CXX98_COMPILE_FEATURES	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")$/;"	v
CMAKE_CXX_ABI_COMPILED	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_ABI_COMPILED TRUE)$/;"	v
CMAKE_CXX_CL_SHOWINCLUDES_PREFIX	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_CXX_COMPILER	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER "\/usr\/bin\/c++")$/;"	v
CMAKE_CXX_COMPILER_ABI	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ABI "ELF")$/;"	v
CMAKE_CXX_COMPILER_AR	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_AR "\/usr\/bin\/gcc-ar-9")$/;"	v
CMAKE_CXX_COMPILER_ARG1	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ARG1 "")$/;"	v
CMAKE_CXX_COMPILER_ENV_VAR	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")$/;"	v
CMAKE_CXX_COMPILER_FRONTEND_VARIANT	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "")$/;"	v
CMAKE_CXX_COMPILER_ID	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID_RUN	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID_RUN 1)$/;"	v
CMAKE_CXX_COMPILER_LOADED	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_LOADED 1)$/;"	v
CMAKE_CXX_COMPILER_RANLIB	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib-9")$/;"	v
CMAKE_CXX_COMPILER_VERSION	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION "9.4.0")$/;"	v
CMAKE_CXX_COMPILER_VERSION_INTERNAL	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_CXX_COMPILER_WORKS	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WORKS TRUE)$/;"	v
CMAKE_CXX_COMPILER_WRAPPER	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WRAPPER "")$/;"	v
CMAKE_CXX_COMPILE_FEATURES	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias/;"	v
CMAKE_CXX_FLAGS	lib/cn-cbor/cmake/Coveralls.cmake	/^	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -O0 -fprofile-arcs -ftest-coverage")$/;"	v
CMAKE_CXX_IGNORE_EXTENSIONS	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "\/usr\/include\/c++\/9;\/usr\/include\/x86_64-linux-/;"	v
CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-linux-gnu\/9;\/usr\/lib\/x86_64/;"	v
CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_CXX_IMPLICIT_LINK_LIBRARIES	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;gcc_s;gcc;c;gcc_s;gcc")$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_LIBRARY_ARCHITECTURE	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_CXX_LINKER_PREFERENCE	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE 30)$/;"	v
CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)$/;"	v
CMAKE_CXX_PLATFORM_ID	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_PLATFORM_ID "Linux")$/;"	v
CMAKE_CXX_SIMULATE_ID	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_ID "")$/;"	v
CMAKE_CXX_SIMULATE_VERSION	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_VERSION "")$/;"	v
CMAKE_CXX_SIZEOF_DATA_PTR	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_CXX_SOURCE_FILE_EXTENSIONS	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;CPP)$/;"	v
CMAKE_CXX_STANDARD_COMPUTED_DEFAULT	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14")$/;"	v
CMAKE_C_ABI_COMPILED	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_ABI_COMPILED TRUE)$/;"	v
CMAKE_C_CL_SHOWINCLUDES_PREFIX	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_C_COMPILER	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER "\/usr\/bin\/cc")$/;"	v
CMAKE_C_COMPILER_ABI	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ABI "ELF")$/;"	v
CMAKE_C_COMPILER_AR	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_AR "\/usr\/bin\/gcc-ar-9")$/;"	v
CMAKE_C_COMPILER_ARG1	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ARG1 "")$/;"	v
CMAKE_C_COMPILER_ENV_VAR	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ENV_VAR "CC")$/;"	v
CMAKE_C_COMPILER_FRONTEND_VARIANT	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_FRONTEND_VARIANT "")$/;"	v
CMAKE_C_COMPILER_ID	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID	CMakeFiles/client.dir/DependInfo.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID_RUN	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID_RUN 1)$/;"	v
CMAKE_C_COMPILER_LOADED	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_LOADED 1)$/;"	v
CMAKE_C_COMPILER_RANLIB	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib-9")$/;"	v
CMAKE_C_COMPILER_VERSION	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION "9.4.0")$/;"	v
CMAKE_C_COMPILER_VERSION_INTERNAL	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_C_COMPILER_WORKS	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WORKS TRUE)$/;"	v
CMAKE_C_COMPILER_WRAPPER	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WRAPPER "")$/;"	v
CMAKE_C_COMPILE_FEATURES	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macr/;"	v
CMAKE_C_FLAGS	lib/cn-cbor/cmake/Coveralls.cmake	/^	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g -O0 -fprofile-arcs -ftest-coverage")$/;"	v
CMAKE_C_IGNORE_EXTENSIONS	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-linux-gnu\/9\/include;\/usr\/l/;"	v
CMAKE_C_IMPLICIT_LINK_DIRECTORIES	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-linux-gnu\/9;\/usr\/lib\/x86_64-l/;"	v
CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_C_IMPLICIT_LINK_LIBRARIES	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "gcc;gcc_s;c;gcc;gcc_s")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_LIBRARY_ARCHITECTURE	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_C_LINKER_PREFERENCE	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_LINKER_PREFERENCE 10)$/;"	v
CMAKE_C_PLATFORM_ID	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_PLATFORM_ID "Linux")$/;"	v
CMAKE_C_SIMULATE_ID	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_ID "")$/;"	v
CMAKE_C_SIMULATE_VERSION	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_VERSION "")$/;"	v
CMAKE_C_SIZEOF_DATA_PTR	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_C_SOURCE_FILE_EXTENSIONS	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)$/;"	v
CMAKE_C_STANDARD	lib/cn-cbor/CMakeLists.txt	/^  set(CMAKE_C_STANDARD 11)$/;"	v
CMAKE_C_STANDARD_COMPUTED_DEFAULT	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "11")$/;"	v
CMAKE_C_TARGET_INCLUDE_PATH	CMakeFiles/client.dir/DependInfo.cmake	/^set(CMAKE_C_TARGET_INCLUDE_PATH$/;"	v
CMAKE_DEPENDS_CHECK_C	CMakeFiles/client.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_CHECK_C$/;"	v
CMAKE_DEPENDS_GENERATOR	CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")$/;"	v
CMAKE_DEPENDS_LANGUAGES	CMakeFiles/client.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPEND_INFO_FILES	CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPEND_INFO_FILES$/;"	v
CMAKE_FORCE_UNIX_PATHS	CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	CMakeFiles/client.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_HOST_SYSTEM	CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM "Linux-5.11.0-27-generic")$/;"	v
CMAKE_HOST_SYSTEM_NAME	CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_NAME "Linux")$/;"	v
CMAKE_HOST_SYSTEM_PROCESSOR	CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_HOST_SYSTEM_VERSION	CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_VERSION "5.11.0-27-generic")$/;"	v
CMAKE_INSTALL_COMPONENT	cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_CONFIG_NAME	cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "")$/;"	v
CMAKE_INSTALL_MANIFEST	cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")$/;"	v
CMAKE_INSTALL_MANIFEST	cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")$/;"	v
CMAKE_INSTALL_PREFIX	cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_LIBRARY_OUTPUT_DIRECTORY	lib/cn-cbor/CMakeLists.txt	/^set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${dist_dir}\/lib)$/;"	v
CMAKE_LINKER	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_LINKER	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_MAKEFILE_DEPENDS	CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_DEPENDS$/;"	v
CMAKE_MAKEFILE_OUTPUTS	CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_OUTPUTS$/;"	v
CMAKE_MAKEFILE_PRODUCTS	CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_PRODUCTS$/;"	v
CMAKE_MODULE_PATH	lib/cn-cbor/CMakeLists.txt	/^  set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR}\/cmake)$/;"	v
CMAKE_MODULE_PATH	lib/cn-cbor/CMakeLists.txt	/^set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR}\/cmake)$/;"	v
CMAKE_MT	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_MT	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_RANLIB	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RANLIB	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/hrishi\/cbor\/cbor-example\/client")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/hrishi\/cbor\/cbor-example\/client")$/;"	v
CMAKE_RUNTIME_OUTPUT_DIRECTORY	lib/cn-cbor/CMakeLists.txt	/^set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${dist_dir}\/bin)$/;"	v
CMAKE_RUNTIME_OUTPUT_DIRECTORY	lib/cn-cbor/test/CMakeLists.txt	/^set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${dist_dir}\/test)$/;"	v
CMAKE_SIZEOF_VOID_P	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SIZEOF_VOID_P	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SOURCE_DIR	Makefile	/^CMAKE_SOURCE_DIR = \/home\/hrishi\/cbor\/cbor-example\/client$/;"	m
CMAKE_SYSTEM	CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_SYSTEM "Linux-5.11.0-27-generic")$/;"	v
CMAKE_SYSTEM_LOADED	CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_LOADED 1)$/;"	v
CMAKE_SYSTEM_NAME	CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_NAME "Linux")$/;"	v
CMAKE_SYSTEM_PROCESSOR	CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_SYSTEM_VERSION	CMakeFiles/3.16.3/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_VERSION "5.11.0-27-generic")$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	CMakeFiles/client.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_VERBOSE_MAKEFILE	lib/cn-cbor/CMakeLists.txt	/^  set(CMAKE_VERBOSE_MAKEFILE ON)$/;"	v
CN_CALLOC	lib/cn-cbor/src/cbor.h	/^#define CN_CALLOC /;"	d
CN_CALLOC	lib/cn-cbor/src/cbor.h	/^#define CN_CALLOC(/;"	d
CN_CALLOC_CONTEXT	lib/cn-cbor/src/cbor.h	/^#define CN_CALLOC_CONTEXT(/;"	d
CN_CBOR_ALIGN_READS	lib/cn-cbor/CMakeLists.txt	/^option(CN_CBOR_ALIGN_READS "Use memcpy in ntoh*p()" OFF)$/;"	D
CN_CBOR_ARRAY	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_ARRAY,$/;"	e	enum:cn_cbor_type
CN_CBOR_BUILD_DOCS	lib/cn-cbor/CMakeLists.txt	/^option(CN_CBOR_BUILD_DOCS "Create docs using Doxygen" OFF)$/;"	D
CN_CBOR_BUILD_TESTS	lib/cn-cbor/CMakeLists.txt	/^option(CN_CBOR_BUILD_TESTS "Create tests" ON)$/;"	D
CN_CBOR_BYTES	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_BYTES,$/;"	e	enum:cn_cbor_type
CN_CBOR_BYTES_CHUNKED	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_BYTES_CHUNKED,$/;"	e	enum:cn_cbor_type
CN_CBOR_CONFIG_INSTALL_DIR	lib/cn-cbor/CMakeLists.txt	/^set(CN_CBOR_CONFIG_INSTALL_DIR ${CMAKE_INSTALL_LIBDIR}\/cmake\/${PROJECT_NAME})$/;"	v
CN_CBOR_COVERALLS	lib/cn-cbor/CMakeLists.txt	/^    set(CN_CBOR_COVERALLS OFF)$/;"	v
CN_CBOR_COVERALLS	lib/cn-cbor/CMakeLists.txt	/^  set(CN_CBOR_COVERALLS OFF)$/;"	v
CN_CBOR_COVERALLS	lib/cn-cbor/CMakeLists.txt	/^option(CN_CBOR_COVERALLS "Generate coveralls data" ON)$/;"	D
CN_CBOR_COVERALLS_SEND	lib/cn-cbor/CMakeLists.txt	/^    set(CN_CBOR_COVERALLS_SEND OFF)$/;"	v
CN_CBOR_COVERALLS_SEND	lib/cn-cbor/CMakeLists.txt	/^option(CN_CBOR_COVERALLS_SEND "Send data to coveralls site" OFF)$/;"	D
CN_CBOR_DOUBLE	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_DOUBLE,$/;"	e	enum:cn_cbor_type
CN_CBOR_ERR_BREAK_OUTSIDE_INDEF	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_ERR_BREAK_OUTSIDE_INDEF,$/;"	e	enum:cn_cbor_error
CN_CBOR_ERR_FLOAT_NOT_SUPPORTED	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_ERR_FLOAT_NOT_SUPPORTED$/;"	e	enum:cn_cbor_error
CN_CBOR_ERR_INVALID_PARAMETER	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_ERR_INVALID_PARAMETER,$/;"	e	enum:cn_cbor_error
CN_CBOR_ERR_MT_UNDEF_FOR_INDEF	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_ERR_MT_UNDEF_FOR_INDEF,$/;"	e	enum:cn_cbor_error
CN_CBOR_ERR_NOT_ALL_DATA_CONSUMED	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_ERR_NOT_ALL_DATA_CONSUMED,$/;"	e	enum:cn_cbor_error
CN_CBOR_ERR_ODD_SIZE_INDEF_MAP	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_ERR_ODD_SIZE_INDEF_MAP,$/;"	e	enum:cn_cbor_error
CN_CBOR_ERR_OUT_OF_DATA	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_ERR_OUT_OF_DATA,$/;"	e	enum:cn_cbor_error
CN_CBOR_ERR_OUT_OF_MEMORY	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_ERR_OUT_OF_MEMORY,$/;"	e	enum:cn_cbor_error
CN_CBOR_ERR_RESERVED_AI	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_ERR_RESERVED_AI,$/;"	e	enum:cn_cbor_error
CN_CBOR_ERR_WRONG_NESTING_IN_INDEF_STRING	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_ERR_WRONG_NESTING_IN_INDEF_STRING,$/;"	e	enum:cn_cbor_error
CN_CBOR_EXPORT	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^#define CN_CBOR_EXPORT /;"	d
CN_CBOR_EXPORT	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^#define CN_CBOR_EXPORT$/;"	d
CN_CBOR_EXPORT	lib/cn-cbor/src/dll-export.h	/^#define CN_CBOR_EXPORT /;"	d
CN_CBOR_EXPORT	lib/cn-cbor/src/dll-export.h	/^#define CN_CBOR_EXPORT$/;"	d
CN_CBOR_FAIL	lib/cn-cbor/src/cn-cbor.c	/^#define CN_CBOR_FAIL(/;"	d	file:
CN_CBOR_FALSE	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_FALSE,$/;"	e	enum:cn_cbor_type
CN_CBOR_FATAL_WARNINGS	lib/cn-cbor/CMakeLists.txt	/^option(CN_CBOR_FATAL_WARNINGS "Treat build warnings as errors" ON)$/;"	D
CN_CBOR_FLOAT	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_FLOAT,$/;"	e	enum:cn_cbor_type
CN_CBOR_FL_COUNT	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_FL_COUNT = 1,$/;"	e	enum:cn_cbor_flags
CN_CBOR_FL_EXT_DATA	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_FL_EXT_DATA = 0x80$/;"	e	enum:cn_cbor_flags
CN_CBOR_FL_EXT_SELF	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_FL_EXT_SELF = 0x40,$/;"	e	enum:cn_cbor_flags
CN_CBOR_FL_INDEF	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_FL_INDEF = 2,$/;"	e	enum:cn_cbor_flags
CN_CBOR_FL_KEEP_FLOAT_SIZE	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_FL_KEEP_FLOAT_SIZE = 4,$/;"	e	enum:cn_cbor_flags
CN_CBOR_FREE_CONTEXT	lib/cn-cbor/src/cbor.h	/^#define CN_CBOR_FREE_CONTEXT(/;"	d
CN_CBOR_H	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^#define CN_CBOR_H$/;"	d
CN_CBOR_INT	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_INT,$/;"	e	enum:cn_cbor_type
CN_CBOR_INVALID	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_INVALID$/;"	e	enum:cn_cbor_type
CN_CBOR_MAP	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_MAP,$/;"	e	enum:cn_cbor_type
CN_CBOR_NO_ERROR	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_NO_ERROR,$/;"	e	enum:cn_cbor_error
CN_CBOR_NO_FLOATS	lib/cn-cbor/CMakeLists.txt	/^option(CN_CBOR_NO_FLOATS "Build without floating point support" OFF)$/;"	D
CN_CBOR_NULL	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_NULL,$/;"	e	enum:cn_cbor_type
CN_CBOR_OPTIMIZE	lib/cn-cbor/CMakeLists.txt	/^option(CN_CBOR_OPTIMIZE "Optimize for size" OFF)$/;"	D
CN_CBOR_RUN_CLANG_TIDY	lib/cn-cbor/CMakeLists.txt	/^option(CN_CBOR_RUN_CLANG_TIDY "Use Clang-Tidy for static analysis" OFF)$/;"	D
CN_CBOR_SIMPLE	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_SIMPLE,$/;"	e	enum:cn_cbor_type
CN_CBOR_TAG	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_TAG,$/;"	e	enum:cn_cbor_type
CN_CBOR_TEXT	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_TEXT,$/;"	e	enum:cn_cbor_type
CN_CBOR_TEXT_CHUNKED	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_TEXT_CHUNKED,$/;"	e	enum:cn_cbor_type
CN_CBOR_TRUE	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_TRUE,$/;"	e	enum:cn_cbor_type
CN_CBOR_UINT	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_UINT,$/;"	e	enum:cn_cbor_type
CN_CBOR_UNDEF	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	CN_CBOR_UNDEF,$/;"	e	enum:cn_cbor_type
CN_CBOR_USE_CONTEXT	lib/cn-cbor/CMakeLists.txt	/^option(CN_CBOR_USE_CONTEXT "Use context pointer for CBOR functions" OFF)$/;"	D
CN_CBOR_VERBOSE	lib/cn-cbor/CMakeLists.txt	/^option(CN_CBOR_VERBOSE "Produce verbose makefile output" OFF)$/;"	D
CN_CBOR_VERSION	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^#define CN_CBOR_VERSION /;"	d
CN_CREATE_C	lib/cn-cbor/src/cn-create.c	/^#define CN_CREATE_C$/;"	d	file:
CN_ENCODER_C	lib/cn-cbor/src/cn-encoder.c	/^#define CN_ENCODER_C$/;"	d	file:
CN_FREE	lib/cn-cbor/src/cbor.h	/^#define CN_FREE /;"	d
CN_FREE	lib/cn-cbor/src/cbor.h	/^#define CN_FREE(/;"	d
CN_INCLUDE_DUMPER	lib/cn-cbor/src/cn-print.c	/^#define CN_INCLUDE_DUMPER$/;"	d	file:
CN_PRINT_C	lib/cn-cbor/src/cn-print.c	/^#define CN_PRINT_C$/;"	d	file:
CN_VERSION	lib/cn-cbor/CMakeLists.txt	/^set(CN_VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")$/;"	v
COMPILERSUPPORT_H	lib/tinycbor/src/compilersupport_p.h	/^#define COMPILERSUPPORT_H$/;"	d
COMPILER_ID	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
CONST_CAST	lib/tinycbor/src/compilersupport_p.h	/^#  define CONST_CAST(/;"	d
CONTEXT_NULL	lib/cn-cbor/test/cbor_test.c	/^#define CONTEXT_NULL /;"	d	file:
CONTEXT_NULL	lib/cn-cbor/test/cbor_test.c	/^#define CONTEXT_NULL$/;"	d	file:
CONTEXT_NULL_COMMA	lib/cn-cbor/test/cbor_test.c	/^#define CONTEXT_NULL_COMMA /;"	d	file:
CONTEXT_NULL_COMMA	lib/cn-cbor/test/cbor_test.c	/^#define CONTEXT_NULL_COMMA$/;"	d	file:
COVERAGE_SRCS	lib/cn-cbor/CMakeLists.txt	/^  set(COVERAGE_SRCS "")$/;"	v
COVERAGE_SRCS	lib/cn-cbor/cmake/Coveralls.cmake	/^		set(COVERAGE_SRCS "${COVERAGE_SRCS}*${COVERAGE_SRC}")$/;"	v	function:coveralls_setup
COVERAGE_SRCS	lib/cn-cbor/cmake/Coveralls.cmake	/^	set(COVERAGE_SRCS "")$/;"	v	function:coveralls_setup
COVERAGE_SRCS_REMAINING	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^set(COVERAGE_SRCS_REMAINING ${COVERAGE_SRCS})$/;"	v
COVERAGE_SRCS_TMP	lib/cn-cbor/cmake/Coveralls.cmake	/^	set(COVERAGE_SRCS_TMP ${_COVERAGE_SRCS})$/;"	v	function:coveralls_setup
COVERALLS_FILE	lib/cn-cbor/cmake/Coveralls.cmake	/^	set(COVERALLS_FILE ${PROJECT_BINARY_DIR}\/coveralls.json)$/;"	v	function:coveralls_setup
CPACK_GENERATOR	lib/cn-cbor/CMakeLists.txt	/^set(CPACK_GENERATOR "TGZ")$/;"	v
CPACK_PACKAGE_DESCRIPTION_FILE	lib/cn-cbor/CMakeLists.txt	/^set(CPACK_PACKAGE_DESCRIPTION_FILE ${CMAKE_CURRENT_SOURCE_DIR}\/README.md)$/;"	v
CPACK_PACKAGE_VERSION	lib/cn-cbor/CMakeLists.txt	/^set(CPACK_PACKAGE_VERSION "${PROJECT_VERSION}")$/;"	v
CPACK_RESOURCE_FILE_LICENSE	lib/cn-cbor/CMakeLists.txt	/^set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}\/LICENSE")$/;"	v
CPACK_SOURCE_GENERATOR	lib/cn-cbor/CMakeLists.txt	/^set(CPACK_SOURCE_GENERATOR "TGZ")$/;"	v
CPACK_SOURCE_IGNORE_FILES	lib/cn-cbor/CMakeLists.txt	/^set(CPACK_SOURCE_IGNORE_FILES "\/\\\\\\\\.git\/")$/;"	v
CPPFLAGS	lib/tinycbor/tools/Makefile	/^CPPFLAGS = -I..\/src$/;"	m
CPY	lib/cn-cbor/test/file_test.c	/^#define CPY(/;"	d	file:
CPY	lib/cn-cbor/test/test.c	/^#define CPY(/;"	d	file:
CTEST	lib/cn-cbor/test/cbor_test.c	/^CTEST(cbor, array)$/;"	f
CTEST	lib/cn-cbor/test/cbor_test.c	/^CTEST(cbor, array_errors)$/;"	f
CTEST	lib/cn-cbor/test/cbor_test.c	/^CTEST(cbor, create)$/;"	f
CTEST	lib/cn-cbor/test/cbor_test.c	/^CTEST(cbor, create_encode)$/;"	f
CTEST	lib/cn-cbor/test/cbor_test.c	/^CTEST(cbor, error)$/;"	f
CTEST	lib/cn-cbor/test/cbor_test.c	/^CTEST(cbor, fail)$/;"	f
CTEST	lib/cn-cbor/test/cbor_test.c	/^CTEST(cbor, fail2)$/;"	f
CTEST	lib/cn-cbor/test/cbor_test.c	/^CTEST(cbor, float)$/;"	f
CTEST	lib/cn-cbor/test/cbor_test.c	/^CTEST(cbor, getset)$/;"	f
CTEST	lib/cn-cbor/test/cbor_test.c	/^CTEST(cbor, map_errors)$/;"	f
CTEST	lib/cn-cbor/test/cbor_test.c	/^CTEST(cbor, parse)$/;"	f
CTEST	lib/cn-cbor/test/cbor_test.c	/^CTEST(cbor, parse_normalize)$/;"	f
CTEST	lib/cn-cbor/test/ctest.h	/^#define CTEST(/;"	d
CTEST	lib/cn-cbor/test/ctest.h	/^static CTEST(suite, test) {}$/;"	f
CTEST2	lib/cn-cbor/test/ctest.h	/^#define CTEST2(/;"	d
CTEST2_SKIP	lib/cn-cbor/test/ctest.h	/^#define CTEST2_SKIP(/;"	d
CTEST_DATA	lib/cn-cbor/test/ctest.h	/^#define CTEST_DATA(/;"	d
CTEST_ERR	lib/cn-cbor/test/ctest.h	/^void CTEST_ERR(char* fmt, ...)$/;"	f	typeref:typename:void
CTEST_H	lib/cn-cbor/test/ctest.h	/^#define CTEST_H$/;"	d
CTEST_LOG	lib/cn-cbor/test/ctest.h	/^void CTEST_LOG(char* fmt, ...)$/;"	f	typeref:typename:void
CTEST_MAIN	lib/cn-cbor/test/cbor_test.c	/^#define CTEST_MAIN$/;"	d	file:
CTEST_SETUP	lib/cn-cbor/test/ctest.h	/^#define CTEST_SETUP(/;"	d
CTEST_SKIP	lib/cn-cbor/test/ctest.h	/^#define CTEST_SKIP(/;"	d
CTEST_TEARDOWN	lib/cn-cbor/test/ctest.h	/^#define CTEST_TEARDOWN(/;"	d
CXX_STD	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#      define CXX_STD /;"	d	file:
CXX_STD	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#    define CXX_STD /;"	d	file:
CXX_STD	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define CXX_STD /;"	d	file:
CYGWIN	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(CYGWIN 1)$/;"	v
CYGWIN	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(CYGWIN 1)$/;"	v
C_DIALECT	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT /;"	d	file:
C_DIALECT	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT$/;"	d	file:
C_DIALECT	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define C_DIALECT /;"	d	file:
CarEngine	lib/QCBOR/example.c	/^} CarEngine;$/;"	t	typeref:struct:__anon03c895ae0108	file:
CborArrayType	lib/tinycbor/src/cbor.h	/^    CborArrayType       = 0x80,$/;"	e	enum:CborType
CborBase64Tag	lib/tinycbor/src/cbor.h	/^    CborBase64Tag                  = 34,$/;"	e	enum:CborKnownTags
CborBase64Tag	lib/tinycbor/src/cbor.h	/^#define CborBase64Tag /;"	d
CborBase64urlTag	lib/tinycbor/src/cbor.h	/^    CborBase64urlTag               = 33,$/;"	e	enum:CborKnownTags
CborBase64urlTag	lib/tinycbor/src/cbor.h	/^#define CborBase64urlTag /;"	d
CborBigfloatTag	lib/tinycbor/src/cbor.h	/^    CborBigfloatTag                = 5,$/;"	e	enum:CborKnownTags
CborBigfloatTag	lib/tinycbor/src/cbor.h	/^#define CborBigfloatTag /;"	d
CborBooleanType	lib/tinycbor/src/cbor.h	/^    CborBooleanType     = 0xf5,$/;"	e	enum:CborType
CborByteStringType	lib/tinycbor/src/cbor.h	/^    CborByteStringType  = 0x40,$/;"	e	enum:CborType
CborCOSE_Encrypt0Tag	lib/tinycbor/src/cbor.h	/^    CborCOSE_Encrypt0Tag           = 16,$/;"	e	enum:CborKnownTags
CborCOSE_Encrypt0Tag	lib/tinycbor/src/cbor.h	/^#define CborCOSE_Encrypt0Tag /;"	d
CborCOSE_EncryptTag	lib/tinycbor/src/cbor.h	/^    CborCOSE_EncryptTag            = 96,$/;"	e	enum:CborKnownTags
CborCOSE_EncryptTag	lib/tinycbor/src/cbor.h	/^#define CborCOSE_EncryptTag /;"	d
CborCOSE_Mac0Tag	lib/tinycbor/src/cbor.h	/^    CborCOSE_Mac0Tag               = 17,$/;"	e	enum:CborKnownTags
CborCOSE_Mac0Tag	lib/tinycbor/src/cbor.h	/^#define CborCOSE_Mac0Tag /;"	d
CborCOSE_MacTag	lib/tinycbor/src/cbor.h	/^    CborCOSE_MacTag                = 97,$/;"	e	enum:CborKnownTags
CborCOSE_MacTag	lib/tinycbor/src/cbor.h	/^#define CborCOSE_MacTag /;"	d
CborCOSE_Sign1Tag	lib/tinycbor/src/cbor.h	/^    CborCOSE_Sign1Tag              = 18,$/;"	e	enum:CborKnownTags
CborCOSE_Sign1Tag	lib/tinycbor/src/cbor.h	/^#define CborCOSE_Sign1Tag /;"	d
CborCOSE_SignTag	lib/tinycbor/src/cbor.h	/^    CborCOSE_SignTag               = 98,$/;"	e	enum:CborKnownTags
CborCOSE_SignTag	lib/tinycbor/src/cbor.h	/^#define CborCOSE_SignTag /;"	d
CborConvertAddMetadata	lib/tinycbor/src/cborjson.h	/^    CborConvertAddMetadata = 1,$/;"	e	enum:CborToJsonFlags
CborConvertByteStringsToBase64Url	lib/tinycbor/src/cborjson.h	/^    CborConvertByteStringsToBase64Url = 4,$/;"	e	enum:CborToJsonFlags
CborConvertDefaultFlags	lib/tinycbor/src/cborjson.h	/^    CborConvertDefaultFlags = 0$/;"	e	enum:CborToJsonFlags
CborConvertIgnoreTags	lib/tinycbor/src/cborjson.h	/^    CborConvertIgnoreTags = 0,$/;"	e	enum:CborToJsonFlags
CborConvertObeyByteStringTags	lib/tinycbor/src/cborjson.h	/^    CborConvertObeyByteStringTags = 0,$/;"	e	enum:CborToJsonFlags
CborConvertRequireMapStringKeys	lib/tinycbor/src/cborjson.h	/^    CborConvertRequireMapStringKeys = 0,$/;"	e	enum:CborToJsonFlags
CborConvertStringifyMapKeys	lib/tinycbor/src/cborjson.h	/^    CborConvertStringifyMapKeys = 8,$/;"	e	enum:CborToJsonFlags
CborConvertTagsToObjects	lib/tinycbor/src/cborjson.h	/^    CborConvertTagsToObjects = 2,$/;"	e	enum:CborToJsonFlags
CborDateTimeStringTag	lib/tinycbor/src/cbor.h	/^    CborDateTimeStringTag          = 0,$/;"	e	enum:CborKnownTags
CborDateTimeStringTag	lib/tinycbor/src/cbor.h	/^#define CborDateTimeStringTag /;"	d
CborDecimalTag	lib/tinycbor/src/cbor.h	/^    CborDecimalTag                 = 4,$/;"	e	enum:CborKnownTags
CborDecimalTag	lib/tinycbor/src/cbor.h	/^#define CborDecimalTag /;"	d
CborDoubleType	lib/tinycbor/src/cbor.h	/^    CborDoubleType      = 0xfb,$/;"	e	enum:CborType
CborEncodedCborTag	lib/tinycbor/src/cbor.h	/^    CborEncodedCborTag             = 24,$/;"	e	enum:CborKnownTags
CborEncodedCborTag	lib/tinycbor/src/cbor.h	/^#define CborEncodedCborTag /;"	d
CborEncoder	lib/tinycbor/src/cbor.h	/^struct CborEncoder$/;"	s
CborEncoder	lib/tinycbor/src/cbor.h	/^typedef struct CborEncoder CborEncoder;$/;"	t	typeref:struct:CborEncoder
CborEncoderAppendCborData	lib/tinycbor/src/cbor.h	/^    CborEncoderAppendCborData = 0,$/;"	e	enum:CborEncoderAppendType
CborEncoderAppendStringData	lib/tinycbor/src/cbor.h	/^    CborEncoderAppendStringData = 1$/;"	e	enum:CborEncoderAppendType
CborEncoderAppendType	lib/tinycbor/src/cbor.h	/^typedef enum CborEncoderAppendType$/;"	g
CborEncoderAppendType	lib/tinycbor/src/cbor.h	/^} CborEncoderAppendType;$/;"	t	typeref:enum:CborEncoderAppendType
CborEncoderFlags	lib/tinycbor/src/cbor.h	/^enum CborEncoderFlags$/;"	g
CborEncoderWriteFunction	lib/tinycbor/src/cbor.h	/^typedef CborError (*CborEncoderWriteFunction)(void *, const void *, size_t, CborEncoderAppendTyp/;"	t	typeref:typename:CborError (*)(void *,const void *,size_t,CborEncoderAppendType)
CborError	lib/tinycbor/src/cbor.h	/^typedef enum CborError {$/;"	g
CborError	lib/tinycbor/src/cbor.h	/^} CborError;$/;"	t	typeref:enum:CborError
CborErrorAdvancePastEOF	lib/tinycbor/src/cbor.h	/^    CborErrorAdvancePastEOF,$/;"	e	enum:CborError
CborErrorDataTooLarge	lib/tinycbor/src/cbor.h	/^    CborErrorDataTooLarge = 1024,$/;"	e	enum:CborError
CborErrorDuplicateObjectKeys	lib/tinycbor/src/cbor.h	/^    CborErrorDuplicateObjectKeys,$/;"	e	enum:CborError
CborErrorExcludedType	lib/tinycbor/src/cbor.h	/^    CborErrorExcludedType,$/;"	e	enum:CborError
CborErrorExcludedValue	lib/tinycbor/src/cbor.h	/^    CborErrorExcludedValue,$/;"	e	enum:CborError
CborErrorGarbageAtEnd	lib/tinycbor/src/cbor.h	/^    CborErrorGarbageAtEnd = 256,$/;"	e	enum:CborError
CborErrorIO	lib/tinycbor/src/cbor.h	/^    CborErrorIO,$/;"	e	enum:CborError
CborErrorIllegalNumber	lib/tinycbor/src/cbor.h	/^    CborErrorIllegalNumber,$/;"	e	enum:CborError
CborErrorIllegalSimpleType	lib/tinycbor/src/cbor.h	/^    CborErrorIllegalSimpleType,     \/* types of value less than 32 encoded in two bytes *\/$/;"	e	enum:CborError
CborErrorIllegalType	lib/tinycbor/src/cbor.h	/^    CborErrorIllegalType,           \/* type not allowed here *\/$/;"	e	enum:CborError
CborErrorImproperValue	lib/tinycbor/src/cbor.h	/^    CborErrorImproperValue,$/;"	e	enum:CborError
CborErrorInappropriateTagForType	lib/tinycbor/src/cbor.h	/^    CborErrorInappropriateTagForType,$/;"	e	enum:CborError
CborErrorInternalError	lib/tinycbor/src/cbor.h	/^    CborErrorInternalError = (int) (~0U \/ 2)    \/* INT_MAX on two's complement machines *\/$/;"	e	enum:CborError
CborErrorInvalidUtf8TextString	lib/tinycbor/src/cbor.h	/^    CborErrorInvalidUtf8TextString,$/;"	e	enum:CborError
CborErrorJsonNotImplemented	lib/tinycbor/src/cbor.h	/^    CborErrorJsonNotImplemented,$/;"	e	enum:CborError
CborErrorJsonObjectKeyIsAggregate	lib/tinycbor/src/cbor.h	/^    CborErrorJsonObjectKeyIsAggregate = 1280,$/;"	e	enum:CborError
CborErrorJsonObjectKeyNotString	lib/tinycbor/src/cbor.h	/^    CborErrorJsonObjectKeyNotString,$/;"	e	enum:CborError
CborErrorMapKeyNotString	lib/tinycbor/src/cbor.h	/^    CborErrorMapKeyNotString,$/;"	e	enum:CborError
CborErrorMapKeysNotUnique	lib/tinycbor/src/cbor.h	/^    CborErrorMapKeysNotUnique,$/;"	e	enum:CborError
CborErrorMapNotSorted	lib/tinycbor/src/cbor.h	/^    CborErrorMapNotSorted,$/;"	e	enum:CborError
CborErrorNestingTooDeep	lib/tinycbor/src/cbor.h	/^    CborErrorNestingTooDeep,$/;"	e	enum:CborError
CborErrorNoMoreStringChunks	lib/tinycbor/src/cbor.h	/^    CborErrorNoMoreStringChunks,$/;"	e	enum:CborError
CborErrorOutOfMemory	lib/tinycbor/src/cbor.h	/^    CborErrorOutOfMemory = (int) (~0U \/ 2 + 1),$/;"	e	enum:CborError
CborErrorOverlongEncoding	lib/tinycbor/src/cbor.h	/^    CborErrorOverlongEncoding,$/;"	e	enum:CborError
CborErrorTooFewItems	lib/tinycbor/src/cbor.h	/^    CborErrorTooFewItems,$/;"	e	enum:CborError
CborErrorTooManyItems	lib/tinycbor/src/cbor.h	/^    CborErrorTooManyItems = 768,$/;"	e	enum:CborError
CborErrorUnexpectedBreak	lib/tinycbor/src/cbor.h	/^    CborErrorUnexpectedBreak,$/;"	e	enum:CborError
CborErrorUnexpectedEOF	lib/tinycbor/src/cbor.h	/^    CborErrorUnexpectedEOF,$/;"	e	enum:CborError
CborErrorUnimplementedValidation	lib/tinycbor/src/cbor.h	/^    CborErrorUnimplementedValidation,$/;"	e	enum:CborError
CborErrorUnknownLength	lib/tinycbor/src/cbor.h	/^    CborErrorUnknownLength,         \/* request for length in array, map, or string with indeter/;"	e	enum:CborError
CborErrorUnknownSimpleType	lib/tinycbor/src/cbor.h	/^    CborErrorUnknownSimpleType = 512,$/;"	e	enum:CborError
CborErrorUnknownTag	lib/tinycbor/src/cbor.h	/^    CborErrorUnknownTag,$/;"	e	enum:CborError
CborErrorUnknownType	lib/tinycbor/src/cbor.h	/^    CborErrorUnknownType,           \/* can only happen in major type 7 *\/$/;"	e	enum:CborError
CborErrorUnsupportedType	lib/tinycbor/src/cbor.h	/^    CborErrorUnsupportedType,$/;"	e	enum:CborError
CborExpectedBase16Tag	lib/tinycbor/src/cbor.h	/^    CborExpectedBase16Tag          = 23,$/;"	e	enum:CborKnownTags
CborExpectedBase16Tag	lib/tinycbor/src/cbor.h	/^#define CborExpectedBase16Tag /;"	d
CborExpectedBase64Tag	lib/tinycbor/src/cbor.h	/^    CborExpectedBase64Tag          = 22,$/;"	e	enum:CborKnownTags
CborExpectedBase64Tag	lib/tinycbor/src/cbor.h	/^#define CborExpectedBase64Tag /;"	d
CborExpectedBase64urlTag	lib/tinycbor/src/cbor.h	/^    CborExpectedBase64urlTag       = 21,$/;"	e	enum:CborKnownTags
CborExpectedBase64urlTag	lib/tinycbor/src/cbor.h	/^#define CborExpectedBase64urlTag /;"	d
CborFloatType	lib/tinycbor/src/cbor.h	/^    CborFloatType       = 0xfa,$/;"	e	enum:CborType
CborHalfFloatType	lib/tinycbor/src/cbor.h	/^    CborHalfFloatType   = 0xf9,$/;"	e	enum:CborType
CborIndefiniteLength	lib/tinycbor/src/cbor.h	/^static const size_t CborIndefiniteLength = SIZE_MAX;$/;"	v	typeref:typename:const size_t
CborIntegerType	lib/tinycbor/src/cbor.h	/^    CborIntegerType     = 0x00,$/;"	e	enum:CborType
CborInvalidType	lib/tinycbor/src/cbor.h	/^    CborInvalidType     = 0xff              \/* equivalent to the break byte, so it will never b/;"	e	enum:CborType
CborIteratorFlag_BeforeFirstStringChunk	lib/tinycbor/src/cbor.h	/^    CborIteratorFlag_BeforeFirstStringChunk = 0x04,$/;"	e	enum:CborParserIteratorFlags
CborIteratorFlag_ContainerIsMap	lib/tinycbor/src/cbor.h	/^    CborIteratorFlag_ContainerIsMap         = 0x20,$/;"	e	enum:CborParserIteratorFlags
CborIteratorFlag_ContainerIsMap_	lib/tinycbor/src/cbor.h	/^    CborIteratorFlag_ContainerIsMap_        = 0x20$/;"	e	enum:CborEncoderFlags
CborIteratorFlag_IntegerValueIs64Bit	lib/tinycbor/src/cbor.h	/^    CborIteratorFlag_IntegerValueIs64Bit    = 0x01,$/;"	e	enum:CborParserIteratorFlags
CborIteratorFlag_IntegerValueTooLarge	lib/tinycbor/src/cbor.h	/^    CborIteratorFlag_IntegerValueTooLarge   = 0x02,$/;"	e	enum:CborParserIteratorFlags
CborIteratorFlag_IteratingStringChunks	lib/tinycbor/src/cbor.h	/^    CborIteratorFlag_IteratingStringChunks  = 0x08,$/;"	e	enum:CborParserIteratorFlags
CborIteratorFlag_NegativeInteger	lib/tinycbor/src/cbor.h	/^    CborIteratorFlag_NegativeInteger        = 0x04,$/;"	e	enum:CborParserIteratorFlags
CborIteratorFlag_NextIsMapKey	lib/tinycbor/src/cbor.h	/^    CborIteratorFlag_NextIsMapKey           = 0x40$/;"	e	enum:CborParserIteratorFlags
CborIteratorFlag_UnknownLength	lib/tinycbor/src/cbor.h	/^    CborIteratorFlag_UnknownLength          = 0x10,$/;"	e	enum:CborParserIteratorFlags
CborIteratorFlag_WriterFunction	lib/tinycbor/src/cbor.h	/^    CborIteratorFlag_WriterFunction         = 0x01,$/;"	e	enum:CborEncoderFlags
CborKnownTags	lib/tinycbor/src/cbor.h	/^typedef enum CborKnownTags {$/;"	g
CborKnownTags	lib/tinycbor/src/cbor.h	/^} CborKnownTags;$/;"	t	typeref:enum:CborKnownTags
CborMajorTypes	lib/tinycbor/src/cborinternal_p.h	/^typedef enum CborMajorTypes {$/;"	g
CborMajorTypes	lib/tinycbor/src/cborinternal_p.h	/^} CborMajorTypes;$/;"	t	typeref:enum:CborMajorTypes
CborMapType	lib/tinycbor/src/cbor.h	/^    CborMapType         = 0xa0,$/;"	e	enum:CborType
CborMimeMessageTag	lib/tinycbor/src/cbor.h	/^    CborMimeMessageTag             = 36,$/;"	e	enum:CborKnownTags
CborMimeMessageTag	lib/tinycbor/src/cbor.h	/^#define CborMimeMessageTag /;"	d
CborNegativeBignumTag	lib/tinycbor/src/cbor.h	/^    CborNegativeBignumTag          = 3,$/;"	e	enum:CborKnownTags
CborNegativeBignumTag	lib/tinycbor/src/cbor.h	/^#define CborNegativeBignumTag /;"	d
CborNoError	lib/tinycbor/src/cbor.h	/^    CborNoError = 0,$/;"	e	enum:CborError
CborNullType	lib/tinycbor/src/cbor.h	/^    CborNullType        = 0xf6,$/;"	e	enum:CborType
CborParser	lib/tinycbor/src/cbor.h	/^struct CborParser$/;"	s
CborParser	lib/tinycbor/src/cbor.h	/^typedef struct CborParser CborParser;$/;"	t	typeref:struct:CborParser
CborParserFlag_ExternalSource	lib/tinycbor/src/cbor.h	/^    CborParserFlag_ExternalSource           = 0x01$/;"	e	enum:CborParserGlobalFlags
CborParserGlobalFlags	lib/tinycbor/src/cbor.h	/^enum CborParserGlobalFlags$/;"	g
CborParserIteratorFlags	lib/tinycbor/src/cbor.h	/^enum CborParserIteratorFlags$/;"	g
CborParserOperations	lib/tinycbor/src/cbor.h	/^struct CborParserOperations$/;"	s
CborPositiveBignumTag	lib/tinycbor/src/cbor.h	/^    CborPositiveBignumTag          = 2,$/;"	e	enum:CborKnownTags
CborPositiveBignumTag	lib/tinycbor/src/cbor.h	/^#define CborPositiveBignumTag /;"	d
CborPrettyDefaultFlags	lib/tinycbor/src/cbor.h	/^    CborPrettyDefaultFlags          = CborPrettyIndicateIndeterminateLength$/;"	e	enum:CborPrettyFlags
CborPrettyFlags	lib/tinycbor/src/cbor.h	/^enum CborPrettyFlags {$/;"	g
CborPrettyIndicateIndeterminateLength	lib/tinycbor/src/cbor.h	/^    CborPrettyIndicateIndeterminateLength   = 0x02,$/;"	e	enum:CborPrettyFlags
CborPrettyIndicateIndetermineLength	lib/tinycbor/src/cbor.h	/^    CborPrettyIndicateIndetermineLength     = CborPrettyIndicateIndeterminateLength, \/* depreca/;"	e	enum:CborPrettyFlags
CborPrettyIndicateOverlongNumbers	lib/tinycbor/src/cbor.h	/^    CborPrettyIndicateOverlongNumbers       = 0x04,$/;"	e	enum:CborPrettyFlags
CborPrettyMergeStringFragments	lib/tinycbor/src/cbor.h	/^    CborPrettyMergeStringFragments          = 0,$/;"	e	enum:CborPrettyFlags
CborPrettyNumericEncodingIndicators	lib/tinycbor/src/cbor.h	/^    CborPrettyNumericEncodingIndicators     = 0x01,$/;"	e	enum:CborPrettyFlags
CborPrettyShowStringFragments	lib/tinycbor/src/cbor.h	/^    CborPrettyShowStringFragments           = 0x100,$/;"	e	enum:CborPrettyFlags
CborPrettyTextualEncodingIndicators	lib/tinycbor/src/cbor.h	/^    CborPrettyTextualEncodingIndicators     = 0,$/;"	e	enum:CborPrettyFlags
CborRegularExpressionTag	lib/tinycbor/src/cbor.h	/^    CborRegularExpressionTag       = 35,$/;"	e	enum:CborKnownTags
CborRegularExpressionTag	lib/tinycbor/src/cbor.h	/^#define CborRegularExpressionTag /;"	d
CborSignatureTag	lib/tinycbor/src/cbor.h	/^    CborSignatureTag               = 55799$/;"	e	enum:CborKnownTags
CborSignatureTag	lib/tinycbor/src/cbor.h	/^#define CborSignatureTag /;"	d
CborSimpleType	lib/tinycbor/src/cbor.h	/^    CborSimpleType      = 0xe0,$/;"	e	enum:CborType
CborSimpleTypes	lib/tinycbor/src/cborinternal_p.h	/^typedef enum CborSimpleTypes {$/;"	g
CborSimpleTypes	lib/tinycbor/src/cborinternal_p.h	/^} CborSimpleTypes;$/;"	t	typeref:enum:CborSimpleTypes
CborStreamFunction	lib/tinycbor/src/cbor.h	/^typedef CborError (*CborStreamFunction)(void *token, const char *fmt, ...)$/;"	t	typeref:typename:CborError (*)(void * token,const char * fmt,...)
CborTag	lib/tinycbor/src/cbor.h	/^typedef uint64_t CborTag;$/;"	t	typeref:typename:uint64_t
CborTagType	lib/tinycbor/src/cbor.h	/^    CborTagType         = 0xc0,$/;"	e	enum:CborType
CborTextStringType	lib/tinycbor/src/cbor.h	/^    CborTextStringType  = 0x60,$/;"	e	enum:CborType
CborToJsonFlags	lib/tinycbor/src/cborjson.h	/^enum CborToJsonFlags$/;"	g
CborType	lib/tinycbor/src/cbor.h	/^typedef enum CborType {$/;"	g
CborType	lib/tinycbor/src/cbor.h	/^} CborType;$/;"	t	typeref:enum:CborType
CborUndefinedType	lib/tinycbor/src/cbor.h	/^    CborUndefinedType   = 0xf7,$/;"	e	enum:CborType
CborUnixTime_tTag	lib/tinycbor/src/cbor.h	/^    CborUnixTime_tTag              = 1,$/;"	e	enum:CborKnownTags
CborUnixTime_tTag	lib/tinycbor/src/cbor.h	/^#define CborUnixTime_tTag /;"	d
CborUnknownError	lib/tinycbor/src/cbor.h	/^    CborUnknownError,$/;"	e	enum:CborError
CborUrlTag	lib/tinycbor/src/cbor.h	/^    CborUrlTag                     = 32,$/;"	e	enum:CborKnownTags
CborUrlTag	lib/tinycbor/src/cbor.h	/^#define CborUrlTag /;"	d
CborValidateBasic	lib/tinycbor/src/cbor.h	/^    CborValidateBasic                       = 0$/;"	e	enum:CborValidationFlags
CborValidateCanonicalFormat	lib/tinycbor/src/cbor.h	/^    CborValidateCanonicalFormat             = 0x0fff,$/;"	e	enum:CborValidationFlags
CborValidateCompleteData	lib/tinycbor/src/cbor.h	/^    CborValidateCompleteData                = (int)0x80000000,$/;"	e	enum:CborValidationFlags
CborValidateFiniteFloatingPoint	lib/tinycbor/src/cbor.h	/^    CborValidateFiniteFloatingPoint         = 0x800000,$/;"	e	enum:CborValidationFlags
CborValidateMapIsSorted	lib/tinycbor/src/cbor.h	/^    CborValidateMapIsSorted                 = 0x0200 | CborValidateNoIndeterminateLength,$/;"	e	enum:CborValidationFlags
CborValidateMapKeysAreString	lib/tinycbor/src/cbor.h	/^    CborValidateMapKeysAreString            = 0x100000,$/;"	e	enum:CborValidationFlags
CborValidateMapKeysAreUnique	lib/tinycbor/src/cbor.h	/^    CborValidateMapKeysAreUnique            = 0x1000 | CborValidateMapIsSorted,$/;"	e	enum:CborValidationFlags
CborValidateNoIndeterminateLength	lib/tinycbor/src/cbor.h	/^    CborValidateNoIndeterminateLength       = 0x0100,$/;"	e	enum:CborValidationFlags
CborValidateNoTags	lib/tinycbor/src/cbor.h	/^    CborValidateNoTags                      = 0x400000,$/;"	e	enum:CborValidationFlags
CborValidateNoUndefined	lib/tinycbor/src/cbor.h	/^    CborValidateNoUndefined                 = 0x200000,$/;"	e	enum:CborValidationFlags
CborValidateNoUnknownSimpleTypes	lib/tinycbor/src/cbor.h	/^    CborValidateNoUnknownSimpleTypes        = 0x8000000 | CborValidateNoUnknownSimpleTypesSA,$/;"	e	enum:CborValidationFlags
CborValidateNoUnknownSimpleTypesSA	lib/tinycbor/src/cbor.h	/^    CborValidateNoUnknownSimpleTypesSA      = 0x4000000,$/;"	e	enum:CborValidationFlags
CborValidateNoUnknownTags	lib/tinycbor/src/cbor.h	/^    CborValidateNoUnknownTags               = 0x40000000 | CborValidateNoUnknownTagsSR,$/;"	e	enum:CborValidationFlags
CborValidateNoUnknownTagsSA	lib/tinycbor/src/cbor.h	/^    CborValidateNoUnknownTagsSA             = 0x10000000,$/;"	e	enum:CborValidationFlags
CborValidateNoUnknownTagsSR	lib/tinycbor/src/cbor.h	/^    CborValidateNoUnknownTagsSR             = 0x20000000 | CborValidateNoUnknownTagsSA,$/;"	e	enum:CborValidationFlags
CborValidateShortestFloatingPoint	lib/tinycbor/src/cbor.h	/^    CborValidateShortestFloatingPoint       = 0x0002,$/;"	e	enum:CborValidationFlags
CborValidateShortestIntegrals	lib/tinycbor/src/cbor.h	/^    CborValidateShortestIntegrals           = 0x0001,$/;"	e	enum:CborValidationFlags
CborValidateShortestNumbers	lib/tinycbor/src/cbor.h	/^    CborValidateShortestNumbers             = CborValidateShortestIntegrals | CborValidateShorte/;"	e	enum:CborValidationFlags
CborValidateStrictMode	lib/tinycbor/src/cbor.h	/^    CborValidateStrictMode                  = 0xfff00,$/;"	e	enum:CborValidationFlags
CborValidateStrictest	lib/tinycbor/src/cbor.h	/^    CborValidateStrictest                   = (int)~0U,$/;"	e	enum:CborValidationFlags
CborValidateTagUse	lib/tinycbor/src/cbor.h	/^    CborValidateTagUse                      = 0x2000,$/;"	e	enum:CborValidationFlags
CborValidateUtf8	lib/tinycbor/src/cbor.h	/^    CborValidateUtf8                        = 0x4000,$/;"	e	enum:CborValidationFlags
CborValidationFlags	lib/tinycbor/src/cbor.h	/^enum CborValidationFlags {$/;"	g
CborValue	lib/tinycbor/src/cbor.h	/^struct CborValue$/;"	s
CborValue	lib/tinycbor/src/cbor.h	/^typedef struct CborValue CborValue;$/;"	t	typeref:struct:CborValue
Changes from CAF Version	lib/QCBOR/README.md	/^## Changes from CAF Version$/;"	s
CheckBigString	lib/QCBOR/test/qcbor_decode_tests.c	/^static int CheckBigString(UsefulBufC BigString)$/;"	f	typeref:typename:int	file:
CheckCSRMaps	lib/QCBOR/test/qcbor_decode_tests.c	/^static int32_t CheckCSRMaps(QCBORDecodeContext *pDC)$/;"	f	typeref:typename:int32_t	file:
CheckDouble	lib/QCBOR/test/float_tests.c	/^inline static bool CheckDouble(double d, uint64_t u)$/;"	f	typeref:typename:bool	file:
CheckEmpties	lib/QCBOR/test/qcbor_decode_tests.c	/^static int32_t CheckEmpties(UsefulBufC input, bool bCheckCounts)$/;"	f	typeref:typename:int32_t	file:
CheckItemWithIntLabel	lib/QCBOR/test/qcbor_decode_tests.c	/^static int32_t CheckItemWithIntLabel(QCBORDecodeContext *pCtx,$/;"	f	typeref:typename:int32_t	file:
CheckLabelAndType	lib/QCBOR/example.c	/^QCBORError CheckLabelAndType(const char *szLabel, uint8_t uQCBORType, const QCBORItem *pItem)$/;"	f	typeref:typename:QCBORError
CheckMemory	lib/cn-cbor/test/context.c	/^bool CheckMemory(MyContext *pContext)$/;"	f	typeref:typename:bool
CheckResults	lib/QCBOR/test/qcbor_encode_tests.c	/^#define CheckResults(/;"	d	file:
CheckTagRequirement	lib/QCBOR/src/qcbor_decode.c	/^CheckTagRequirement(const TagSpecification TagSpec, const QCBORItem *pItem)$/;"	f	typeref:typename:QCBORError	file:
CheckTypeList	lib/QCBOR/src/qcbor_decode.c	/^CheckTypeList(int uDataType, const uint8_t puTypeList[QCBOR_TAGSPEC_NUM_TYPES])$/;"	f	typeref:typename:QCBORError	file:
CnCborConan	lib/cn-cbor/conanfile.py	/^class CnCborConan(ConanFile):$/;"	c
Code Size	lib/QCBOR/README.md	/^## Code Size$/;"	s
Code Status	lib/QCBOR/README.md	/^## Code Status$/;"	s
ComprehensiveInputRecurser	lib/QCBOR/test/qcbor_decode_tests.c	/^static void ComprehensiveInputRecurser(uint8_t *pBuf, size_t nLen, size_t nLenMax)$/;"	f	typeref:typename:void	file:
ComprehensiveInputTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t ComprehensiveInputTest()$/;"	f	typeref:typename:int32_t
ConsumeItem	lib/QCBOR/src/qcbor_decode.c	/^ConsumeItem(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:QCBORError	file:
Consuming	lib/cn-cbor/README.md	/^## Consuming$/;"	s
ConversionStatus	lib/tinycbor/src/cbortojson.c	/^typedef struct ConversionStatus {$/;"	s	file:
ConversionStatus	lib/tinycbor/src/cbortojson.c	/^} ConversionStatus;$/;"	t	typeref:struct:ConversionStatus	file:
ConversionStatusFlags	lib/tinycbor/src/cbortojson.c	/^enum ConversionStatusFlags {$/;"	g	file:
ConvertBigNumToDouble	lib/QCBOR/src/qcbor_decode.c	/^static double ConvertBigNumToDouble(const UsefulBufC BigNum)$/;"	f	typeref:typename:double	file:
ConvertBigNumToUnsigned	lib/QCBOR/src/qcbor_decode.c	/^static QCBORError ConvertBigNumToUnsigned(const UsefulBufC BigNum, uint64_t uMax, uint64_t *pRes/;"	f	typeref:typename:QCBORError	file:
ConvertDouble	lib/QCBOR/src/qcbor_decode.c	/^static QCBORError ConvertDouble(const QCBORItem *pItem,$/;"	f	typeref:typename:QCBORError	file:
ConvertError	lib/QCBOR/example.c	/^EngineDecodeErrors ConvertError(QCBORError uErr)$/;"	f	typeref:typename:EngineDecodeErrors
ConvertInt64	lib/QCBOR/src/qcbor_decode.c	/^ConvertInt64(const QCBORItem *pItem, uint32_t uConvertTypes, int64_t *pnValue)$/;"	f	typeref:typename:QCBORError	file:
ConvertIntToBigNum	lib/QCBOR/src/qcbor_decode.c	/^static inline UsefulBufC ConvertIntToBigNum(uint64_t uInt, UsefulBuf Buffer)$/;"	f	typeref:typename:UsefulBufC	file:
ConvertNegativeBigNumToSigned	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError ConvertNegativeBigNumToSigned(const UsefulBufC BigNum, int64_t *pnResul/;"	f	typeref:typename:QCBORError	file:
ConvertPositiveBigNumToSigned	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError ConvertPositiveBigNumToSigned(const UsefulBufC BigNum, int64_t *pResult/;"	f	typeref:typename:QCBORError	file:
ConvertPositiveBigNumToUnsigned	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError ConvertPositiveBigNumToUnsigned(const UsefulBufC BigNum, uint64_t *pRes/;"	f	typeref:typename:QCBORError	file:
ConvertTag	lib/QCBOR/src/qcbor_decode.c	/^static uint64_t ConvertTag(const QCBORDecodeContext *me, uint16_t uTagVal) {$/;"	f	typeref:typename:uint64_t	file:
ConvertUInt64	lib/QCBOR/src/qcbor_decode.c	/^static QCBORError ConvertUInt64(const QCBORItem *pItem, uint32_t uConvertTypes, uint64_t *puValu/;"	f	typeref:typename:QCBORError	file:
CopyDoubleToUint64	lib/QCBOR/src/ieee754.c	/^static inline uint64_t CopyDoubleToUint64(double d)$/;"	f	typeref:typename:uint64_t	file:
CopyFloatToUint32	lib/QCBOR/src/ieee754.c	/^static inline uint32_t CopyFloatToUint32(float f)$/;"	f	typeref:typename:uint32_t	file:
CopyTags	lib/QCBOR/src/qcbor_decode.c	/^static inline void CopyTags(QCBORDecodeContext *pMe, const QCBORItem *pItem)$/;"	f	typeref:typename:void	file:
CopyUint64ToDouble	lib/QCBOR/src/ieee754.c	/^static inline double CopyUint64ToDouble(uint64_t u64)$/;"	f	typeref:typename:double	file:
Copyright and License	lib/QCBOR/README.md	/^## Copyright and License$/;"	s
Copyright for this README	lib/QCBOR/README.md	/^### Copyright for this README$/;"	S
CoseSign1TBSTest	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t CoseSign1TBSTest()$/;"	f	typeref:typename:int32_t
CreateContext	lib/cn-cbor/test/context.c	/^cn_cbor_context *CreateContext(unsigned int iFailPoint)$/;"	f	typeref:typename:cn_cbor_context *
CreateMap	lib/QCBOR/test/qcbor_encode_tests.c	/^static int32_t CreateMap(uint8_t **pEncoded, size_t *pEncodedLen)$/;"	f	typeref:typename:int32_t	file:
CreateSimpleArray	lib/QCBOR/test/qcbor_decode_tests.c	/^static int32_t CreateSimpleArray(int nInt1, int nInt2, uint8_t **pEncoded, size_t *pEncodedLen)$/;"	f	typeref:typename:int32_t	file:
CreateTests	lib/cn-cbor/test/memory_test.c	/^void CreateTests()$/;"	f	typeref:typename:void
Credits	lib/QCBOR/README.md	/^## Credits$/;"	s
DBL_DECIMAL_DIG	lib/tinycbor/src/compilersupport_p.h	/^#  define DBL_DECIMAL_DIG /;"	d
DBL_DECIMAL_DIG_STR	lib/tinycbor/src/compilersupport_p.h	/^#define DBL_DECIMAL_DIG_STR /;"	d
DEC	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
DEC	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
DOUBLE_EXPONENT_BIAS	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_EXPONENT_BIAS /;"	d	file:
DOUBLE_EXPONENT_INF_OR_NAN	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_EXPONENT_INF_OR_NAN /;"	d	file:
DOUBLE_EXPONENT_MASK	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_EXPONENT_MASK /;"	d	file:
DOUBLE_EXPONENT_MASK	lib/QCBOR/test/float_tests.c	/^#define DOUBLE_EXPONENT_MASK /;"	d	file:
DOUBLE_EXPONENT_MAX	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_EXPONENT_MAX /;"	d	file:
DOUBLE_EXPONENT_MIN	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_EXPONENT_MIN /;"	d	file:
DOUBLE_EXPONENT_SHIFT	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_EXPONENT_SHIFT /;"	d	file:
DOUBLE_EXPONENT_SHIFT	lib/QCBOR/test/float_tests.c	/^#define DOUBLE_EXPONENT_SHIFT /;"	d	file:
DOUBLE_EXPONENT_ZERO	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_EXPONENT_ZERO /;"	d	file:
DOUBLE_NUM_EXPONENT_BITS	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_NUM_EXPONENT_BITS /;"	d	file:
DOUBLE_NUM_EXPONENT_BITS	lib/QCBOR/test/float_tests.c	/^#define DOUBLE_NUM_EXPONENT_BITS /;"	d	file:
DOUBLE_NUM_SIGNIFICAND_BITS	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_NUM_SIGNIFICAND_BITS /;"	d	file:
DOUBLE_NUM_SIGNIFICAND_BITS	lib/QCBOR/test/float_tests.c	/^#define DOUBLE_NUM_SIGNIFICAND_BITS /;"	d	file:
DOUBLE_NUM_SIGN_BITS	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_NUM_SIGN_BITS /;"	d	file:
DOUBLE_NUM_SIGN_BITS	lib/QCBOR/test/float_tests.c	/^#define DOUBLE_NUM_SIGN_BITS /;"	d	file:
DOUBLE_PREC_FLOAT	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define DOUBLE_PREC_FLOAT /;"	d
DOUBLE_QUIET_NAN_BIT	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_QUIET_NAN_BIT /;"	d	file:
DOUBLE_QUIET_NAN_BIT	lib/QCBOR/test/float_tests.c	/^#define DOUBLE_QUIET_NAN_BIT /;"	d	file:
DOUBLE_SIGNIFICAND_MASK	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_SIGNIFICAND_MASK /;"	d	file:
DOUBLE_SIGNIFICAND_MASK	lib/QCBOR/test/float_tests.c	/^#define DOUBLE_SIGNIFICAND_MASK /;"	d	file:
DOUBLE_SIGNIFICAND_SHIFT	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_SIGNIFICAND_SHIFT /;"	d	file:
DOUBLE_SIGNIFICAND_SHIFT	lib/QCBOR/test/float_tests.c	/^#define DOUBLE_SIGNIFICAND_SHIFT /;"	d	file:
DOUBLE_SIGN_MASK	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_SIGN_MASK /;"	d	file:
DOUBLE_SIGN_MASK	lib/QCBOR/test/float_tests.c	/^#define DOUBLE_SIGN_MASK /;"	d	file:
DOUBLE_SIGN_SHIFT	lib/QCBOR/src/ieee754.c	/^#define DOUBLE_SIGN_SHIFT /;"	d	file:
DOUBLE_SIGN_SHIFT	lib/QCBOR/test/float_tests.c	/^#define DOUBLE_SIGN_SHIFT /;"	d	file:
DO_SKIP	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^			set(DO_SKIP 0)$/;"	v
DO_SKIP	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^			set(DO_SKIP 1)$/;"	v
DO_SKIP	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^	set(DO_SKIP 0)$/;"	v
DateParseTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t DateParseTest()$/;"	f	typeref:typename:int32_t
DecodeB64	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError DecodeB64(QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
DecodeB64URL	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError DecodeB64URL(QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
DecodeBigNum	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError DecodeBigNum(QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
DecodeBytes	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError DecodeBytes(const QCORInternalAllocator *pAllocator,$/;"	f	typeref:typename:QCBORError	file:
DecodeCylinders	lib/QCBOR/example.c	/^EngineDecodeErrors DecodeCylinders(QCBORDecodeContext *pDecodeCtx,$/;"	f	typeref:typename:EngineDecodeErrors
DecodeDateEpoch	lib/QCBOR/src/qcbor_decode.c	/^static QCBORError DecodeDateEpoch(QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
DecodeDateString	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError DecodeDateString(QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
DecodeEngineBasic	lib/QCBOR/example.c	/^EngineDecodeErrors DecodeEngineBasic(UsefulBufC EncodedEngine, CarEngine *pE)$/;"	f	typeref:typename:EngineDecodeErrors
DecodeEngineSpiffy	lib/QCBOR/example.c	/^EngineDecodeErrors DecodeEngineSpiffy(UsefulBufC EncodedEngine, CarEngine *pE)$/;"	f	typeref:typename:EngineDecodeErrors
DecodeEngineSpiffyFaster	lib/QCBOR/example.c	/^EngineDecodeErrors DecodeEngineSpiffyFaster(UsefulBufC EncodedEngine, CarEngine *pE)$/;"	f	typeref:typename:EngineDecodeErrors
DecodeFailureTests	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t DecodeFailureTests()$/;"	f	typeref:typename:int32_t
DecodeInteger	lib/QCBOR/src/qcbor_decode.c	/^DecodeInteger(int nMajorType, uint64_t uNumber, QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
DecodeMIME	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError DecodeMIME(QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
DecodeNesting_Ascend	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_Ascend(QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:void	file:
DecodeNesting_ClearBoundedMode	lib/QCBOR/src/qcbor_decode.c	/^static inline void DecodeNesting_ClearBoundedMode(QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:void	file:
DecodeNesting_DecrementDefiniteLengthMapOrArrayCount	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_DecrementDefiniteLengthMapOrArrayCount(QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:void	file:
DecodeNesting_Descend	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_Descend(QCBORDecodeNesting *pNesting, uint8_t uType)$/;"	f	typeref:typename:QCBORError	file:
DecodeNesting_DescendIntoBstrWrapped	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_DescendIntoBstrWrapped(QCBORDecodeNesting *pNesting,$/;"	f	typeref:typename:QCBORError	file:
DecodeNesting_DescendMapOrArray	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_DescendMapOrArray(QCBORDecodeNesting *pNesting,$/;"	f	typeref:typename:QCBORError	file:
DecodeNesting_EnterBoundedMapOrArray	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_EnterBoundedMapOrArray(QCBORDecodeNesting *pNesting, bool bIsEmpty, size_t uOffset/;"	f	typeref:typename:QCBORError	file:
DecodeNesting_GetBoundedModeLevel	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_GetBoundedModeLevel(const QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:uint8_t	file:
DecodeNesting_GetCurrentLevel	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_GetCurrentLevel(const QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:uint8_t	file:
DecodeNesting_GetEndOfBstr	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_GetEndOfBstr(const QCBORDecodeNesting *pMe)$/;"	f	typeref:typename:uint32_t	file:
DecodeNesting_GetMapOrArrayStart	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_GetMapOrArrayStart(const QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:uint32_t	file:
DecodeNesting_GetPreviousBoundedEnd	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_GetPreviousBoundedEnd(const QCBORDecodeNesting *pMe)$/;"	f	typeref:typename:uint32_t	file:
DecodeNesting_Init	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_Init(QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:void	file:
DecodeNesting_IsAtEndOfBoundedLevel	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_IsAtEndOfBoundedLevel(const QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:bool	file:
DecodeNesting_IsBoundedEmpty	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_IsBoundedEmpty(const QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:bool	file:
DecodeNesting_IsBoundedType	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_IsBoundedType(const QCBORDecodeNesting *pNesting, uint8_t uType)$/;"	f	typeref:typename:bool	file:
DecodeNesting_IsCurrentAtTop	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_IsCurrentAtTop(const QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:bool	file:
DecodeNesting_IsCurrentBounded	lib/QCBOR/src/qcbor_decode.c	/^static inline bool DecodeNesting_IsCurrentBounded(const QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:bool	file:
DecodeNesting_IsCurrentBstrWrapped	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_IsCurrentBstrWrapped(const QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:bool	file:
DecodeNesting_IsCurrentDefiniteLength	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_IsCurrentDefiniteLength(const QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:bool	file:
DecodeNesting_IsCurrentTypeMap	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_IsCurrentTypeMap(const QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:bool	file:
DecodeNesting_IsEndOfDefiniteLengthMapOrArray	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_IsEndOfDefiniteLengthMapOrArray(const QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:bool	file:
DecodeNesting_LevelUpBounded	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_LevelUpBounded(QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:void	file:
DecodeNesting_LevelUpCurrent	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_LevelUpCurrent(QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:void	file:
DecodeNesting_PrepareForMapSearch	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_PrepareForMapSearch(QCBORDecodeNesting *pNesting, QCBORDecodeNesting *pSave)$/;"	f	typeref:typename:void	file:
DecodeNesting_RestoreFromMapSearch	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_RestoreFromMapSearch(QCBORDecodeNesting *pNesting, const QCBORDecodeNesting *pSave/;"	f	typeref:typename:void	file:
DecodeNesting_ReverseDecrement	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_ReverseDecrement(QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:void	file:
DecodeNesting_SetCurrentToBoundedLevel	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_SetCurrentToBoundedLevel(QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:void	file:
DecodeNesting_SetMapOrArrayBoundedMode	lib/QCBOR/src/qcbor_decode.c	/^static inline void DecodeNesting_SetMapOrArrayBoundedMode(QCBORDecodeNesting *pNesting, bool bIs/;"	f	typeref:typename:void	file:
DecodeNesting_ZeroMapOrArrayCount	lib/QCBOR/src/qcbor_decode.c	/^DecodeNesting_ZeroMapOrArrayCount(QCBORDecodeNesting *pNesting)$/;"	f	typeref:typename:void	file:
DecodeNextNested	lib/QCBOR/test/qcbor_encode_tests.c	/^ *\/static int32_t DecodeNextNested(UsefulBufC Wrapped)$/;"	f	typeref:typename:int32_t	file:
DecodeNextNested2	lib/QCBOR/test/qcbor_encode_tests.c	/^static int32_t DecodeNextNested2(UsefulBufC Wrapped)$/;"	f	typeref:typename:int32_t	file:
DecodeRegex	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError DecodeRegex(QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
DecodeSimple	lib/QCBOR/src/qcbor_decode.c	/^DecodeSimple(int nAdditionalInfo, uint64_t uNumber, QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
DecodeTaggedTypeTests	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t DecodeTaggedTypeTests()$/;"	f	typeref:typename:int32_t
DecodeTypeAndNumber	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError DecodeTypeAndNumber(UsefulInputBuf *pUInBuf,$/;"	f	typeref:typename:QCBORError	file:
DecodeURI	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError DecodeURI(QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
DecodeUUID	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError DecodeUUID(QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
DecodeWrappedCBOR	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError DecodeWrappedCBOR(QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
DecodeWrappedCBORSequence	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError DecodeWrappedCBORSequence(QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
DecoderTests	lib/cn-cbor/test/memory_test.c	/^void DecoderTests() {}$/;"	f	typeref:typename:void
DoubleAsSmallestTest	lib/QCBOR/test/float_tests.c	/^int32_t DoubleAsSmallestTest()$/;"	f	typeref:typename:int32_t
DoubleConvertAll	lib/QCBOR/src/qcbor_decode.c	/^DoubleConvertAll(const QCBORItem *pItem, uint32_t uConvertTypes, double *pdValue)$/;"	f	typeref:typename:QCBORError	file:
DoublePrecisionFloat	lib/tinycbor/src/cborinternal_p.h	/^    DoublePrecisionFloat    = 27,   \/* ditto *\/$/;"	e	enum:CborSimpleTypes
EQUALS	Makefile	/^EQUALS = =$/;"	m
ERROR	lib/cn-cbor/test/file_test.c	/^#define ERROR(/;"	d	file:
ERROR	lib/cn-cbor/test/test.c	/^#define ERROR(/;"	d	file:
EmptyMapsAndArraysTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t EmptyMapsAndArraysTest()$/;"	f	typeref:typename:int32_t
EncodeBstrWrapTestData	lib/QCBOR/test/qcbor_decode_tests.c	/^static UsefulBufC EncodeBstrWrapTestData(UsefulBuf OutputBuffer)$/;"	f	typeref:typename:UsefulBufC	file:
EncodeDateTest	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t EncodeDateTest()$/;"	f	typeref:typename:int32_t
EncodeEngineDefiniteLength	lib/QCBOR/example.c	/^UsefulBufC EncodeEngineDefiniteLength(const CarEngine *pEngine, UsefulBuf Buffer)$/;"	f	typeref:typename:UsefulBufC
EncodeEngineIndefinteLen	lib/QCBOR/example.c	/^UsefulBufC EncodeEngineIndefinteLen(const CarEngine *pEngine, UsefulBuf Buffer)$/;"	f	typeref:typename:UsefulBufC
EncodeErrorTests	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t EncodeErrorTests()$/;"	f	typeref:typename:int32_t
EncodeLengthThirtyone	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t EncodeLengthThirtyone[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
EncodeLengthThirtyoneTest	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t EncodeLengthThirtyoneTest()$/;"	f	typeref:typename:int32_t
EncodeRawTest	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t EncodeRawTest()$/;"	f	typeref:typename:int32_t
EncoderTests	lib/cn-cbor/test/memory_test.c	/^void EncoderTests()$/;"	f	typeref:typename:void
EngineCompare	lib/QCBOR/example.c	/^bool EngineCompare(CarEngine *pE1, CarEngine *pE2)$/;"	f	typeref:typename:bool
EngineDecodeErrors	lib/QCBOR/example.c	/^} EngineDecodeErrors;$/;"	t	typeref:enum:__anon03c895ae0303	file:
EngineInit	lib/QCBOR/example.c	/^void EngineInit(CarEngine *pE)$/;"	f	typeref:typename:void
EngineProtocolerror	lib/QCBOR/example.c	/^    EngineProtocolerror,$/;"	e	enum:__anon03c895ae0303	file:
EngineSuccess	lib/QCBOR/example.c	/^    EngineSuccess,$/;"	e	enum:__anon03c895ae0303	file:
EnterBstrTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t EnterBstrTest()$/;"	f	typeref:typename:int32_t
EnterMapTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t EnterMapTest()$/;"	f	typeref:typename:int32_t
ExitBoundedLevel	lib/QCBOR/src/qcbor_decode.c	/^ExitBoundedLevel(QCBORDecodeContext *pMe, uint32_t uEndOffset)$/;"	f	typeref:typename:QCBORError	file:
ExponentAndMantissaDecodeFailTests	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t ExponentAndMantissaDecodeFailTests()$/;"	f	typeref:typename:int32_t
ExponentAndMantissaDecodeTests	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t ExponentAndMantissaDecodeTests(void)$/;"	f	typeref:typename:int32_t
ExponentAndMantissaEncodeTests	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t ExponentAndMantissaEncodeTests()$/;"	f	typeref:typename:int32_t
ExponentAndMantissaFailures	lib/QCBOR/test/qcbor_decode_tests.c	/^static struct FailInput ExponentAndMantissaFailures[] = {$/;"	v	typeref:struct:FailInput[]	file:
ExponentiateNN	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError ExponentiateNN(int64_t       nMantissa,$/;"	f	typeref:typename:QCBORError	file:
Exponentitate10	lib/QCBOR/src/qcbor_decode.c	/^Exponentitate10(uint64_t uMantissa, int64_t nExponent, uint64_t *puResult)$/;"	f	typeref:typename:QCBORError	file:
Exponentitate2	lib/QCBOR/src/qcbor_decode.c	/^Exponentitate2(uint64_t uMantissa, int64_t nExponent, uint64_t *puResult)$/;"	f	typeref:typename:QCBORError	file:
ExponentitateNU	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError ExponentitateNU(int64_t       nMantissa,$/;"	f	typeref:typename:QCBORError	file:
ExponentitateUU	lib/QCBOR/src/qcbor_decode.c	/^static inline QCBORError ExponentitateUU(uint64_t       uMantissa,$/;"	f	typeref:typename:QCBORError	file:
ExtraBytesTest	lib/QCBOR/test/qcbor_decode_tests.c	/^static int32_t ExtraBytesTest(int nLevel)$/;"	f	typeref:typename:int32_t	file:
FailInput	lib/QCBOR/test/qcbor_decode_tests.c	/^struct FailInput {$/;"	s	file:
Failures	lib/QCBOR/test/qcbor_decode_tests.c	/^struct FailInput  Failures[] = {$/;"	v	typeref:struct:FailInput[]
FalseValue	lib/tinycbor/src/cborinternal_p.h	/^    FalseValue              = 20,$/;"	e	enum:CborSimpleTypes
FinalTypeMask	lib/tinycbor/src/cbortojson.c	/^    FinalTypeMask               = 0xff$/;"	e	enum:ConversionStatusFlags	file:
FlagsToKeep	lib/tinycbor/src/cborparser.c	/^        FlagsToKeep = CborIteratorFlag_ContainerIsMap | CborIteratorFlag_NextIsMapKey$/;"	e	enum:preparse_value::__anonb6499fff0103	file:
Float16Standin	lib/tinycbor/tests/encoder/data.cpp	/^struct Float16Standin { uint16_t val; };$/;"	s	file:
Floating Point Support	lib/QCBOR/README.md	/^## Floating Point Support$/;"	s
FormatRTICResults	lib/QCBOR/test/qcbor_encode_tests.c	/^FormatRTICResults(uint8_t uRResult,$/;"	f	typeref:typename:UsefulBufC	file:
FreeContext	lib/cn-cbor/test/context.c	/^void FreeContext(cn_cbor_context *pContext)$/;"	f	typeref:typename:void
GCOV_FILES	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^set(GCOV_FILES "")$/;"	v
GCOV_FILE_COVERAGE	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^						set(GCOV_FILE_COVERAGE "${GCOV_FILE_COVERAGE}${HITCOUNT}, ")$/;"	v
GCOV_FILE_COVERAGE	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^						set(GCOV_FILE_COVERAGE "${GCOV_FILE_COVERAGE}0, ")$/;"	v
GCOV_FILE_COVERAGE	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^						set(GCOV_FILE_COVERAGE "${GCOV_FILE_COVERAGE}null, ")$/;"	v
GCOV_FILE_COVERAGE	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^					set(GCOV_FILE_COVERAGE "${GCOV_FILE_COVERAGE}null, ")$/;"	v
GCOV_FILE_COVERAGE	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^		set(GCOV_FILE_COVERAGE "${GCOV_FILE_COVERAGE}0, ")$/;"	v
GCOV_FILE_COVERAGE	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^	set(GCOV_FILE_COVERAGE "${GCOV_FILE_COVERAGE}]")$/;"	v
GCOV_FILE_COVERAGE	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^	set(GCOV_FILE_COVERAGE "[")$/;"	v
GCOV_FILE_SOURCE	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^		set(GCOV_FILE_SOURCE "${GCOV_FILE_SOURCE}${SOURCE}\\\\n")$/;"	v
GCOV_FILE_SOURCE	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^	set(GCOV_FILE_SOURCE "")$/;"	v
GCOV_LINE_COUNT	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^	set(GCOV_LINE_COUNT 1) # Line number for the .gcov.$/;"	v
GIT_ARCHIVE	lib/tinycbor/Makefile	/^GIT_ARCHIVE = git archive --prefix="$(PACKAGE)\/" -9$/;"	m
GIT_DIR	lib/tinycbor/Makefile	/^GIT_DIR := $(strip $(shell git -C $(SRCDIR). rev-parse --git-dir 2> \/dev\/null))$/;"	m
GeneralFloatDecodeTests	lib/QCBOR/test/float_tests.c	/^int32_t GeneralFloatDecodeTests()$/;"	f	typeref:typename:int32_t
GeneralFloatEncodeTests	lib/QCBOR/test/float_tests.c	/^int32_t GeneralFloatEncodeTests()$/;"	f	typeref:typename:int32_t
GetArray	lib/QCBOR/test/qcbor_encode_tests.c	/^static int32_t GetArray(QCBORDecodeContext *pDC, uint16_t *pInt)$/;"	f	typeref:typename:int32_t	file:
GetByteString	lib/QCBOR/test/qcbor_encode_tests.c	/^static int32_t GetByteString(QCBORDecodeContext *pDC, UsefulBufC *pBstr)$/;"	f	typeref:typename:int32_t	file:
GetInt64	lib/QCBOR/test/qcbor_encode_tests.c	/^static int32_t GetInt64(QCBORDecodeContext *pDC, int64_t *pInt)$/;"	f	typeref:typename:int32_t	file:
GetMap	lib/QCBOR/test/qcbor_encode_tests.c	/^static int32_t GetMap(QCBORDecodeContext *pDC, uint16_t *pInt)$/;"	f	typeref:typename:int32_t	file:
GetNext_FullItem	lib/QCBOR/src/qcbor_decode.c	/^GetNext_FullItem(QCBORDecodeContext *me, QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
GetNext_Item	lib/QCBOR/src/qcbor_decode.c	/^static QCBORError GetNext_Item(UsefulInputBuf *pUInBuf,$/;"	f	typeref:typename:QCBORError	file:
GetNext_MapEntry	lib/QCBOR/src/qcbor_decode.c	/^GetNext_MapEntry(QCBORDecodeContext *me, QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
GetNext_TaggedItem	lib/QCBOR/src/qcbor_decode.c	/^GetNext_TaggedItem(QCBORDecodeContext *me, QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
GetTextString	lib/QCBOR/test/qcbor_encode_tests.c	/^static int32_t GetTextString(QCBORDecodeContext *pDC, UsefulBufC *pTstr)$/;"	f	typeref:typename:int32_t	file:
HALF_EXPONENT_BIAS	lib/QCBOR/src/ieee754.c	/^#define HALF_EXPONENT_BIAS /;"	d	file:
HALF_EXPONENT_INF_OR_NAN	lib/QCBOR/src/ieee754.c	/^#define HALF_EXPONENT_INF_OR_NAN /;"	d	file:
HALF_EXPONENT_MASK	lib/QCBOR/src/ieee754.c	/^#define HALF_EXPONENT_MASK /;"	d	file:
HALF_EXPONENT_MAX	lib/QCBOR/src/ieee754.c	/^#define HALF_EXPONENT_MAX /;"	d	file:
HALF_EXPONENT_MIN	lib/QCBOR/src/ieee754.c	/^#define HALF_EXPONENT_MIN /;"	d	file:
HALF_EXPONENT_SHIFT	lib/QCBOR/src/ieee754.c	/^#define HALF_EXPONENT_SHIFT /;"	d	file:
HALF_EXPONENT_ZERO	lib/QCBOR/src/ieee754.c	/^#define HALF_EXPONENT_ZERO /;"	d	file:
HALF_NUM_EXPONENT_BITS	lib/QCBOR/src/ieee754.c	/^#define HALF_NUM_EXPONENT_BITS /;"	d	file:
HALF_NUM_SIGNIFICAND_BITS	lib/QCBOR/src/ieee754.c	/^#define HALF_NUM_SIGNIFICAND_BITS /;"	d	file:
HALF_NUM_SIGN_BITS	lib/QCBOR/src/ieee754.c	/^#define HALF_NUM_SIGN_BITS /;"	d	file:
HALF_PREC_FLOAT	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define HALF_PREC_FLOAT /;"	d
HALF_QUIET_NAN_BIT	lib/QCBOR/src/ieee754.c	/^#define HALF_QUIET_NAN_BIT /;"	d	file:
HALF_SIGNIFICAND_MASK	lib/QCBOR/src/ieee754.c	/^#define HALF_SIGNIFICAND_MASK /;"	d	file:
HALF_SIGNIFICAND_SHIFT	lib/QCBOR/src/ieee754.c	/^#define HALF_SIGNIFICAND_SHIFT /;"	d	file:
HALF_SIGN_MASK	lib/QCBOR/src/ieee754.c	/^#define HALF_SIGN_MASK /;"	d	file:
HALF_SIGN_SHIFT	lib/QCBOR/src/ieee754.c	/^#define HALF_SIGN_SHIFT /;"	d	file:
HEX	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
HEX	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
HalfPrecisionAgainstRFCCodeTest	lib/QCBOR/test/float_tests.c	/^int32_t HalfPrecisionAgainstRFCCodeTest()$/;"	f	typeref:typename:int32_t
HalfPrecisionDecodeBasicTests	lib/QCBOR/test/float_tests.c	/^int32_t HalfPrecisionDecodeBasicTests()$/;"	f	typeref:typename:int32_t
HalfPrecisionFloat	lib/tinycbor/src/cborinternal_p.h	/^    HalfPrecisionFloat      = 25,   \/* ditto *\/$/;"	e	enum:CborSimpleTypes
IB_AI	lib/cn-cbor/src/cbor.h	/^#define IB_AI(/;"	d
IB_ARRAY	lib/cn-cbor/src/cbor.h	/^#define IB_ARRAY /;"	d
IB_BIGNUM	lib/cn-cbor/src/cbor.h	/^#define IB_BIGNUM /;"	d
IB_BIGNUM_NEG	lib/cn-cbor/src/cbor.h	/^#define IB_BIGNUM_NEG /;"	d
IB_BREAK	lib/cn-cbor/src/cbor.h	/^#define IB_BREAK /;"	d
IB_BYTES	lib/cn-cbor/src/cbor.h	/^#define IB_BYTES /;"	d
IB_FALSE	lib/cn-cbor/src/cbor.h	/^#define IB_FALSE /;"	d
IB_FLOAT2	lib/cn-cbor/src/cbor.h	/^#define IB_FLOAT2 /;"	d
IB_FLOAT4	lib/cn-cbor/src/cbor.h	/^#define IB_FLOAT4 /;"	d
IB_FLOAT8	lib/cn-cbor/src/cbor.h	/^#define IB_FLOAT8 /;"	d
IB_MAP	lib/cn-cbor/src/cbor.h	/^#define IB_MAP /;"	d
IB_MT	lib/cn-cbor/src/cbor.h	/^#define IB_MT(/;"	d
IB_NEGATIVE	lib/cn-cbor/src/cbor.h	/^#define IB_NEGATIVE /;"	d
IB_NEGFLAG	lib/cn-cbor/src/cbor.h	/^#define IB_NEGFLAG /;"	d
IB_NEGFLAG_AS_BIT	lib/cn-cbor/src/cbor.h	/^#define IB_NEGFLAG_AS_BIT(/;"	d
IB_NIL	lib/cn-cbor/src/cbor.h	/^#define IB_NIL /;"	d
IB_PRIM	lib/cn-cbor/src/cbor.h	/^#define IB_PRIM /;"	d
IB_TAG	lib/cn-cbor/src/cbor.h	/^#define IB_TAG /;"	d
IB_TEXT	lib/cn-cbor/src/cbor.h	/^#define IB_TEXT /;"	d
IB_TEXTFLAG	lib/cn-cbor/src/cbor.h	/^#define IB_TEXTFLAG /;"	d
IB_TIME_EPOCH	lib/cn-cbor/src/cbor.h	/^#define IB_TIME_EPOCH /;"	d
IB_TRUE	lib/cn-cbor/src/cbor.h	/^#define IB_TRUE /;"	d
IB_UNDEF	lib/cn-cbor/src/cbor.h	/^#define IB_UNDEF /;"	d
IB_UNSIGNED	lib/cn-cbor/src/cbor.h	/^#define IB_UNSIGNED /;"	d
IB_UNUSED	lib/cn-cbor/src/cbor.h	/^#define IB_UNUSED /;"	d
ID_VOID_MAIN	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
IEEE754_DoubleToHalf	lib/QCBOR/src/ieee754.c	/^uint16_t IEEE754_DoubleToHalf(double d)$/;"	f	typeref:typename:uint16_t
IEEE754_DoubleToSmall	lib/QCBOR/src/ieee754.h	/^static inline IEEE754_union IEEE754_DoubleToSmall(double d)$/;"	f	typeref:typename:IEEE754_union
IEEE754_DoubleToSmallest	lib/QCBOR/src/ieee754.h	/^static inline IEEE754_union IEEE754_DoubleToSmallest(double d)$/;"	f	typeref:typename:IEEE754_union
IEEE754_DoubleToSmallestInternal	lib/QCBOR/src/ieee754.c	/^IEEE754_union IEEE754_DoubleToSmallestInternal(double d, int bAllowHalfPrecision)$/;"	f	typeref:typename:IEEE754_union
IEEE754_FloatToHalf	lib/QCBOR/src/ieee754.c	/^uint16_t IEEE754_FloatToHalf(float f)$/;"	f	typeref:typename:uint16_t
IEEE754_FloatToSmallest	lib/QCBOR/src/ieee754.c	/^IEEE754_union IEEE754_FloatToSmallest(float f)$/;"	f	typeref:typename:IEEE754_union
IEEE754_HalfToDouble	lib/QCBOR/src/ieee754.c	/^double IEEE754_HalfToDouble(uint16_t uHalfPrecision)$/;"	f	typeref:typename:double
IEEE754_UNION_IS_DOUBLE	lib/QCBOR/src/ieee754.h	/^#define IEEE754_UNION_IS_DOUBLE /;"	d
IEEE754_UNION_IS_HALF	lib/QCBOR/src/ieee754.h	/^#define IEEE754_UNION_IS_HALF /;"	d
IEEE754_UNION_IS_SINGLE	lib/QCBOR/src/ieee754.h	/^#define IEEE754_UNION_IS_SINGLE /;"	d
IEEE754_union	lib/QCBOR/src/ieee754.h	/^} IEEE754_union;$/;"	t	typeref:struct:__anon5619e4d60108
INIT_CB	lib/cn-cbor/src/cn-create.c	/^#define INIT_CB(/;"	d	file:
INSTALL	lib/tinycbor/Makefile	/^INSTALL = install$/;"	m
INSTALL_DATA	lib/tinycbor/Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_PROGRAM	lib/tinycbor/Makefile	/^INSTALL_PROGRAM = $(INSTALL) -m 755$/;"	m
InBuf	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   UsefulInputBuf InBuf;$/;"	m	struct:_QCBORDecodeContext	typeref:typename:UsefulInputBuf
IncrementMapOrArrayCount	lib/QCBOR/src/qcbor_encode.c	/^static inline void IncrementMapOrArrayCount(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:void	file:
IndefiniteLength	lib/tinycbor/src/cborinternal_p.h	/^    IndefiniteLength        = 31U,$/;"	e	enum:__anon5d9aee230103
IndefiniteLengthArrayMapTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t IndefiniteLengthArrayMapTest()$/;"	f	typeref:typename:int32_t
IndefiniteLengthNestTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t IndefiniteLengthNestTest()$/;"	f	typeref:typename:int32_t
IndefiniteLengthStringTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t IndefiniteLengthStringTest()$/;"	f	typeref:typename:int32_t
IndeterminateLengthArray	lib/tinycbor/tests/encoder/data.cpp	/^struct IndeterminateLengthArray : QVariantList { using QVariantList::QVariantList; };$/;"	s	file:
IndeterminateLengthMap	lib/tinycbor/tests/encoder/data.cpp	/^struct IndeterminateLengthMap : Map { using Map::Map; };$/;"	s	file:
Input	lib/QCBOR/test/qcbor_decode_tests.c	/^   UsefulBufC Input;$/;"	m	struct:FailInput	typeref:typename:UsefulBufC	file:
Input	lib/tinycbor/tests/parser/tst_parser.cpp	/^struct Input {$/;"	s	file:
InsertCBORHead	lib/QCBOR/src/qcbor_encode.c	/^static void InsertCBORHead(QCBOREncodeContext *me, uint8_t uMajorType, size_t uLen)$/;"	f	typeref:typename:void	file:
InsertTest	lib/QCBOR/test/UsefulBuf_Tests.c	/^static int InsertTest(UsefulOutBuf *pUOB,  size_t num, size_t pos, int expected)$/;"	f	typeref:typename:int	file:
Int64ConvertAll	lib/QCBOR/src/qcbor_decode.c	/^Int64ConvertAll(const QCBORItem *pItem, uint32_t uConvertTypes, int64_t *pnValue)$/;"	f	typeref:typename:QCBORError	file:
IntToTests	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t IntToTests()$/;"	f	typeref:typename:int32_t
IntegerConvertTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t IntegerConvertTest()$/;"	f	typeref:typename:int32_t
IntegerValuesParseTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t IntegerValuesParseTest()$/;"	f	typeref:typename:int32_t
IntegerValuesParseTestInternal	lib/QCBOR/test/qcbor_decode_tests.c	/^static int32_t IntegerValuesParseTestInternal(QCBORDecodeContext *pDCtx)$/;"	f	typeref:typename:int32_t	file:
IntegerValuesTest1	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t IntegerValuesTest1()$/;"	f	typeref:typename:int32_t
InternalEnterBstrWrapped	lib/QCBOR/src/qcbor_decode.c	/^static QCBORError InternalEnterBstrWrapped(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:QCBORError	file:
InterpretBool	lib/QCBOR/src/qcbor_decode.c	/^InterpretBool(QCBORDecodeContext *pMe, const QCBORItem *pItem, bool *pBool)$/;"	f	typeref:typename:QCBORError	file:
IsContextEmpty	lib/cn-cbor/test/context.c	/^int IsContextEmpty(const cn_cbor_context *pContext)$/;"	f	typeref:typename:int
IterateFunction	lib/tinycbor/src/cborparser.c	/^typedef uintptr_t (*IterateFunction)(char *, const uint8_t *, size_t);$/;"	t	typeref:typename:uintptr_t (*)(char *,const uint8_t *,size_t)	file:
JSON2CBOR_SOURCES	lib/tinycbor/Makefile	/^  JSON2CBOR_SOURCES = tools\/json2cbor\/json2cbor.c$/;"	m
JSON_GCOV_FILES	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^	set(JSON_GCOV_FILES "${JSON_GCOV_FILES}${FILE_JSON}, ")$/;"	v
JSON_GCOV_FILES	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^set(JSON_GCOV_FILES "${JSON_GCOV_FILES}]")$/;"	v
JSON_GCOV_FILES	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^set(JSON_GCOV_FILES "[")$/;"	v
JSON_SERVICE_JOB_ID	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^set(JSON_SERVICE_JOB_ID $ENV{TRAVIS_JOB_ID})$/;"	v
JSON_SERVICE_NAME	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^set(JSON_SERVICE_NAME "travis-ci")$/;"	v
JSON_TEMPLATE	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^set(JSON_TEMPLATE$/;"	v
KnownTagData	lib/tinycbor/src/cborvalidation.c	/^struct KnownTagData { uint32_t tag; uint32_t types; };$/;"	s	file:
LDFLAGS_CJSON	lib/tinycbor/Makefile	/^    LDFLAGS_CJSON = -lcjson$/;"	m
LDFLAGS_GCSECTIONS	lib/tinycbor/Makefile	/^LDFLAGS_GCSECTIONS = -Wl,--gc-sections$/;"	m
LDLIBS	lib/tinycbor/Makefile	/^LDLIBS = -lm$/;"	m
LEN_IS_EIGHT_BYTES	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define LEN_IS_EIGHT_BYTES /;"	d
LEN_IS_FOUR_BYTES	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define LEN_IS_FOUR_BYTES /;"	d
LEN_IS_INDEFINITE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define LEN_IS_INDEFINITE /;"	d
LEN_IS_ONE_BYTE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define LEN_IS_ONE_BYTE /;"	d
LEN_IS_TWO_BYTES	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define LEN_IS_TWO_BYTES /;"	d
LenType	lib/tinycbor/src/open_memstream.c	/^typedef int LenType;$/;"	t	typeref:typename:int	file:
LenType	lib/tinycbor/src/open_memstream.c	/^typedef size_t LenType;$/;"	t	typeref:typename:size_t	file:
MAKEFILE	lib/tinycbor/Makefile	/^MAKEFILE := $(lastword $(MAKEFILE_LIST))$/;"	m
MAKE_DOUBLE	lib/QCBOR/test/float_tests.c	/^#define MAKE_DOUBLE(/;"	d	file:
MAX_CYLINDERS	lib/QCBOR/example.c	/^#define MAX_CYLINDERS /;"	d	file:
MINGW	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(MINGW 1)$/;"	v
MINGW	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(MINGW 1)$/;"	v
MKDIR	lib/tinycbor/Makefile	/^MKDIR = mkdir -p$/;"	m
MSG_SIZE	lib/cn-cbor/test/ctest.h	/^#define MSG_SIZE /;"	d
MS__Test_Section	lib/cn-cbor/test/ctest.h	/^#define MS__Test_Section /;"	d
MS__Test_Section	lib/cn-cbor/test/ctest.h	/^#define MS__Test_Section$/;"	d
MT_ARRAY	lib/cn-cbor/src/cbor.h	/^#define MT_ARRAY /;"	d
MT_BYTES	lib/cn-cbor/src/cbor.h	/^#define MT_BYTES /;"	d
MT_MAP	lib/cn-cbor/src/cbor.h	/^#define MT_MAP /;"	d
MT_NEGATIVE	lib/cn-cbor/src/cbor.h	/^#define MT_NEGATIVE /;"	d
MT_PRIM	lib/cn-cbor/src/cbor.h	/^#define MT_PRIM /;"	d
MT_TAG	lib/cn-cbor/src/cbor.h	/^#define MT_TAG /;"	d
MT_TEXT	lib/cn-cbor/src/cbor.h	/^#define MT_TEXT /;"	d
MT_UNSIGNED	lib/cn-cbor/src/cbor.h	/^#define MT_UNSIGNED /;"	d
MajorTypeMask	lib/tinycbor/src/cborinternal_p.h	/^    MajorTypeMask           = (int) (~0U << MajorTypeShift),$/;"	e	enum:__anon5d9aee230103
MajorTypeShift	lib/tinycbor/src/cborinternal_p.h	/^    MajorTypeShift          = SmallValueBitLength,$/;"	e	enum:__anon5d9aee230103
MakeIndefiniteBigBstr	lib/QCBOR/test/qcbor_decode_tests.c	/^static UsefulBufC MakeIndefiniteBigBstr(UsefulBuf Storage)$/;"	f	typeref:typename:UsefulBufC	file:
MakeUsefulBufOnStack	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^#define  MakeUsefulBufOnStack(/;"	d
Mantissa	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^         } Mantissa;$/;"	m	struct:_QCBORItem::__anonf04339f0020a::__anonf04339f00408	typeref:union:_QCBORItem::__anonf04339f0020a::__anonf04339f00408::__anonf04339f0050a
MantissaAndExponentTypeHandler	lib/QCBOR/src/qcbor_decode.c	/^static QCBORError MantissaAndExponentTypeHandler(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:QCBORError	file:
Manufacturer	lib/QCBOR/example.c	/^   UsefulBufC Manufacturer;$/;"	m	struct:__anon03c895ae0108	typeref:typename:UsefulBufC	file:
Map	lib/tinycbor/tests/encoder/data.cpp	/^typedef QVector<QPair<QVariant, QVariant>> Map;$/;"	t	typeref:typename:QVector<QPair<QVariant,QVariant>>	file:
MapEncodeTest	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t MapEncodeTest()$/;"	f	typeref:typename:int32_t
MapSearch	lib/QCBOR/src/qcbor_decode.c	/^MapSearch(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:QCBORError	file:
MapType	lib/tinycbor/src/cborinternal_p.h	/^    MapType = 5U,           \/* a.k.a. object *\/$/;"	e	enum:CborMajorTypes
MatchLabel	lib/QCBOR/src/qcbor_decode.c	/^MatchLabel(QCBORItem Item1, QCBORItem Item2)$/;"	f	typeref:typename:bool	file:
MatchType	lib/QCBOR/src/qcbor_decode.c	/^MatchType(QCBORItem Item1, QCBORItem Item2)$/;"	f	typeref:typename:bool	file:
MemPoolTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t MemPoolTest(void)$/;"	f	typeref:typename:int32_t
MemPool_Function	lib/QCBOR/src/qcbor_decode.c	/^MemPool_Function(void *pPool, void *pMem, size_t uNewSize)$/;"	f	typeref:typename:UsefulBuf	file:
MemPool_Pack	lib/QCBOR/src/qcbor_decode.c	/^MemPool_Pack(UsefulBuf Pool, uint32_t uFreeOffset)$/;"	f	typeref:typename:int	file:
MemPool_Unpack	lib/QCBOR/src/qcbor_decode.c	/^MemPool_Unpack(const void *pMem, uint32_t *puPoolSize, uint32_t *puFreeOffset)$/;"	f	typeref:typename:int	file:
MetaData	lib/tinycbor/tools/json2cbor/json2cbor.c	/^struct MetaData {$/;"	s	file:
MyCalloc	lib/cn-cbor/test/context.c	/^void *MyCalloc(size_t count, size_t size, void *context)$/;"	f	typeref:typename:void *
MyContext	lib/cn-cbor/test/context.c	/^} MyContext;$/;"	t	typeref:struct:__anon676fdaa30108	file:
MyFree	lib/cn-cbor/test/context.c	/^void MyFree(void *ptr, void *context)$/;"	f	typeref:typename:void
MyItem	lib/cn-cbor/test/context.c	/^} MyItem;$/;"	t	typeref:struct:_MyItem	file:
NOMINMAX	lib/tinycbor/tests/parser/tst_parser.cpp	/^#  define NOMINMAX /;"	d	file:
NULLUsefulBuf	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^#define NULLUsefulBuf /;"	d
NULLUsefulBufC	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^#define NULLUsefulBufC /;"	d
NaNExperiments	lib/QCBOR/test/float_tests.c	/^static int NaNExperiments() {$/;"	f	typeref:typename:int	file:
NegativeInteger	lib/tinycbor/tests/encoder/data.cpp	/^struct NegativeInteger { quint64 abs; };$/;"	s	file:
NegativeIntegerType	lib/tinycbor/src/cborinternal_p.h	/^    NegativeIntegerType = 1U,$/;"	e	enum:CborMajorTypes
NestLevelAscender	lib/QCBOR/src/qcbor_decode.c	/^static QCBORError NestLevelAscender(QCBORDecodeContext *pMe, bool bMarkEnd)$/;"	f	typeref:typename:QCBORError	file:
Nested Tags	lib/QCBOR/doc/Tagging.md	/^## Nested Tags$/;"	s
NestedMapTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t NestedMapTest()$/;"	f	typeref:typename:int32_t
NestedMapTestIndefLen	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t NestedMapTestIndefLen()$/;"	f	typeref:typename:int32_t
Nesting_Decrease	lib/QCBOR/src/qcbor_encode.c	/^inline static void Nesting_Decrease(QCBORTrackNesting *pNesting)$/;"	f	typeref:typename:void	file:
Nesting_GetCount	lib/QCBOR/src/qcbor_encode.c	/^inline static uint16_t Nesting_GetCount(QCBORTrackNesting *pNesting)$/;"	f	typeref:typename:uint16_t	file:
Nesting_GetMajorType	lib/QCBOR/src/qcbor_encode.c	/^inline static uint8_t Nesting_GetMajorType(QCBORTrackNesting *pNesting)$/;"	f	typeref:typename:uint8_t	file:
Nesting_GetStartPos	lib/QCBOR/src/qcbor_encode.c	/^inline static uint32_t Nesting_GetStartPos(QCBORTrackNesting *pNesting)$/;"	f	typeref:typename:uint32_t	file:
Nesting_Increase	lib/QCBOR/src/qcbor_encode.c	/^inline static uint8_t Nesting_Increase(QCBORTrackNesting *pNesting,$/;"	f	typeref:typename:uint8_t	file:
Nesting_Increment	lib/QCBOR/src/qcbor_encode.c	/^inline static uint8_t Nesting_Increment(QCBORTrackNesting *pNesting)$/;"	f	typeref:typename:uint8_t	file:
Nesting_Init	lib/QCBOR/src/qcbor_encode.c	/^inline static void Nesting_Init(QCBORTrackNesting *pNesting)$/;"	f	typeref:typename:void	file:
Nesting_IsInNest	lib/QCBOR/src/qcbor_encode.c	/^inline static bool Nesting_IsInNest(QCBORTrackNesting *pNesting)$/;"	f	typeref:typename:bool	file:
New Types	lib/QCBOR/doc/Tagging.md	/^## New Types$/;"	s
New Version With Spiffy Decode	lib/QCBOR/README.md	/^## New Version With Spiffy Decode$/;"	s
NextIsBreak	lib/QCBOR/src/qcbor_decode.c	/^NextIsBreak(UsefulInputBuf *pUIB, bool *pbNextIsBreak)$/;"	f	typeref:typename:QCBORError	file:
NotWellFormedTests	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t NotWellFormedTests()$/;"	f	typeref:typename:int32_t
NullValue	lib/tinycbor/src/cborinternal_p.h	/^    NullValue               = 22,$/;"	e	enum:CborSimpleTypes
NumToString	lib/QCBOR/test/run_tests.c	/^static const char *NumToString(int32_t nNum, UsefulBuf StringMem)$/;"	f	typeref:typename:const char *	file:
NumberConversion	lib/QCBOR/test/qcbor_decode_tests.c	/^struct NumberConversion {$/;"	s	file:
NumberConversions	lib/QCBOR/test/qcbor_decode_tests.c	/^static const struct NumberConversion NumberConversions[] = {$/;"	v	typeref:typename:const struct NumberConversion[]	file:
NumberPrecisionWasLost	lib/tinycbor/src/cbortojson.c	/^    NumberPrecisionWasLost      = 0x400,$/;"	e	enum:ConversionStatusFlags	file:
NumberWasInfinite	lib/tinycbor/src/cbortojson.c	/^    NumberWasInfinite           = 0x1000,$/;"	e	enum:ConversionStatusFlags	file:
NumberWasNaN	lib/tinycbor/src/cbortojson.c	/^    NumberWasNaN                = 0x800,$/;"	e	enum:ConversionStatusFlags	file:
NumberWasNegative	lib/tinycbor/src/cbortojson.c	/^    NumberWasNegative           = 0x2000,   \/* only used with NumberWasInifite or NumberWasTooB/;"	e	enum:ConversionStatusFlags	file:
OUT	lib/cn-cbor/test/file_test.c	/^#define OUT(/;"	d	file:
OUT	lib/cn-cbor/test/test.c	/^#define OUT(/;"	d	file:
OptTagParseTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t OptTagParseTest()$/;"	f	typeref:typename:int32_t
Other Software Using QCBOR	lib/QCBOR/README.md	/^## Other Software Using QCBOR$/;"	s
OutBuf	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   UsefulOutBuf      OutBuf;  \/\/ Pointer to output buffer, its length and$/;"	m	struct:_QCBOREncodeContext	typeref:typename:UsefulOutBuf
OutputStringCB	lib/QCBOR/test/run_tests.h	/^typedef void (*OutputStringCB)(const char *szString, void *pOutCtx, int bNewline);$/;"	t	typeref:typename:void (*)(const char * szString,void * pOutCtx,int bNewline)
PACKAGE	lib/tinycbor/Makefile	/^PACKAGE = tinycbor-$(VERSION)$/;"	m
PLATFORM_ID	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID$/;"	d	file:
PREFIX	lib/QCBOR/Makefile	/^    PREFIX := \/usr\/local$/;"	m
PRF	lib/cn-cbor/test/file_test.c	/^#define PRF(/;"	d	file:
PRF	lib/cn-cbor/test/test.c	/^#define PRF(/;"	d	file:
PUBLIC_INTERFACE	lib/QCBOR/Makefile	/^PUBLIC_INTERFACE=inc\/qcbor\/UsefulBuf.h inc\/qcbor\/qcbor_private.h inc\/qcbor\/qcbor_common.h /;"	m
PageSize	lib/tinycbor/tests/parser/tst_parser.cpp	/^    static const size_t PageSize = 4096;$/;"	m	struct:ParserWrapper	typeref:typename:const size_t	file:
ParseDeepArrayTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t ParseDeepArrayTest()$/;"	f	typeref:typename:int32_t
ParseMapAsArrayTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t ParseMapAsArrayTest()$/;"	f	typeref:typename:int32_t
ParseMapTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t ParseMapTest()$/;"	f	typeref:typename:int32_t
ParseMapTest1	lib/QCBOR/test/qcbor_decode_tests.c	/^static int32_t ParseMapTest1(QCBORDecodeMode nMode)$/;"	f	typeref:typename:int32_t	file:
ParseOrderedArray	lib/QCBOR/test/qcbor_decode_tests.c	/^static int32_t ParseOrderedArray(const uint8_t *pEncoded,$/;"	f	typeref:typename:int32_t	file:
ParseSimpleTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t ParseSimpleTest()$/;"	f	typeref:typename:int32_t
ParseTooDeepArrayTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t ParseTooDeepArrayTest()$/;"	f	typeref:typename:int32_t
ParserWrapper	lib/tinycbor/tests/parser/tst_parser.cpp	/^struct ParserWrapper$/;"	s	file:
PeekTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t PeekTest()$/;"	f	typeref:typename:int32_t
PrintSize	lib/QCBOR/test/run_tests.c	/^static void PrintSize(const char *szWhat,$/;"	f	typeref:typename:void	file:
PrintSizesQCBOR	lib/QCBOR/test/run_tests.c	/^void PrintSizesQCBOR(OutputStringCB pfOutput, void *pOutCtx)$/;"	f	typeref:typename:void
PrintUsefulBufC	lib/QCBOR/test/qcbor_decode_tests.c	/^static void PrintUsefulBufC(const char *szLabel, UsefulBufC Buf)$/;"	f	typeref:typename:void	file:
ProcessBigNum	lib/QCBOR/src/qcbor_decode.c	/^static QCBORError ProcessBigNum(uint8_t          uTagRequirement,$/;"	f	typeref:typename:QCBORError	file:
ProcessEpochDate	lib/QCBOR/src/qcbor_decode.c	/^static void ProcessEpochDate(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void	file:
ProcessFailures	lib/QCBOR/test/qcbor_decode_tests.c	/^static int32_t ProcessFailures(struct FailInput *pFailInputs, size_t nNumFails)$/;"	f	typeref:typename:int32_t	file:
ProcessMantissaAndExponent	lib/QCBOR/src/qcbor_decode.c	/^static void ProcessMantissaAndExponent(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void	file:
ProcessMantissaAndExponentBig	lib/QCBOR/src/qcbor_decode.c	/^static void ProcessMantissaAndExponentBig(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void	file:
QBCOR_TYPE_WRAPPED_CBOR	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QBCOR_TYPE_WRAPPED_CBOR /;"	d
QBCOR_TYPE_WRAPPED_CBOR_SEQUENCE	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QBCOR_TYPE_WRAPPED_CBOR_SEQUENCE /;"	d
QCBOR	lib/QCBOR/README.md	/^# QCBOR$/;"	c
QCBOR Characteristics	lib/QCBOR/README.md	/^## QCBOR Characteristics$/;"	s
QCBORDecodeContext	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^typedef struct _QCBORDecodeContext QCBORDecodeContext;$/;"	t	typeref:struct:_QCBORDecodeContext
QCBORDecodeMode	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^} QCBORDecodeMode;$/;"	t	typeref:enum:__anonf04339f00103
QCBORDecodeNesting	lib/QCBOR/inc/qcbor/qcbor_private.h	/^} QCBORDecodeNesting;$/;"	t	typeref:struct:__QCBORDecodeNesting
QCBORDecode_EnterArray	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^inline static void QCBORDecode_EnterArray(QCBORDecodeContext *pMe, QCBORItem *pItem) {$/;"	f	typeref:typename:void
QCBORDecode_EnterArrayFromMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_EnterArrayFromMapN(QCBORDecodeContext *pMe, int64_t nLabel)$/;"	f	typeref:typename:void
QCBORDecode_EnterArrayFromMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_EnterArrayFromMapSZ(QCBORDecodeContext *pMe, const char  *szLabel)$/;"	f	typeref:typename:void
QCBORDecode_EnterBoundedMapOrArray	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_EnterBoundedMapOrArray(QCBORDecodeContext *pMe, uint8_t uType, QCBORItem *pItem/;"	f	typeref:typename:void
QCBORDecode_EnterBstrWrapped	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_EnterBstrWrapped(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_EnterBstrWrappedFromMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_EnterBstrWrappedFromMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_EnterBstrWrappedFromMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_EnterBstrWrappedFromMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_EnterMap	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^inline static void QCBORDecode_EnterMap(QCBORDecodeContext *pMe, QCBORItem *pItem) {$/;"	f	typeref:typename:void
QCBORDecode_EnterMapFromMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_EnterMapFromMapN(QCBORDecodeContext *pMe, int64_t nLabel)$/;"	f	typeref:typename:void
QCBORDecode_EnterMapFromMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_EnterMapFromMapSZ(QCBORDecodeContext *pMe, const char  *szLabel)$/;"	f	typeref:typename:void
QCBORDecode_ExitArray	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^static inline void QCBORDecode_ExitArray(QCBORDecodeContext *pMe)$/;"	f	typeref:typename:void
QCBORDecode_ExitBoundedMapOrArray	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_ExitBoundedMapOrArray(QCBORDecodeContext *pMe, uint8_t uType)$/;"	f	typeref:typename:void
QCBORDecode_ExitBstrWrapped	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_ExitBstrWrapped(QCBORDecodeContext *pMe)$/;"	f	typeref:typename:void
QCBORDecode_ExitMap	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^static inline void QCBORDecode_ExitMap(QCBORDecodeContext *pMe)$/;"	f	typeref:typename:void
QCBORDecode_Finish	lib/QCBOR/src/qcbor_decode.c	/^QCBORError QCBORDecode_Finish(QCBORDecodeContext *me)$/;"	f	typeref:typename:QCBORError
QCBORDecode_GetAndResetError	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^static inline QCBORError QCBORDecode_GetAndResetError(QCBORDecodeContext *pMe)$/;"	f	typeref:typename:QCBORError
QCBORDecode_GetB64	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^static inline void QCBORDecode_GetB64(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetB64InMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^inline static void QCBORDecode_GetB64InMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetB64InMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetB64InMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetB64URL	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetB64URL(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetB64URLInMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetB64URLInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetB64URLInMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetB64URLInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetBigFloat	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetBigFloat(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetBigFloatBig	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetBigFloatBig(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetBigFloatBigInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetBigFloatBigInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetBigFloatBigInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetBigFloatBigInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetBigFloatInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetBigFloatInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetBigFloatInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetBigFloatInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetBignum	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetBignum(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetBignumInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetBignumInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetBignumInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetBignumInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetBinaryUUID	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetBinaryUUID(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetBinaryUUIDInMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetBinaryUUIDInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetBinaryUUIDInMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetBinaryUUIDInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetBool	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetBool(QCBORDecodeContext *pMe, bool *pValue)$/;"	f	typeref:typename:void
QCBORDecode_GetBoolInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetBoolInMapN(QCBORDecodeContext *pMe, int64_t nLabel, bool *pValue)$/;"	f	typeref:typename:void
QCBORDecode_GetBoolInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetBoolInMapSZ(QCBORDecodeContext *pMe, const char *szLabel, bool *pValue)$/;"	f	typeref:typename:void
QCBORDecode_GetByteString	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetByteString(QCBORDecodeContext *pMe,  UsefulBufC *pValue)$/;"	f	typeref:typename:void
QCBORDecode_GetByteStringInMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetByteStringInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetByteStringInMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetByteStringInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDateString	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetDateString(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDateStringInMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetDateStringInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDateStringInMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetDateStringInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDecimalFraction	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetDecimalFraction(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDecimalFractionBig	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetDecimalFractionBig(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDecimalFractionBigInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetDecimalFractionBigInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDecimalFractionBigInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetDecimalFractionBigInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDecimalFractionInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetDecimalFractionInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDecimalFractionInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetDecimalFractionInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDouble	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetDouble(QCBORDecodeContext *pMe, double *pValue)$/;"	f	typeref:typename:void
QCBORDecode_GetDoubleConvert	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetDoubleConvert(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDoubleConvertAll	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetDoubleConvertAll(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDoubleConvertAllInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetDoubleConvertAllInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDoubleConvertAllInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetDoubleConvertAllInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDoubleConvertInMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetDoubleConvertInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDoubleConvertInMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetDoubleConvertInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDoubleConvertInternal	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetDoubleConvertInternal(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDoubleConvertInternalInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetDoubleConvertInternalInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDoubleConvertInternalInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetDoubleConvertInternalInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDoubleInMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetDoubleInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetDoubleInMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetDoubleInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetEpochDate	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetEpochDate(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetEpochDateInMapN	lib/QCBOR/src/qcbor_decode.c	/^QCBORDecode_GetEpochDateInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetEpochDateInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^QCBORDecode_GetEpochDateInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetError	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^static inline QCBORError QCBORDecode_GetError(QCBORDecodeContext *pMe)$/;"	f	typeref:typename:QCBORError
QCBORDecode_GetInt64	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetInt64(QCBORDecodeContext *pMe, int64_t *pnValue)$/;"	f	typeref:typename:void
QCBORDecode_GetInt64Convert	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetInt64Convert(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetInt64ConvertAll	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetInt64ConvertAll(QCBORDecodeContext *pMe, uint32_t uConvertTypes, int64_t *pn/;"	f	typeref:typename:void
QCBORDecode_GetInt64ConvertAllInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetInt64ConvertAllInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetInt64ConvertAllInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetInt64ConvertAllInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetInt64ConvertInMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetInt64ConvertInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetInt64ConvertInMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetInt64ConvertInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetInt64ConvertInternal	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetInt64ConvertInternal(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetInt64ConvertInternalInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetInt64ConvertInternalInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetInt64ConvertInternalInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetInt64ConvertInternalInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetInt64InMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetInt64InMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetInt64InMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetInt64InMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetItemInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetItemInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetItemInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetItemInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetItemsInMap	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetItemsInMap(QCBORDecodeContext *pMe, QCBORItem *pItemList)$/;"	f	typeref:typename:void
QCBORDecode_GetItemsInMapWithCallback	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetItemsInMapWithCallback(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetMIMEInternal	lib/QCBOR/src/qcbor_decode.c	/^QCBORError QCBORDecode_GetMIMEInternal(uint8_t     uTagRequirement,$/;"	f	typeref:typename:QCBORError
QCBORDecode_GetMIMEMessage	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetMIMEMessage(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetMIMEMessageInMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetMIMEMessageInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetMIMEMessageInMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetMIMEMessageInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetNext	lib/QCBOR/src/qcbor_decode.c	/^QCBORDecode_GetNext(QCBORDecodeContext *pMe, QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError
QCBORDecode_GetNextMapOrArray	lib/QCBOR/src/qcbor_decode.c	/^QCBORDecode_GetNextMapOrArray(QCBORDecodeContext *me, QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
QCBORDecode_GetNextTag	lib/QCBOR/src/qcbor_decode.c	/^QCBORDecode_GetNextTag(QCBORDecodeContext *me, QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
QCBORDecode_GetNextWithTags	lib/QCBOR/src/qcbor_decode.c	/^QCBORDecode_GetNextWithTags(QCBORDecodeContext *me,$/;"	f	typeref:typename:QCBORError
QCBORDecode_GetNthTag	lib/QCBOR/src/qcbor_decode.c	/^uint64_t QCBORDecode_GetNthTag(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:uint64_t
QCBORDecode_GetNthTagOfLast	lib/QCBOR/src/qcbor_decode.c	/^uint64_t QCBORDecode_GetNthTagOfLast(const QCBORDecodeContext *pMe,$/;"	f	typeref:typename:uint64_t
QCBORDecode_GetRegex	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^static inline void QCBORDecode_GetRegex(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetRegexInMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetRegexInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetRegexInMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetRegexInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetTaggedItemInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetTaggedItemInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void	file:
QCBORDecode_GetTaggedItemInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetTaggedItemInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void	file:
QCBORDecode_GetTaggedStringInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetTaggedStringInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetTaggedStringInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetTaggedStringInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetTaggedStringInternal	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetTaggedStringInternal(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetTextString	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetTextString(QCBORDecodeContext *pMe,  UsefulBufC *pValue)$/;"	f	typeref:typename:void
QCBORDecode_GetTextStringInMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetTextStringInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetTextStringInMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetTextStringInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetUInt64	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetUInt64(QCBORDecodeContext *pMe, uint64_t *puValue)$/;"	f	typeref:typename:void
QCBORDecode_GetUInt64Convert	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^void QCBORDecode_GetUInt64Convert(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetUInt64ConvertAll	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetUInt64ConvertAll(QCBORDecodeContext *pMe, uint32_t uConvertTypes, uint64_t */;"	f	typeref:typename:void
QCBORDecode_GetUInt64ConvertAllInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetUInt64ConvertAllInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetUInt64ConvertAllInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetUInt64ConvertAllInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetUInt64ConvertInMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetUInt64ConvertInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetUInt64ConvertInMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetUInt64ConvertInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetUInt64ConvertInternal	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetUInt64ConvertInternal(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetUInt64ConvertInternalInMapN	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetUInt64ConvertInternalInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetUInt64ConvertInternalInMapSZ	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_GetUInt64ConvertInternalInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetUInt64InMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetUInt64InMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetUInt64InMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetUInt64InMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetURI	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^static inline void QCBORDecode_GetURI(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetURIInMapN	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetURIInMapN(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_GetURIInMapSZ	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^QCBORDecode_GetURIInMapSZ(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_Init	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_Init(QCBORDecodeContext *me,$/;"	f	typeref:typename:void
QCBORDecode_IsNotWellFormedError	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^static inline bool QCBORDecode_IsNotWellFormedError(QCBORError uErr)$/;"	f	typeref:typename:bool
QCBORDecode_IsTagged	lib/QCBOR/src/qcbor_decode.c	/^bool QCBORDecode_IsTagged(QCBORDecodeContext *me,$/;"	f	typeref:typename:bool
QCBORDecode_IsUnrecoverableError	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^static inline bool QCBORDecode_IsUnrecoverableError(QCBORError uErr)$/;"	f	typeref:typename:bool
QCBORDecode_MantissaAndExponent	lib/QCBOR/src/qcbor_decode.c	/^QCBORDecode_MantissaAndExponent(QCBORDecodeContext *me, QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError	file:
QCBORDecode_PeekNext	lib/QCBOR/src/qcbor_decode.c	/^QCBORDecode_PeekNext(QCBORDecodeContext *pMe, QCBORItem *pDecodedItem)$/;"	f	typeref:typename:QCBORError
QCBORDecode_SetCallerConfiguredTagList	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_SetCallerConfiguredTagList(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_SetMemPool	lib/QCBOR/src/qcbor_decode.c	/^QCBORError QCBORDecode_SetMemPool(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:QCBORError
QCBORDecode_SetUpAllocator	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_SetUpAllocator(QCBORDecodeContext *pMe,$/;"	f	typeref:typename:void
QCBORDecode_VGetNext	lib/QCBOR/src/qcbor_decode.c	/^void QCBORDecode_VGetNext(QCBORDecodeContext *pMe, QCBORItem *pDecodedItem)$/;"	f	typeref:typename:void
QCBOREncodeContext	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^typedef struct _QCBOREncodeContext QCBOREncodeContext;$/;"	t	typeref:struct:_QCBOREncodeContext
QCBOREncode_AddB64Text	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddB64Text(QCBOREncodeContext *pMe, UsefulBufC B64Text)$/;"	f	typeref:typename:void
QCBOREncode_AddB64TextToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddB64TextToMap(QCBOREncodeContext *pMe, const char *szLabel, UsefulBufC B64Text)$/;"	f	typeref:typename:void
QCBOREncode_AddB64TextToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddB64TextToMapN(QCBOREncodeContext *pMe, int64_t nLabel, UsefulBufC B64Text)$/;"	f	typeref:typename:void
QCBOREncode_AddB64URLText	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddB64URLText(QCBOREncodeContext *pMe, UsefulBufC B64Text)$/;"	f	typeref:typename:void
QCBOREncode_AddB64URLTextToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddB64URLTextToMap(QCBOREncodeContext *pMe, const char *szLabel, UsefulBufC B64Text)$/;"	f	typeref:typename:void
QCBOREncode_AddB64URLTextToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddB64URLTextToMapN(QCBOREncodeContext *pMe, int64_t nLabel, UsefulBufC B64Text)$/;"	f	typeref:typename:void
QCBOREncode_AddBigFloat	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBigFloat(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddBigFloatBigNum	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBigFloatBigNum(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddBigFloatBigNumToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBigFloatBigNumToMap(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddBigFloatBigNumToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBigFloatBigNumToMapN(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddBigFloatToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBigFloatToMap(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddBigFloatToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBigFloatToMapN(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddBinaryUUID	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBinaryUUID(QCBOREncodeContext *pMe, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddBinaryUUIDToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBinaryUUIDToMap(QCBOREncodeContext *pMe, const char *szLabel, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddBinaryUUIDToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBinaryUUIDToMapN(QCBOREncodeContext *pMe, int64_t nLabel, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddBool	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBool(QCBOREncodeContext *pMe, bool b)$/;"	f	typeref:typename:void
QCBOREncode_AddBoolToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBoolToMap(QCBOREncodeContext *pMe, const char *szLabel, bool b)$/;"	f	typeref:typename:void
QCBOREncode_AddBoolToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBoolToMapN(QCBOREncodeContext *pMe, int64_t nLabel, bool b)$/;"	f	typeref:typename:void
QCBOREncode_AddBuffer	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_AddBuffer(QCBOREncodeContext *me, uint8_t uMajorType, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddBytes	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBytes(QCBOREncodeContext *pMe, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddBytesLenOnly	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBytesLenOnly(QCBOREncodeContext *pMe, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddBytesLenOnlyToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBytesLenOnlyToMap(QCBOREncodeContext *pMe, const char *szLabel, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddBytesLenOnlyToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBytesLenOnlyToMapN(QCBOREncodeContext *pMe, int64_t nLabel, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddBytesToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBytesToMap(QCBOREncodeContext *pMe, const char *szLabel, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddBytesToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddBytesToMapN(QCBOREncodeContext *pMe, int64_t nLabel, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddDateEpoch	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDateEpoch(QCBOREncodeContext *pMe, int64_t nDate)$/;"	f	typeref:typename:void
QCBOREncode_AddDateEpochToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDateEpochToMap(QCBOREncodeContext *pMe, const char *szLabel, int64_t nDate)$/;"	f	typeref:typename:void
QCBOREncode_AddDateEpochToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDateEpochToMapN(QCBOREncodeContext *pMe, int64_t nLabel, int64_t nDate)$/;"	f	typeref:typename:void
QCBOREncode_AddDateString	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDateString(QCBOREncodeContext *pMe, const char *szDate)$/;"	f	typeref:typename:void
QCBOREncode_AddDateStringToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDateStringToMap(QCBOREncodeContext *pMe, const char *szLabel, const char *szDate)$/;"	f	typeref:typename:void
QCBOREncode_AddDateStringToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDateStringToMapN(QCBOREncodeContext *pMe, int64_t nLabel, const char *szDate)$/;"	f	typeref:typename:void
QCBOREncode_AddDecimalFraction	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDecimalFraction(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddDecimalFractionBigNum	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDecimalFractionBigNum(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddDecimalFractionBigNumToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDecimalFractionBigNumToMapN(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddDecimalFractionBigNumToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDecimalFractionBigNumToMapSZ(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddDecimalFractionToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDecimalFractionToMap(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddDecimalFractionToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDecimalFractionToMapN(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddDouble	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_AddDouble(QCBOREncodeContext *me, double dNum)$/;"	f	typeref:typename:void
QCBOREncode_AddDoubleNoPreferred	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_AddDoubleNoPreferred(QCBOREncodeContext *me, double dNum)$/;"	f	typeref:typename:void
QCBOREncode_AddDoubleNoPreferredToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDoubleNoPreferredToMap(QCBOREncodeContext *pMe, const char *szLabel, double dNum)$/;"	f	typeref:typename:void
QCBOREncode_AddDoubleNoPreferredToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDoubleNoPreferredToMapN(QCBOREncodeContext *pMe, int64_t nLabel, double dNum)$/;"	f	typeref:typename:void
QCBOREncode_AddDoubleToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDoubleToMap(QCBOREncodeContext *pMe, const char *szLabel, double dNum)$/;"	f	typeref:typename:void
QCBOREncode_AddDoubleToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddDoubleToMapN(QCBOREncodeContext *pMe, int64_t nLabel, double dNum)$/;"	f	typeref:typename:void
QCBOREncode_AddEncoded	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddEncoded(QCBOREncodeContext *pMe, UsefulBufC Encoded)$/;"	f	typeref:typename:void
QCBOREncode_AddEncodedToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddEncodedToMap(QCBOREncodeContext *pMe, const char *szLabel, UsefulBufC Encoded)$/;"	f	typeref:typename:void
QCBOREncode_AddEncodedToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddEncodedToMapN(QCBOREncodeContext *pMe, int64_t nLabel, UsefulBufC Encoded)$/;"	f	typeref:typename:void
QCBOREncode_AddExponentAndMantissa	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_AddExponentAndMantissa(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddFloat	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_AddFloat(QCBOREncodeContext *me, float fNum)$/;"	f	typeref:typename:void
QCBOREncode_AddFloatNoPreferred	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_AddFloatNoPreferred(QCBOREncodeContext *me, float fNum)$/;"	f	typeref:typename:void
QCBOREncode_AddFloatNoPreferredToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddFloatNoPreferredToMap(QCBOREncodeContext *pMe, const char *szLabel, float dNum)$/;"	f	typeref:typename:void
QCBOREncode_AddFloatNoPreferredToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddFloatNoPreferredToMapN(QCBOREncodeContext *pMe, int64_t nLabel, float dNum)$/;"	f	typeref:typename:void
QCBOREncode_AddFloatToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddFloatToMap(QCBOREncodeContext *pMe, const char *szLabel, float dNum)$/;"	f	typeref:typename:void
QCBOREncode_AddFloatToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddFloatToMapN(QCBOREncodeContext *pMe, int64_t nLabel, float fNum)$/;"	f	typeref:typename:void
QCBOREncode_AddInt64	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_AddInt64(QCBOREncodeContext *me, int64_t nNum)$/;"	f	typeref:typename:void
QCBOREncode_AddInt64ToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddInt64ToMap(QCBOREncodeContext *pMe, const char *szLabel, int64_t uNum)$/;"	f	typeref:typename:void
QCBOREncode_AddInt64ToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddInt64ToMapN(QCBOREncodeContext *pMe, int64_t nLabel, int64_t uNum)$/;"	f	typeref:typename:void
QCBOREncode_AddMIMEData	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddMIMEData(QCBOREncodeContext *pMe, UsefulBufC MIMEData)$/;"	f	typeref:typename:void
QCBOREncode_AddMIMEDataToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddMIMEDataToMap(QCBOREncodeContext *pMe, const char *szLabel, UsefulBufC MIMEData)$/;"	f	typeref:typename:void
QCBOREncode_AddMIMEDataToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddMIMEDataToMapN(QCBOREncodeContext *pMe, int64_t nLabel, UsefulBufC MIMEData)$/;"	f	typeref:typename:void
QCBOREncode_AddNULL	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddNULL(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:void
QCBOREncode_AddNULLToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddNULLToMap(QCBOREncodeContext *pMe, const char *szLabel)$/;"	f	typeref:typename:void
QCBOREncode_AddNULLToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddNULLToMapN(QCBOREncodeContext *pMe, int64_t nLabel)$/;"	f	typeref:typename:void
QCBOREncode_AddNegativeBignum	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddNegativeBignum(QCBOREncodeContext *pMe, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddNegativeBignumToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddNegativeBignumToMap(QCBOREncodeContext *pMe, const char *szLabel, UsefulBufC Byte/;"	f	typeref:typename:void
QCBOREncode_AddNegativeBignumToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddNegativeBignumToMapN(QCBOREncodeContext *pMe, int64_t nLabel, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddPositiveBignum	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddPositiveBignum(QCBOREncodeContext *pMe, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddPositiveBignumToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddPositiveBignumToMap(QCBOREncodeContext *pMe, const char *szLabel, UsefulBufC Byte/;"	f	typeref:typename:void
QCBOREncode_AddPositiveBignumToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddPositiveBignumToMapN(QCBOREncodeContext *pMe, int64_t nLabel, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddRegex	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddRegex(QCBOREncodeContext *pMe, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddRegexToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddRegexToMap(QCBOREncodeContext *pMe, const char *szLabel, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddRegexToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddRegexToMapN(QCBOREncodeContext *pMe, int64_t nLabel, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddSZString	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddSZString(QCBOREncodeContext *pMe, const char *szString)$/;"	f	typeref:typename:void
QCBOREncode_AddSZStringToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddSZStringToMap(QCBOREncodeContext *pMe, const char *szLabel, const char *szString)$/;"	f	typeref:typename:void
QCBOREncode_AddSZStringToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddSZStringToMapN(QCBOREncodeContext *pMe, int64_t nLabel, const char *szString)$/;"	f	typeref:typename:void
QCBOREncode_AddSimple	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddSimple(QCBOREncodeContext *pMe, uint64_t uNum)$/;"	f	typeref:typename:void
QCBOREncode_AddSimpleToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddSimpleToMap(QCBOREncodeContext *pMe, const char *szLabel, uint8_t uSimple)$/;"	f	typeref:typename:void
QCBOREncode_AddSimpleToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddSimpleToMapN(QCBOREncodeContext *pMe, int nLabel, uint8_t uSimple)$/;"	f	typeref:typename:void
QCBOREncode_AddTB64Text	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTB64Text(QCBOREncodeContext *pMe, uint8_t uTagRequirement, UsefulBufC B64Text)$/;"	f	typeref:typename:void
QCBOREncode_AddTB64TextToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTB64TextToMapN(QCBOREncodeContext *pMe, int64_t nLabel, uint8_t uTagRequirement, /;"	f	typeref:typename:void
QCBOREncode_AddTB64TextToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTB64TextToMapSZ(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTB64URLText	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTB64URLText(QCBOREncodeContext *pMe, uint8_t uTagRequirement, UsefulBufC B64Text)$/;"	f	typeref:typename:void
QCBOREncode_AddTB64URLTextToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTB64URLTextToMapN(QCBOREncodeContext *pMe, int64_t nLabel, uint8_t uTagRequiremen/;"	f	typeref:typename:void
QCBOREncode_AddTB64URLTextToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTB64URLTextToMapSZ(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTBigFloat	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTBigFloat(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTBigFloatBigNum	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTBigFloatBigNum(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTBigFloatBigNumToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTBigFloatBigNumToMapN(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTBigFloatBigNumToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTBigFloatBigNumToMapSZ(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTBigFloatToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTBigFloatToMapN(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTBigFloatToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTBigFloatToMapSZ(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTBinaryUUID	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTBinaryUUID(QCBOREncodeContext *pMe, uint8_t uTagRequirement, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddTBinaryUUIDToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTBinaryUUIDToMapN(QCBOREncodeContext *pMe, int64_t nLabel, uint8_t uTagRequiremen/;"	f	typeref:typename:void
QCBOREncode_AddTBinaryUUIDToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTBinaryUUIDToMapSZ(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTDateEpoch	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTDateEpoch(QCBOREncodeContext *pMe, uint8_t uTag, int64_t nDate)$/;"	f	typeref:typename:void
QCBOREncode_AddTDateEpochToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTDateEpochToMapN(QCBOREncodeContext *pMe, int64_t nLabel, uint8_t uTag, int64_t n/;"	f	typeref:typename:void
QCBOREncode_AddTDateEpochToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTDateEpochToMapSZ(QCBOREncodeContext *pMe, const char *szLabel, uint8_t uTag, int/;"	f	typeref:typename:void
QCBOREncode_AddTDateString	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTDateString(QCBOREncodeContext *pMe, uint8_t uTagRequirement, const char *szDate)$/;"	f	typeref:typename:void
QCBOREncode_AddTDateStringToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTDateStringToMapN(QCBOREncodeContext *pMe, int64_t nLabel, uint8_t uTagRequiremen/;"	f	typeref:typename:void
QCBOREncode_AddTDateStringToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTDateStringToMapSZ(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTDecimalFraction	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTDecimalFraction(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTDecimalFractionBigNum	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTDecimalFractionBigNum(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTDecimalFractionBigNumToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTDecimalFractionBigNumToMapN(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTDecimalFractionBigNumToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTDecimalFractionBigNumToMapSZ(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTDecimalFractionToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTDecimalFractionToMapN(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTDecimalFractionToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTDecimalFractionToMapSZ(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTMIMEData	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTMIMEData(QCBOREncodeContext *pMe, uint8_t uTagRequirement, UsefulBufC MIMEData)$/;"	f	typeref:typename:void
QCBOREncode_AddTMIMEDataToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTMIMEDataToMapN(QCBOREncodeContext *pMe, int64_t nLabel, uint8_t uTagRequirement,/;"	f	typeref:typename:void
QCBOREncode_AddTMIMEDataToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTMIMEDataToMapSZ(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTNegativeBignum	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTNegativeBignum(QCBOREncodeContext *pMe, uint8_t uTagRequirement, UsefulBufC Byte/;"	f	typeref:typename:void
QCBOREncode_AddTNegativeBignumToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTNegativeBignumToMapN(QCBOREncodeContext *pMe, int64_t nLabel, uint8_t uTagRequir/;"	f	typeref:typename:void
QCBOREncode_AddTNegativeBignumToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTNegativeBignumToMapSZ(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTPositiveBignum	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTPositiveBignum(QCBOREncodeContext *pMe, uint8_t uTagRequirement, UsefulBufC Byte/;"	f	typeref:typename:void
QCBOREncode_AddTPositiveBignumToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTPositiveBignumToMapN(QCBOREncodeContext *pMe, int64_t nLabel, uint8_t uTagRequir/;"	f	typeref:typename:void
QCBOREncode_AddTPositiveBignumToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTPositiveBignumToMapSZ(QCBOREncodeContext *pMe,$/;"	f	typeref:typename:void
QCBOREncode_AddTRegex	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTRegex(QCBOREncodeContext *pMe, uint8_t uTagRequirement, UsefulBufC Bytes)$/;"	f	typeref:typename:void
QCBOREncode_AddTRegexToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTRegexToMapN(QCBOREncodeContext *pMe, int64_t nLabel, uint8_t uTagRequirement, Us/;"	f	typeref:typename:void
QCBOREncode_AddTRegexToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTRegexToMapSZ(QCBOREncodeContext *pMe, const char *szLabel, uint8_t uTagRequireme/;"	f	typeref:typename:void
QCBOREncode_AddTURI	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTURI(QCBOREncodeContext *pMe, uint8_t uTagRequirement, UsefulBufC URI)$/;"	f	typeref:typename:void
QCBOREncode_AddTURIToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTURIToMapN(QCBOREncodeContext *pMe, int64_t nLabel, uint8_t uTagRequirement, Usef/;"	f	typeref:typename:void
QCBOREncode_AddTURIToMapSZ	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTURIToMapSZ(QCBOREncodeContext *pMe, const char *szLabel, uint8_t uTagRequirement/;"	f	typeref:typename:void
QCBOREncode_AddTag	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_AddTag(QCBOREncodeContext *me, uint64_t uTag)$/;"	f	typeref:typename:void
QCBOREncode_AddText	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddText(QCBOREncodeContext *pMe, UsefulBufC Text)$/;"	f	typeref:typename:void
QCBOREncode_AddTextToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTextToMap(QCBOREncodeContext *pMe, const char *szLabel, UsefulBufC Text)$/;"	f	typeref:typename:void
QCBOREncode_AddTextToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddTextToMapN(QCBOREncodeContext *pMe, int64_t nLabel, UsefulBufC Text)$/;"	f	typeref:typename:void
QCBOREncode_AddType7	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_AddType7(QCBOREncodeContext *me, uint8_t uMinLen, uint64_t uNum)$/;"	f	typeref:typename:void
QCBOREncode_AddUInt64	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_AddUInt64(QCBOREncodeContext *me, uint64_t uValue)$/;"	f	typeref:typename:void
QCBOREncode_AddUInt64ToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddUInt64ToMap(QCBOREncodeContext *pMe, const char *szLabel, uint64_t uNum)$/;"	f	typeref:typename:void
QCBOREncode_AddUInt64ToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddUInt64ToMapN(QCBOREncodeContext *pMe, int64_t nLabel, uint64_t uNum)$/;"	f	typeref:typename:void
QCBOREncode_AddURI	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddURI(QCBOREncodeContext *pMe, UsefulBufC URI)$/;"	f	typeref:typename:void
QCBOREncode_AddURIToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddURIToMap(QCBOREncodeContext *pMe, const char *szLabel, UsefulBufC URI)$/;"	f	typeref:typename:void
QCBOREncode_AddURIToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddURIToMapN(QCBOREncodeContext *pMe, int64_t nLabel, UsefulBufC URI)$/;"	f	typeref:typename:void
QCBOREncode_AddUndef	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddUndef(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:void
QCBOREncode_AddUndefToMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddUndefToMap(QCBOREncodeContext *pMe, const char *szLabel)$/;"	f	typeref:typename:void
QCBOREncode_AddUndefToMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_AddUndefToMapN(QCBOREncodeContext *pMe, int64_t nLabel)$/;"	f	typeref:typename:void
QCBOREncode_BstrWrap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_BstrWrap(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:void
QCBOREncode_BstrWrapInMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_BstrWrapInMap(QCBOREncodeContext *pMe, const char *szLabel)$/;"	f	typeref:typename:void
QCBOREncode_BstrWrapInMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_BstrWrapInMapN(QCBOREncodeContext *pMe, int64_t nLabel)$/;"	f	typeref:typename:void
QCBOREncode_CloseArray	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_CloseArray(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:void
QCBOREncode_CloseArrayIndefiniteLength	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_CloseArrayIndefiniteLength(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:void
QCBOREncode_CloseBstrWrap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_CloseBstrWrap(QCBOREncodeContext *pMe, UsefulBufC *pWrappedCBOR)$/;"	f	typeref:typename:void
QCBOREncode_CloseBstrWrap2	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_CloseBstrWrap2(QCBOREncodeContext *me, bool bIncludeCBORHead, UsefulBufC *pWrap/;"	f	typeref:typename:void
QCBOREncode_CloseMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_CloseMap(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:void
QCBOREncode_CloseMapIndefiniteLength	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_CloseMapIndefiniteLength(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:void
QCBOREncode_CloseMapOrArray	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_CloseMapOrArray(QCBOREncodeContext *me, uint8_t uMajorType)$/;"	f	typeref:typename:void
QCBOREncode_CloseMapOrArrayIndefiniteLength	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_CloseMapOrArrayIndefiniteLength(QCBOREncodeContext *me, uint8_t uMajorType)$/;"	f	typeref:typename:void
QCBOREncode_EncodeHead	lib/QCBOR/src/qcbor_encode.c	/^UsefulBufC QCBOREncode_EncodeHead(UsefulBuf buffer,$/;"	f	typeref:typename:UsefulBufC
QCBOREncode_Finish	lib/QCBOR/src/qcbor_encode.c	/^QCBORError QCBOREncode_Finish(QCBOREncodeContext *me, UsefulBufC *pEncodedCBOR)$/;"	f	typeref:typename:QCBORError
QCBOREncode_FinishGetSize	lib/QCBOR/src/qcbor_encode.c	/^QCBORError QCBOREncode_FinishGetSize(QCBOREncodeContext *me, size_t *puEncodedLen)$/;"	f	typeref:typename:QCBORError
QCBOREncode_GetErrorState	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_GetErrorState(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:QCBORError
QCBOREncode_Init	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_Init(QCBOREncodeContext *me, UsefulBuf Storage)$/;"	f	typeref:typename:void
QCBOREncode_IsBufferNULL	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_IsBufferNULL(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:int
QCBOREncode_OpenArray	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_OpenArray(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:void
QCBOREncode_OpenArrayInMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_OpenArrayInMap(QCBOREncodeContext *pMe, const char *szLabel)$/;"	f	typeref:typename:void
QCBOREncode_OpenArrayInMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_OpenArrayInMapN(QCBOREncodeContext *pMe,  int64_t nLabel)$/;"	f	typeref:typename:void
QCBOREncode_OpenArrayIndefiniteLength	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_OpenArrayIndefiniteLength(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:void
QCBOREncode_OpenArrayIndefiniteLengthInMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_OpenArrayIndefiniteLengthInMap(QCBOREncodeContext *pMe, const char *szLabel)$/;"	f	typeref:typename:void
QCBOREncode_OpenArrayIndefiniteLengthInMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_OpenArrayIndefiniteLengthInMapN(QCBOREncodeContext *pMe,  int64_t nLabel)$/;"	f	typeref:typename:void
QCBOREncode_OpenMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_OpenMap(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:void
QCBOREncode_OpenMapInMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_OpenMapInMap(QCBOREncodeContext *pMe, const char *szLabel)$/;"	f	typeref:typename:void
QCBOREncode_OpenMapInMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_OpenMapInMapN(QCBOREncodeContext *pMe, int64_t nLabel)$/;"	f	typeref:typename:void
QCBOREncode_OpenMapIndefiniteLength	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_OpenMapIndefiniteLength(QCBOREncodeContext *pMe)$/;"	f	typeref:typename:void
QCBOREncode_OpenMapIndefiniteLengthInMap	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_OpenMapIndefiniteLengthInMap(QCBOREncodeContext *pMe, const char *szLabel)$/;"	f	typeref:typename:void
QCBOREncode_OpenMapIndefiniteLengthInMapN	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^QCBOREncode_OpenMapIndefiniteLengthInMapN(QCBOREncodeContext *pMe, int64_t nLabel)$/;"	f	typeref:typename:void
QCBOREncode_OpenMapOrArray	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_OpenMapOrArray(QCBOREncodeContext *me, uint8_t uMajorType)$/;"	f	typeref:typename:void
QCBOREncode_OpenMapOrArrayIndefiniteLength	lib/QCBOR/src/qcbor_encode.c	/^void QCBOREncode_OpenMapOrArrayIndefiniteLength(QCBOREncodeContext *me, uint8_t uMajorType)$/;"	f	typeref:typename:void
QCBORError	lib/QCBOR/inc/qcbor/qcbor_common.h	/^} QCBORError;$/;"	t	typeref:enum:__anon1cfd58550103
QCBORHeadTest	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t QCBORHeadTest()$/;"	f	typeref:typename:int32_t
QCBORItem	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^} QCBORItem;$/;"	t	typeref:struct:_QCBORItem
QCBORItemCallback	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^typedef QCBORError (*QCBORItemCallback)(void            *pCallbackCtx,$/;"	t	typeref:typename:QCBORError (*)(void * pCallbackCtx,const QCBORItem * pItem)
QCBORItem_IsEmptyDefiniteLengthMapOrArray	lib/QCBOR/src/qcbor_decode.c	/^QCBORItem_IsEmptyDefiniteLengthMapOrArray(const QCBORItem *pMe)$/;"	f	typeref:typename:bool	file:
QCBORItem_IsIndefiniteLengthMapOrArray	lib/QCBOR/src/qcbor_decode.c	/^QCBORItem_IsIndefiniteLengthMapOrArray(const QCBORItem *pMe)$/;"	f	typeref:typename:bool	file:
QCBORItem_IsMapOrArray	lib/QCBOR/src/qcbor_decode.c	/^QCBORItem_IsMapOrArray(const QCBORItem *pMe)$/;"	f	typeref:typename:bool	file:
QCBORStringAllocate	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^typedef UsefulBuf (* QCBORStringAllocate)(void *pAllocateCxt, void *pOldMem, size_t uNewSize);$/;"	t	typeref:typename:UsefulBuf (*)(void * pAllocateCxt,void * pOldMem,size_t uNewSize)
QCBORTagListIn	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^} QCBORTagListIn;$/;"	t	typeref:struct:__anonf04339f00708
QCBORTagListOut	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^} QCBORTagListOut;$/;"	t	typeref:struct:__anonf04339f00808
QCBORTrackNesting	lib/QCBOR/inc/qcbor/qcbor_private.h	/^} QCBORTrackNesting;$/;"	t	typeref:struct:__QCBORTrackNesting
QCBOR_CONVERT_TYPE_BIGFLOAT	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^#define QCBOR_CONVERT_TYPE_BIGFLOAT /;"	d
QCBOR_CONVERT_TYPE_BIG_NUM	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^#define QCBOR_CONVERT_TYPE_BIG_NUM /;"	d
QCBOR_CONVERT_TYPE_DECIMAL_FRACTION	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^#define QCBOR_CONVERT_TYPE_DECIMAL_FRACTION /;"	d
QCBOR_CONVERT_TYPE_FLOAT	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^#define QCBOR_CONVERT_TYPE_FLOAT /;"	d
QCBOR_CONVERT_TYPE_XINT64	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^#define QCBOR_CONVERT_TYPE_XINT64 /;"	d
QCBOR_COUNT_INDICATES_INDEFINITE_LENGTH	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_COUNT_INDICATES_INDEFINITE_LENGTH /;"	d
QCBOR_COUNT_INDICATES_INDEFINITE_LENGTH	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define QCBOR_COUNT_INDICATES_INDEFINITE_LENGTH /;"	d
QCBOR_COUNT_INDICATES_ZERO_LENGTH	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define QCBOR_COUNT_INDICATES_ZERO_LENGTH /;"	d
QCBOR_DECODE_MIN_MEM_POOL_SIZE	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_DECODE_MIN_MEM_POOL_SIZE /;"	d
QCBOR_DECODE_MODE_MAP_AS_ARRAY	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   QCBOR_DECODE_MODE_MAP_AS_ARRAY = 2$/;"	e	enum:__anonf04339f00103
QCBOR_DECODE_MODE_MAP_STRINGS_ONLY	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   QCBOR_DECODE_MODE_MAP_STRINGS_ONLY = 1,$/;"	e	enum:__anonf04339f00103
QCBOR_DECODE_MODE_NORMAL	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   QCBOR_DECODE_MODE_NORMAL = 0,$/;"	e	enum:__anonf04339f00103
QCBOR_ENCODE_AS_BORROWED	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^#define QCBOR_ENCODE_AS_BORROWED /;"	d
QCBOR_ENCODE_AS_TAG	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^#define QCBOR_ENCODE_AS_TAG /;"	d
QCBOR_END_OF_NOT_WELL_FORMED_ERRORS	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define QCBOR_END_OF_NOT_WELL_FORMED_ERRORS /;"	d
QCBOR_END_OF_UNRECOVERABLE_DECODE_ERRORS	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define QCBOR_END_OF_UNRECOVERABLE_DECODE_ERRORS /;"	d
QCBOR_ERR_ARRAY_DECODE_NESTING_TOO_DEEP	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_ARRAY_DECODE_NESTING_TOO_DEEP = 18,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_ARRAY_DECODE_TOO_LONG	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_ARRAY_DECODE_TOO_LONG = 19,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_ARRAY_NESTING_TOO_DEEP	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_ARRAY_NESTING_TOO_DEEP = 4,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_ARRAY_OR_MAP_STILL_OPEN	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_ARRAY_OR_MAP_STILL_OPEN = 8,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_ARRAY_OR_MAP_UNCONSUMED	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_ARRAY_OR_MAP_UNCONSUMED = 12,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_ARRAY_TOO_LONG	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_ARRAY_TOO_LONG = 6,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_BAD_BREAK	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_BAD_BREAK = 16,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_BAD_EXP_AND_MANTISSA	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_BAD_EXP_AND_MANTISSA = 21,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_BAD_INT	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_BAD_INT = 13,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_BAD_OPT_TAG	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_BAD_OPT_TAG = 27,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_BAD_TYPE_7	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_BAD_TYPE_7 = 9,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_BUFFER_TOO_LARGE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_BUFFER_TOO_LARGE = 3,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_BUFFER_TOO_SMALL	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_BUFFER_TOO_SMALL = 1,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_CALLBACK_FAIL	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_CALLBACK_FAIL = 38,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_CLOSE_MISMATCH	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_CLOSE_MISMATCH = 5,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_CONVERSION_UNDER_OVER_FLOW	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_CONVERSION_UNDER_OVER_FLOW = 36,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_DATE_OVERFLOW	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_DATE_OVERFLOW = 31,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_DUPLICATE_LABEL	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_DUPLICATE_LABEL = 28,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_ENCODE_UNSUPPORTED	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_ENCODE_UNSUPPORTED = 2,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_EXIT_MISMATCH	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_EXIT_MISMATCH = 32,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_EXTRA_BYTES	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_EXTRA_BYTES = 10,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_FLOAT_DATE_DISABLED	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_FLOAT_DATE_DISABLED = 39,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_FLOAT_EXCEPTION	lib/QCBOR/inc/qcbor/qcbor_common.h	/^    QCBOR_ERR_FLOAT_EXCEPTION = 42,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_HALF_PRECISION_DISABLED	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_HALF_PRECISION_DISABLED = 40,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_HIT_END	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_HIT_END = 15,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_HW_FLOAT_DISABLED	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_HW_FLOAT_DISABLED = 41,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_INDEFINITE_STRING_CHUNK	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_INDEFINITE_STRING_CHUNK = 14,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_INPUT_TOO_LARGE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_INPUT_TOO_LARGE = 17,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_INT_OVERFLOW	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_INT_OVERFLOW = 30,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_LABEL_NOT_FOUND	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_LABEL_NOT_FOUND = 34,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_MAP_LABEL_TYPE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_MAP_LABEL_TYPE = 25,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_MAP_NOT_ENTERED	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_MAP_NOT_ENTERED = 37,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_MEM_POOL_SIZE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_MEM_POOL_SIZE = 29,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_NO_MORE_ITEMS	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_NO_MORE_ITEMS = 33,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_NO_STRING_ALLOCATOR	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_NO_STRING_ALLOCATOR = 22,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_NUMBER_SIGN_CONVERSION	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_NUMBER_SIGN_CONVERSION = 35,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_STRING_ALLOCATE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_STRING_ALLOCATE = 23,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_STRING_TOO_LONG	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_STRING_TOO_LONG = 20,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_TOO_MANY_CLOSES	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_TOO_MANY_CLOSES = 7,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_TOO_MANY_TAGS	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_TOO_MANY_TAGS = 24,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_UNEXPECTED_TYPE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_UNEXPECTED_TYPE = 26,$/;"	e	enum:__anon1cfd58550103
QCBOR_ERR_UNSUPPORTED	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_ERR_UNSUPPORTED = 11,$/;"	e	enum:__anon1cfd58550103
QCBOR_HEAD_BUFFER_SIZE	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^#define QCBOR_HEAD_BUFFER_SIZE /;"	d
QCBOR_INDEFINITE_LEN_TYPE_MODIFIER	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define QCBOR_INDEFINITE_LEN_TYPE_MODIFIER /;"	d
QCBOR_Int64ToInt16	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^static inline int QCBOR_Int64ToInt16(int64_t src, int16_t *dest)$/;"	f	typeref:typename:int
QCBOR_Int64ToInt32	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^static inline int QCBOR_Int64ToInt32(int64_t src, int32_t *dest)$/;"	f	typeref:typename:int
QCBOR_Int64ToInt8	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^static inline int QCBOR_Int64ToInt8(int64_t src, int8_t *dest)$/;"	f	typeref:typename:int
QCBOR_Int64ToUInt32	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^static inline int QCBOR_Int64ToUInt32(int64_t src, uint32_t *dest)$/;"	f	typeref:typename:int
QCBOR_Int64ToUInt64	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^static inline int QCBOR_Int64ToUInt64(int64_t src, uint64_t *dest)$/;"	f	typeref:typename:int
QCBOR_Int64ToUInt8	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^static inline int QCBOR_Int64ToUInt8(int64_t src, uint8_t *dest)$/;"	f	typeref:typename:int
QCBOR_Int64UToInt16	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^static inline int QCBOR_Int64UToInt16(int64_t src, uint16_t *dest)$/;"	f	typeref:typename:int
QCBOR_LAST_UNMAPPED_TAG	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_LAST_UNMAPPED_TAG /;"	d
QCBOR_MAP_OFFSET_CACHE_INVALID	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define QCBOR_MAP_OFFSET_CACHE_INVALID /;"	d
QCBOR_MAX_ARRAY_NESTING	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define QCBOR_MAX_ARRAY_NESTING /;"	d
QCBOR_MAX_ARRAY_NESTING1	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define QCBOR_MAX_ARRAY_NESTING1 /;"	d
QCBOR_MAX_ARRAY_OFFSET	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define QCBOR_MAX_ARRAY_OFFSET /;"	d
QCBOR_MAX_CUSTOM_TAGS	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define QCBOR_MAX_CUSTOM_TAGS /;"	d
QCBOR_MAX_DECODE_INPUT_SIZE	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_MAX_DECODE_INPUT_SIZE /;"	d
QCBOR_MAX_ITEMS_IN_ARRAY	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define QCBOR_MAX_ITEMS_IN_ARRAY /;"	d
QCBOR_MAX_TAGS_PER_ITEM	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_MAX_TAGS_PER_ITEM /;"	d
QCBOR_MAX_TAGS_PER_ITEM1	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define QCBOR_MAX_TAGS_PER_ITEM1 /;"	d
QCBOR_NON_BOUNDED_OFFSET	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define QCBOR_NON_BOUNDED_OFFSET /;"	d
QCBOR_NUM_MAPPED_TAGS	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define QCBOR_NUM_MAPPED_TAGS /;"	d
QCBOR_OBJ	lib/QCBOR/Makefile	/^QCBOR_OBJ=src\/UsefulBuf.o src\/qcbor_encode.o src\/qcbor_decode.o src\/ieee754.o src\/qcbor_err/;"	m
QCBOR_SPIFFY_DECODE	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define QCBOR_SPIFFY_DECODE$/;"	d
QCBOR_START_OF_NOT_WELL_FORMED_ERRORS	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define QCBOR_START_OF_NOT_WELL_FORMED_ERRORS /;"	d
QCBOR_START_OF_UNRECOVERABLE_DECODE_ERRORS	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define QCBOR_START_OF_UNRECOVERABLE_DECODE_ERRORS /;"	d
QCBOR_SUCCESS	lib/QCBOR/inc/qcbor/qcbor_common.h	/^   QCBOR_SUCCESS = 0,$/;"	e	enum:__anon1cfd58550103
QCBOR_TAGSPEC_NUM_TYPES	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^#define QCBOR_TAGSPEC_NUM_TYPES /;"	d
QCBOR_TAG_REQUIREMENT_ALLOW_ADDITIONAL_TAGS	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^#define QCBOR_TAG_REQUIREMENT_ALLOW_ADDITIONAL_TAGS /;"	d
QCBOR_TAG_REQUIREMENT_NOT_A_TAG	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^#define QCBOR_TAG_REQUIREMENT_NOT_A_TAG /;"	d
QCBOR_TAG_REQUIREMENT_OPTIONAL_TAG	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^#define QCBOR_TAG_REQUIREMENT_OPTIONAL_TAG /;"	d
QCBOR_TAG_REQUIREMENT_TAG	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^#define QCBOR_TAG_REQUIREMENT_TAG /;"	d
QCBOR_TYPE_ANY	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_ANY /;"	d
QCBOR_TYPE_ARRAY	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_ARRAY /;"	d
QCBOR_TYPE_BASE64	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_BASE64 /;"	d
QCBOR_TYPE_BASE64URL	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_BASE64URL /;"	d
QCBOR_TYPE_BIGFLOAT	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_BIGFLOAT /;"	d
QCBOR_TYPE_BIGFLOAT_NEG_BIGNUM	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_BIGFLOAT_NEG_BIGNUM /;"	d
QCBOR_TYPE_BIGFLOAT_POS_BIGNUM	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_BIGFLOAT_POS_BIGNUM /;"	d
QCBOR_TYPE_BINARY_MIME	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_BINARY_MIME /;"	d
QCBOR_TYPE_BREAK	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_BREAK /;"	d
QCBOR_TYPE_BYTE_STRING	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_BYTE_STRING /;"	d
QCBOR_TYPE_DATE_EPOCH	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_DATE_EPOCH /;"	d
QCBOR_TYPE_DATE_STRING	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_DATE_STRING /;"	d
QCBOR_TYPE_DECIMAL_FRACTION	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_DECIMAL_FRACTION /;"	d
QCBOR_TYPE_DECIMAL_FRACTION_NEG_BIGNUM	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_DECIMAL_FRACTION_NEG_BIGNUM /;"	d
QCBOR_TYPE_DECIMAL_FRACTION_POS_BIGNUM	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_DECIMAL_FRACTION_POS_BIGNUM /;"	d
QCBOR_TYPE_DOUBLE	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_DOUBLE /;"	d
QCBOR_TYPE_FALSE	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_FALSE /;"	d
QCBOR_TYPE_FLOAT	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_FLOAT /;"	d
QCBOR_TYPE_INT64	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_INT64 /;"	d
QCBOR_TYPE_MAP	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_MAP /;"	d
QCBOR_TYPE_MAP_AS_ARRAY	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_MAP_AS_ARRAY /;"	d
QCBOR_TYPE_MIME	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_MIME /;"	d
QCBOR_TYPE_NEGBIGNUM	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_NEGBIGNUM /;"	d
QCBOR_TYPE_NONE	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_NONE /;"	d
QCBOR_TYPE_NULL	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_NULL /;"	d
QCBOR_TYPE_OPTTAG	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_OPTTAG /;"	d
QCBOR_TYPE_POSBIGNUM	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_POSBIGNUM /;"	d
QCBOR_TYPE_REGEX	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_REGEX /;"	d
QCBOR_TYPE_TAG	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_TAG /;"	d
QCBOR_TYPE_TEXT_STRING	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_TEXT_STRING /;"	d
QCBOR_TYPE_TRUE	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_TRUE /;"	d
QCBOR_TYPE_UINT64	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_UINT64 /;"	d
QCBOR_TYPE_UKNOWN_SIMPLE	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_UKNOWN_SIMPLE /;"	d
QCBOR_TYPE_UNDEF	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_UNDEF /;"	d
QCBOR_TYPE_URI	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_URI /;"	d
QCBOR_TYPE_UUID	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define QCBOR_TYPE_UUID /;"	d
QCORInternalAllocator	lib/QCBOR/inc/qcbor/qcbor_private.h	/^} QCORInternalAllocator;$/;"	t	typeref:struct:__anon4bdbef670508
QMAKE	lib/tinycbor/Makefile	/^        QMAKE := @echo >&2 $(MAKEFILE): Cannot find a Qt 5 qmake; false$/;"	m
QMAKE	lib/tinycbor/Makefile	/^      QMAKE := qmake-qt5$/;"	m
QMAKE	lib/tinycbor/Makefile	/^    QMAKE := qmake -qt5$/;"	m
QMAKE	lib/tinycbor/Makefile	/^QMAKE = qmake$/;"	m
QTest	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^namespace QTest {$/;"	n	file:
QTest	lib/tinycbor/tests/parser/tst_parser.cpp	/^namespace QTest {$/;"	n	file:
Q_DECLARE_METATYPE	lib/tinycbor/tests/encoder/data.cpp	/^Q_DECLARE_METATYPE(IndeterminateLengthMap)$/;"	f	typeref:typename:IndeterminateLengthArray
Q_DECLARE_METATYPE	lib/tinycbor/tests/encoder/data.cpp	/^Q_DECLARE_METATYPE(Map)$/;"	f
Q_DECLARE_METATYPE	lib/tinycbor/tests/encoder/data.cpp	/^Q_DECLARE_METATYPE(Tag)$/;"	f
Q_DECLARE_METATYPE	lib/tinycbor/tests/parser/data.cpp	/^Q_DECLARE_METATYPE(CborError)$/;"	f
RESET_SKIP	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^			set(RESET_SKIP 1)$/;"	v
RESET_SKIP	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^		set(RESET_SKIP 0)$/;"	v
RM	Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RMDIR	lib/tinycbor/Makefile	/^RMDIR = rmdir$/;"	m
RTICResultsTest	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t RTICResultsTest()$/;"	f	typeref:typename:int32_t
RetType	lib/tinycbor/src/open_memstream.c	/^typedef int RetType;$/;"	t	typeref:typename:int	file:
RetType	lib/tinycbor/src/open_memstream.c	/^typedef ssize_t RetType;$/;"	t	typeref:typename:ssize_t	file:
RgchHex	lib/cn-cbor/src/cn-print.c	/^const char RgchHex[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e/;"	v	typeref:typename:const char[]
RunQCborExample	lib/QCBOR/example.c	/^int32_t RunQCborExample()$/;"	f	typeref:typename:int32_t
RunTestsQCBOR	lib/QCBOR/test/run_tests.c	/^int RunTestsQCBOR(const char *szTestNames[],$/;"	f	typeref:typename:int
SED	lib/tinycbor/Makefile	/^SED = sed$/;"	m
SETUP_FNAME	lib/cn-cbor/test/ctest.h	/^#define SETUP_FNAME(/;"	d
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_PATCH	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SINGLE_EXPONENT_BIAS	lib/QCBOR/src/ieee754.c	/^#define SINGLE_EXPONENT_BIAS /;"	d	file:
SINGLE_EXPONENT_INF_OR_NAN	lib/QCBOR/src/ieee754.c	/^#define SINGLE_EXPONENT_INF_OR_NAN /;"	d	file:
SINGLE_EXPONENT_MASK	lib/QCBOR/src/ieee754.c	/^#define SINGLE_EXPONENT_MASK /;"	d	file:
SINGLE_EXPONENT_MAX	lib/QCBOR/src/ieee754.c	/^#define SINGLE_EXPONENT_MAX /;"	d	file:
SINGLE_EXPONENT_MIN	lib/QCBOR/src/ieee754.c	/^#define SINGLE_EXPONENT_MIN /;"	d	file:
SINGLE_EXPONENT_SHIFT	lib/QCBOR/src/ieee754.c	/^#define SINGLE_EXPONENT_SHIFT /;"	d	file:
SINGLE_EXPONENT_ZERO	lib/QCBOR/src/ieee754.c	/^#define SINGLE_EXPONENT_ZERO /;"	d	file:
SINGLE_NUM_EXPONENT_BITS	lib/QCBOR/src/ieee754.c	/^#define SINGLE_NUM_EXPONENT_BITS /;"	d	file:
SINGLE_NUM_SIGNIFICAND_BITS	lib/QCBOR/src/ieee754.c	/^#define SINGLE_NUM_SIGNIFICAND_BITS /;"	d	file:
SINGLE_NUM_SIGN_BITS	lib/QCBOR/src/ieee754.c	/^#define SINGLE_NUM_SIGN_BITS /;"	d	file:
SINGLE_PREC_FLOAT	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define SINGLE_PREC_FLOAT /;"	d
SINGLE_QUIET_NAN_BIT	lib/QCBOR/src/ieee754.c	/^#define SINGLE_QUIET_NAN_BIT /;"	d	file:
SINGLE_SIGNIFICAND_MASK	lib/QCBOR/src/ieee754.c	/^#define SINGLE_SIGNIFICAND_MASK /;"	d	file:
SINGLE_SIGNIFICAND_SHIFT	lib/QCBOR/src/ieee754.c	/^#define SINGLE_SIGNIFICAND_SHIFT /;"	d	file:
SINGLE_SIGN_MASK	lib/QCBOR/src/ieee754.c	/^#define SINGLE_SIGN_MASK /;"	d	file:
SINGLE_SIGN_SHIFT	lib/QCBOR/src/ieee754.c	/^#define SINGLE_SIGN_SHIFT /;"	d	file:
SIZEOF_C_ARRAY	lib/QCBOR/src/qcbor_decode.c	/^#define SIZEOF_C_ARRAY(/;"	d	file:
SIZE_MAX	lib/tinycbor/src/cbor.h	/^#  define SIZE_MAX /;"	d
SOVERSION	lib/tinycbor/Makefile	/^SOVERSION = $(shell cut -f1-2 -d. $(SRCDIR)VERSION)$/;"	m
SRCDIR	lib/tinycbor/Makefile	/^SRCDIR := $(dir $(MAKEFILE))$/;"	m
SRC_FILE_TEMPLATE	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^set(SRC_FILE_TEMPLATE$/;"	v
STRINGIFY	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(/;"	d	file:
STRINGIFY	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(/;"	d	file:
STRINGIFY	lib/tinycbor/src/compilersupport_p.h	/^#define STRINGIFY(/;"	d
STRINGIFY2	lib/tinycbor/src/compilersupport_p.h	/^#define STRINGIFY2(/;"	d
STRINGIFY_HELPER	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGIFY_HELPER	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:
SUFFIXES	Makefile	/^SUFFIXES =$/;"	m
SZLiteralToUsefulBufC	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^#define SZLiteralToUsefulBufC(/;"	d
SearchAndEnter	lib/QCBOR/src/qcbor_decode.c	/^static void SearchAndEnter(QCBORDecodeContext *pMe, QCBORItem pSearch[])$/;"	f	typeref:typename:void	file:
See Also	lib/QCBOR/doc/Tagging.md	/^## See Also$/;"	s
SetUpAllocatorTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t SetUpAllocatorTest(void)$/;"	f	typeref:typename:int32_t
SetupFunc	lib/cn-cbor/test/ctest.h	/^typedef void (*SetupFunc)(void*);$/;"	t	typeref:typename:void (*)(void *)
ShiftTags	lib/QCBOR/src/qcbor_decode.c	/^static void ShiftTags(QCBORItem *pDecodedItem)$/;"	f	typeref:typename:void	file:
ShortBufferParseTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t ShortBufferParseTest()$/;"	f	typeref:typename:int32_t
ShortBufferParseTest2	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t ShortBufferParseTest2()$/;"	f	typeref:typename:int32_t
SimpleArrayTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t SimpleArrayTest()$/;"	f	typeref:typename:int32_t
SimpleType	lib/tinycbor/tests/encoder/data.cpp	/^struct SimpleType { uint8_t type; };$/;"	s	file:
SimpleTypeInNextByte	lib/tinycbor/src/cborinternal_p.h	/^    SimpleTypeInNextByte    = 24,   \/* not really a simple type *\/$/;"	e	enum:CborSimpleTypes
SimpleTypesType	lib/tinycbor/src/cborinternal_p.h	/^    SimpleTypesType = 7U$/;"	e	enum:CborMajorTypes
SimpleValuesIndefiniteLengthTest1	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t SimpleValuesIndefiniteLengthTest1()$/;"	f	typeref:typename:int32_t
SimpleValuesTest1	lib/QCBOR/test/qcbor_encode_tests.c	/^int32_t SimpleValuesTest1()$/;"	f	typeref:typename:int32_t
SinglePrecisionFloat	lib/tinycbor/src/cborinternal_p.h	/^    SinglePrecisionFloat    = 26,   \/* ditto *\/$/;"	e	enum:CborSimpleTypes
SmallValueBitLength	lib/tinycbor/src/cborinternal_p.h	/^    SmallValueBitLength     = 5U,$/;"	e	enum:__anon5d9aee230103
SmallValueMask	lib/tinycbor/src/cborinternal_p.h	/^    SmallValueMask          = (1U << SmallValueBitLength) - 1,      \/* 31 *\/$/;"	e	enum:__anon5d9aee230103
Spiffy Decode	lib/QCBOR/README.md	/^## Spiffy Decode$/;"	s
SpiffyDateDecodeTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t SpiffyDateDecodeTest()$/;"	f	typeref:typename:int32_t
SpiffyDecodeBasicMap	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t SpiffyDecodeBasicMap(UsefulBufC input)$/;"	f	typeref:typename:int32_t
SpiffyIndefiniteLengthStringsTests	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t SpiffyIndefiniteLengthStringsTests()$/;"	f	typeref:typename:int32_t
Standard Tags and the Tags Registry	lib/QCBOR/doc/Tagging.md	/^## Standard Tags and the Tags Registry$/;"	s
StringAllocator	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   QCORInternalAllocator StringAllocator;$/;"	m	struct:_QCBORDecodeContext	typeref:typename:QCORInternalAllocator
StringAllocator_Allocate	lib/QCBOR/src/qcbor_decode.c	/^StringAllocator_Allocate(const QCORInternalAllocator *pMe, size_t uSize)$/;"	f	typeref:typename:UsefulBuf	file:
StringAllocator_Destruct	lib/QCBOR/src/qcbor_decode.c	/^StringAllocator_Destruct(const QCORInternalAllocator *pMe)$/;"	f	typeref:typename:void	file:
StringAllocator_Free	lib/QCBOR/src/qcbor_decode.c	/^StringAllocator_Free(const QCORInternalAllocator *pMe, void *pMem)$/;"	f	typeref:typename:void	file:
StringAllocator_Reallocate	lib/QCBOR/src/qcbor_decode.c	/^StringAllocator_Reallocate(const QCORInternalAllocator *pMe,$/;"	f	typeref:typename:UsefulBuf	file:
StringDecoderModeFailTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t StringDecoderModeFailTest()$/;"	f	typeref:typename:int32_t
TAG_BIGNUM	lib/cn-cbor/src/cbor.h	/^#define TAG_BIGNUM /;"	d
TAG_BIGNUM_NEG	lib/cn-cbor/src/cbor.h	/^#define TAG_BIGNUM_NEG /;"	d
TAG_RE	lib/cn-cbor/src/cbor.h	/^#define TAG_RE /;"	d
TAG_TIME_EPOCH	lib/cn-cbor/src/cbor.h	/^#define TAG_TIME_EPOCH /;"	d
TAG_URI	lib/cn-cbor/src/cbor.h	/^#define TAG_URI /;"	d
TAKE	lib/cn-cbor/src/cn-cbor.c	/^#define TAKE(/;"	d	file:
TEARDOWN_FNAME	lib/cn-cbor/test/ctest.h	/^#define TEARDOWN_FNAME(/;"	d
TEST_ENTRY	lib/QCBOR/test/run_tests.c	/^#define TEST_ENTRY(/;"	d	file:
TEST_ENTRY_DISABLED	lib/QCBOR/test/run_tests.c	/^#define TEST_ENTRY_DISABLED(/;"	d	file:
TEST_OBJ	lib/QCBOR/Makefile	/^TEST_OBJ=test\/UsefulBuf_Tests.o test\/qcbor_encode_tests.o \\$/;"	m
TINYCBOR_FREESTANDING_SOURCES	lib/tinycbor/Makefile	/^TINYCBOR_FREESTANDING_SOURCES = \\$/;"	m
TINYCBOR_HEADERS	lib/tinycbor/Makefile	/^TINYCBOR_HEADERS = src\/cbor.h src\/cborjson.h src\/tinycbor-version.h$/;"	m
TINYCBOR_SOURCES	lib/tinycbor/Makefile	/^TINYCBOR_SOURCES = $(TINYCBOR_FREESTANDING_SOURCES)$/;"	m
TINYCBOR_SOURCES	lib/tinycbor/Makefile	/^TINYCBOR_SOURCES = \\$/;"	m
TINYCBOR_VERSION	lib/tinycbor/src/cbor.h	/^#define TINYCBOR_VERSION /;"	d
TINYCBOR_VERSION_MAJOR	lib/tinycbor/src/tinycbor-version.h	/^#define TINYCBOR_VERSION_MAJOR /;"	d
TINYCBOR_VERSION_MINOR	lib/tinycbor/src/tinycbor-version.h	/^#define TINYCBOR_VERSION_MINOR /;"	d
TINYCBOR_VERSION_PATCH	lib/tinycbor/src/tinycbor-version.h	/^#define TINYCBOR_VERSION_PATCH /;"	d
Tag	lib/tinycbor/tests/encoder/data.cpp	/^struct Tag { CborTag tag; QVariant tagged; };$/;"	s	file:
Tag 1 Implementator’s FAQ	lib/QCBOR/doc/TimeTag1FAQ.md	/^# Tag 1 Implementator’s FAQ$/;"	c
TagSpecification	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^} TagSpecification;$/;"	t	typeref:struct:__anon51af6bc00108
TagType	lib/tinycbor/src/cborinternal_p.h	/^    TagType = 6U,$/;"	e	enum:CborMajorTypes
Tags for Encapsulated CBOR	lib/QCBOR/doc/Tagging.md	/^## Tags for Encapsulated CBOR$/;"	s
Tags that Can be Ignored	lib/QCBOR/doc/Tagging.md	/^## Tags that Can be Ignored$/;"	s
TearDownFunc	lib/cn-cbor/test/ctest.h	/^typedef void (*TearDownFunc)(void*);$/;"	t	typeref:typename:void (*)(void *)
TestBasicSanity	lib/QCBOR/test/UsefulBuf_Tests.c	/^const char *TestBasicSanity()$/;"	f	typeref:typename:const char *
TextStringType	lib/tinycbor/src/cborinternal_p.h	/^    TextStringType = 3U,$/;"	e	enum:CborMajorTypes
TooLargeInputTest	lib/QCBOR/test/qcbor_decode_tests.c	/^int32_t TooLargeInputTest(void)$/;"	f	typeref:typename:int32_t
TooManyCylinders	lib/QCBOR/example.c	/^    TooManyCylinders,$/;"	e	enum:__anon03c895ae0303	file:
TrueValue	lib/tinycbor/src/cborinternal_p.h	/^    TrueValue               = 21,$/;"	e	enum:CborSimpleTypes
TypeWasNotNative	lib/tinycbor/src/cbortojson.c	/^    TypeWasNotNative            = 0x100,    \/* anything but strings, boolean, null, arrays and /;"	e	enum:ConversionStatusFlags	file:
TypeWasTagged	lib/tinycbor/src/cbortojson.c	/^    TypeWasTagged               = 0x200,$/;"	e	enum:ConversionStatusFlags	file:
Types and Tagging in CBOR	lib/QCBOR/doc/Tagging.md	/^#  Types and Tagging in CBOR$/;"	c
Types and Tags in QCBOR	lib/QCBOR/doc/Tagging.md	/^## Types and Tags in QCBOR$/;"	s
UB	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^   UsefulBuf  UB;       \/\/ Memory that is being output to$/;"	m	struct:useful_out_buf	typeref:typename:UsefulBuf
UB	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^   UsefulBufC UB;     \/\/ Data being parsed$/;"	m	struct:useful_input_buf	typeref:typename:UsefulBufC
UBCompareDiagnostic	lib/QCBOR/test/qcbor_encode_tests.c	/^struct UBCompareDiagnostic {$/;"	s	file:
UBMacroConversionsTest	lib/QCBOR/test/UsefulBuf_Tests.c	/^const char *UBMacroConversionsTest()$/;"	f	typeref:typename:const char *
UBUTest_CopyUtil	lib/QCBOR/test/UsefulBuf_Tests.c	/^const char *UBUTest_CopyUtil()$/;"	f	typeref:typename:const char *
UBUtilTests	lib/QCBOR/test/UsefulBuf_Tests.c	/^const char *UBUtilTests()$/;"	f	typeref:typename:const char *
UIBTest_IntegerFormat	lib/QCBOR/test/UsefulBuf_Tests.c	/^const char *  UIBTest_IntegerFormat()$/;"	f	typeref:typename:const char *
UIB_MAGIC	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^#define UIB_MAGIC /;"	d
UInt64ConvertAll	lib/QCBOR/src/qcbor_decode.c	/^UInt64ConvertAll(const QCBORItem *pItem, uint32_t uConvertTypes, uint64_t *puValue)$/;"	f	typeref:typename:QCBORError	file:
UNCONST_POINTER	lib/QCBOR/src/qcbor_decode.c	/^#define UNCONST_POINTER(/;"	d	file:
UNIX	CMakeFiles/3.16.3/CMakeCCompiler.cmake	/^  set(UNIX 1)$/;"	v
UNIX	CMakeFiles/3.16.3/CMakeCXXCompiler.cmake	/^  set(UNIX 1)$/;"	v
UNUSED_PARAM	lib/cn-cbor/src/cbor.h	/^#define UNUSED_PARAM(/;"	d
UNUSED_PARAM	lib/cn-cbor/test/ctest.h	/^#define UNUSED_PARAM(/;"	d
UOBTest_BoundaryConditionsTest	lib/QCBOR/test/UsefulBuf_Tests.c	/^const char *UOBTest_BoundaryConditionsTest()$/;"	f	typeref:typename:const char *
UOBTest_NonAdversarial	lib/QCBOR/test/UsefulBuf_Tests.c	/^const char * UOBTest_NonAdversarial()$/;"	f	typeref:typename:const char *
USEFUL_OUT_BUF_MAGIC	lib/QCBOR/src/UsefulBuf.c	/^#define USEFUL_OUT_BUF_MAGIC /;"	d	file:
Uncompatible Changes	lib/QCBOR/README.md	/^### Uncompatible Changes$/;"	S
UndefinedValue	lib/tinycbor/src/cborinternal_p.h	/^    UndefinedValue          = 23,$/;"	e	enum:CborSimpleTypes
UnsignedIntegerType	lib/tinycbor/src/cborinternal_p.h	/^    UnsignedIntegerType = 0U,$/;"	e	enum:CborMajorTypes
UsefulBuf	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^} UsefulBuf;$/;"	t	typeref:struct:q_useful_buf
UsefulBufC	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^} UsefulBufC;$/;"	t	typeref:struct:q_useful_buf_c
UsefulBufC_Unconst	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline UsefulBuf UsefulBufC_Unconst(const UsefulBufC UBC)$/;"	f	typeref:typename:UsefulBuf
UsefulBufCompareToSZ	lib/QCBOR/test/qcbor_decode_tests.c	/^#define UsefulBufCompareToSZ(/;"	d	file:
UsefulBufUtil_CopyDoubleToUint64	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline uint64_t UsefulBufUtil_CopyDoubleToUint64(double d)$/;"	f	typeref:typename:uint64_t
UsefulBufUtil_CopyFloatToUint32	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline uint32_t UsefulBufUtil_CopyFloatToUint32(float f)$/;"	f	typeref:typename:uint32_t
UsefulBufUtil_CopyUint32ToFloat	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline float UsefulBufUtil_CopyUint32ToFloat(uint32_t u32)$/;"	f	typeref:typename:float
UsefulBufUtil_CopyUint64ToDouble	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline double UsefulBufUtil_CopyUint64ToDouble(uint64_t u64)$/;"	f	typeref:typename:double
UsefulBuf_Compare	lib/QCBOR/src/UsefulBuf.c	/^int UsefulBuf_Compare(const UsefulBufC UB1, const UsefulBufC UB2)$/;"	f	typeref:typename:int
UsefulBuf_CompareWithDiagnostic	lib/QCBOR/test/qcbor_encode_tests.c	/^UsefulBuf_CompareWithDiagnostic(UsefulBufC Actual,$/;"	f	typeref:typename:int32_t	file:
UsefulBuf_Compare_Print	lib/QCBOR/test/qcbor_encode_tests.c	/^static int UsefulBuf_Compare_Print(UsefulBufC U1, UsefulBufC U2) {$/;"	f	typeref:typename:int	file:
UsefulBuf_Const	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline UsefulBufC UsefulBuf_Const(const UsefulBuf UB)$/;"	f	typeref:typename:UsefulBufC
UsefulBuf_Copy	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline UsefulBufC UsefulBuf_Copy(UsefulBuf Dest, const UsefulBufC Src)$/;"	f	typeref:typename:UsefulBufC
UsefulBuf_CopyOffset	lib/QCBOR/src/UsefulBuf.c	/^UsefulBufC UsefulBuf_CopyOffset(UsefulBuf Dest, size_t uOffset, const UsefulBufC Src)$/;"	f	typeref:typename:UsefulBufC
UsefulBuf_CopyPtr	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline UsefulBufC UsefulBuf_CopyPtr(UsefulBuf Dest, const void *ptr, size_t len)$/;"	f	typeref:typename:UsefulBufC
UsefulBuf_FROM_BYTE_ARRAY	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^#define UsefulBuf_FROM_BYTE_ARRAY(/;"	d
UsefulBuf_FROM_BYTE_ARRAY_LITERAL	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^#define UsefulBuf_FROM_BYTE_ARRAY_LITERAL(/;"	d
UsefulBuf_FROM_SZ_LITERAL	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^#define UsefulBuf_FROM_SZ_LITERAL(/;"	d
UsefulBuf_FindBytes	lib/QCBOR/src/UsefulBuf.c	/^size_t UsefulBuf_FindBytes(UsefulBufC BytesToSearch, UsefulBufC BytesToFind)$/;"	f	typeref:typename:size_t
UsefulBuf_FromSZ	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline UsefulBufC UsefulBuf_FromSZ(const char *szString)$/;"	f	typeref:typename:UsefulBufC
UsefulBuf_Head	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline UsefulBufC UsefulBuf_Head(UsefulBufC UB, size_t uAmount)$/;"	f	typeref:typename:UsefulBufC
UsefulBuf_IsEmpty	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline int UsefulBuf_IsEmpty(UsefulBuf UB)$/;"	f	typeref:typename:int
UsefulBuf_IsEmptyC	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline int UsefulBuf_IsEmptyC(UsefulBufC UB)$/;"	f	typeref:typename:int
UsefulBuf_IsNULL	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline int UsefulBuf_IsNULL(UsefulBuf UB)$/;"	f	typeref:typename:int
UsefulBuf_IsNULLC	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline int UsefulBuf_IsNULLC(UsefulBufC UB)$/;"	f	typeref:typename:int
UsefulBuf_IsNULLOrEmpty	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline int UsefulBuf_IsNULLOrEmpty(UsefulBuf UB)$/;"	f	typeref:typename:int
UsefulBuf_IsNULLOrEmptyC	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline int UsefulBuf_IsNULLOrEmptyC(UsefulBufC UB)$/;"	f	typeref:typename:int
UsefulBuf_IsValue	lib/QCBOR/src/UsefulBuf.c	/^size_t UsefulBuf_IsValue(const UsefulBufC UB, uint8_t uValue)$/;"	f	typeref:typename:size_t
UsefulBuf_MAKE_STACK_UB	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^#define  UsefulBuf_MAKE_STACK_UB(/;"	d
UsefulBuf_Set	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline UsefulBufC UsefulBuf_Set(UsefulBuf pDest, uint8_t value)$/;"	f	typeref:typename:UsefulBufC
UsefulBuf_Tail	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline UsefulBufC UsefulBuf_Tail(UsefulBufC UB, size_t uAmount)$/;"	f	typeref:typename:UsefulBufC
UsefulBuf_Unconst	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline UsefulBuf UsefulBuf_Unconst(const UsefulBufC UBC)$/;"	f	typeref:typename:UsefulBuf
UsefulBuf_UsefulBuf_Tests_h	lib/QCBOR/test/UsefulBuf_Tests.h	/^#define UsefulBuf_UsefulBuf_Tests_h$/;"	d
UsefulInputBuf	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^} UsefulInputBuf;$/;"	t	typeref:struct:useful_input_buf
UsefulInputBuf_BytesAvailable	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline int UsefulInputBuf_BytesAvailable(UsefulInputBuf *pMe, size_t uLen)$/;"	f	typeref:typename:int
UsefulInputBuf_BytesUnconsumed	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline size_t UsefulInputBuf_BytesUnconsumed(UsefulInputBuf *pMe)$/;"	f	typeref:typename:size_t
UsefulInputBuf_GetBufferLength	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline size_t UsefulInputBuf_GetBufferLength(UsefulInputBuf *pMe)$/;"	f	typeref:typename:size_t
UsefulInputBuf_GetByte	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline uint8_t UsefulInputBuf_GetByte(UsefulInputBuf *pMe)$/;"	f	typeref:typename:uint8_t
UsefulInputBuf_GetBytes	lib/QCBOR/src/UsefulBuf.c	/^const void * UsefulInputBuf_GetBytes(UsefulInputBuf *pMe, size_t uAmount)$/;"	f	typeref:typename:const void *
UsefulInputBuf_GetDouble	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline double UsefulInputBuf_GetDouble(UsefulInputBuf *pMe)$/;"	f	typeref:typename:double
UsefulInputBuf_GetError	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline int UsefulInputBuf_GetError(UsefulInputBuf *pMe)$/;"	f	typeref:typename:int
UsefulInputBuf_GetFloat	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline float UsefulInputBuf_GetFloat(UsefulInputBuf *pMe)$/;"	f	typeref:typename:float
UsefulInputBuf_GetUint16	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline uint16_t UsefulInputBuf_GetUint16(UsefulInputBuf *pMe)$/;"	f	typeref:typename:uint16_t
UsefulInputBuf_GetUint32	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline uint32_t UsefulInputBuf_GetUint32(UsefulInputBuf *pMe)$/;"	f	typeref:typename:uint32_t
UsefulInputBuf_GetUint64	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline uint64_t UsefulInputBuf_GetUint64(UsefulInputBuf *pMe)$/;"	f	typeref:typename:uint64_t
UsefulInputBuf_GetUsefulBuf	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline UsefulBufC UsefulInputBuf_GetUsefulBuf(UsefulInputBuf *pMe, size_t uNum)$/;"	f	typeref:typename:UsefulBufC
UsefulInputBuf_Init	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulInputBuf_Init(UsefulInputBuf *pMe, UsefulBufC UB)$/;"	f	typeref:typename:void
UsefulInputBuf_Seek	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulInputBuf_Seek(UsefulInputBuf *pMe, size_t uPos)$/;"	f	typeref:typename:void
UsefulInputBuf_SetBufferLength	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulInputBuf_SetBufferLength(UsefulInputBuf *pMe, size_t uNewLen)$/;"	f	typeref:typename:void
UsefulInputBuf_Tell	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline size_t UsefulInputBuf_Tell(UsefulInputBuf *pMe)$/;"	f	typeref:typename:size_t
UsefulOutBuf	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^} UsefulOutBuf;$/;"	t	typeref:struct:useful_out_buf
UsefulOutBuf_AppendByte	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_AppendByte(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_AppendData	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_AppendData(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_AppendDouble	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_AppendDouble(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_AppendFloat	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_AppendFloat(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_AppendString	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_AppendString(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_AppendUint16	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_AppendUint16(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_AppendUint32	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_AppendUint32(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_AppendUint64	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_AppendUint64(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_AppendUsefulBuf	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_AppendUsefulBuf(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_AtStart	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline int UsefulOutBuf_AtStart(UsefulOutBuf *pMe)$/;"	f	typeref:typename:int
UsefulOutBuf_CopyOut	lib/QCBOR/src/UsefulBuf.c	/^UsefulBufC UsefulOutBuf_CopyOut(UsefulOutBuf *pMe, UsefulBuf pDest)$/;"	f	typeref:typename:UsefulBufC
UsefulOutBuf_GetEndPosition	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline size_t UsefulOutBuf_GetEndPosition(UsefulOutBuf *pMe)$/;"	f	typeref:typename:size_t
UsefulOutBuf_GetError	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline int UsefulOutBuf_GetError(UsefulOutBuf *pMe)$/;"	f	typeref:typename:int
UsefulOutBuf_Init	lib/QCBOR/src/UsefulBuf.c	/^void UsefulOutBuf_Init(UsefulOutBuf *pMe, UsefulBuf Storage)$/;"	f	typeref:typename:void
UsefulOutBuf_InsertByte	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_InsertByte(UsefulOutBuf *me,$/;"	f	typeref:typename:void
UsefulOutBuf_InsertData	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_InsertData(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_InsertDouble	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_InsertDouble(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_InsertFloat	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_InsertFloat(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_InsertString	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_InsertString(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_InsertUint16	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_InsertUint16(UsefulOutBuf *me,$/;"	f	typeref:typename:void
UsefulOutBuf_InsertUint32	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_InsertUint32(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_InsertUint64	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_InsertUint64(UsefulOutBuf *pMe,$/;"	f	typeref:typename:void
UsefulOutBuf_InsertUsefulBuf	lib/QCBOR/src/UsefulBuf.c	/^void UsefulOutBuf_InsertUsefulBuf(UsefulOutBuf *pMe, UsefulBufC NewData, size_t uInsertionPos)$/;"	f	typeref:typename:void
UsefulOutBuf_IsBufferNULL	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline int UsefulOutBuf_IsBufferNULL(UsefulOutBuf *pMe)$/;"	f	typeref:typename:int
UsefulOutBuf_MakeOnStack	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^#define  UsefulOutBuf_MakeOnStack(/;"	d
UsefulOutBuf_OutUBuf	lib/QCBOR/src/UsefulBuf.c	/^UsefulBufC UsefulOutBuf_OutUBuf(UsefulOutBuf *pMe)$/;"	f	typeref:typename:UsefulBufC
UsefulOutBuf_Reset	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline void UsefulOutBuf_Reset(UsefulOutBuf *pMe)$/;"	f	typeref:typename:void
UsefulOutBuf_RoomLeft	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline size_t UsefulOutBuf_RoomLeft(UsefulOutBuf *pMe)$/;"	f	typeref:typename:size_t
UsefulOutBuf_WillItFit	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^static inline int UsefulOutBuf_WillItFit(UsefulOutBuf *pMe, size_t uLen)$/;"	f	typeref:typename:int
VAL_FALSE	lib/cn-cbor/src/cbor.h	/^#define VAL_FALSE /;"	d
VAL_NIL	lib/cn-cbor/src/cbor.h	/^#define VAL_NIL /;"	d
VAL_TRUE	lib/cn-cbor/src/cbor.h	/^#define VAL_TRUE /;"	d
VAL_UNDEF	lib/cn-cbor/src/cbor.h	/^#define VAL_UNDEF /;"	d
VERSION	lib/tinycbor/Makefile	/^VERSION = $(shell cat $(SRCDIR)VERSION)$/;"	m
VERSION_MAJOR	lib/cn-cbor/CMakeLists.txt	/^set(VERSION_MAJOR$/;"	v
VERSION_MINOR	lib/cn-cbor/CMakeLists.txt	/^set(VERSION_MINOR$/;"	v
VERSION_PATCH	lib/cn-cbor/CMakeLists.txt	/^set(VERSION_PATCH$/;"	v
VPATH	lib/tinycbor/Makefile	/^VPATH = $(SRCDIR):$(SRCDIR)\/src$/;"	m
VPATH	lib/tinycbor/tools/Makefile	/^VPATH = cbordump:..\/src$/;"	m
Value16Bit	lib/tinycbor/src/cborinternal_p.h	/^    Value16Bit              = 25U,$/;"	e	enum:__anon5d9aee230103
Value32Bit	lib/tinycbor/src/cborinternal_p.h	/^    Value32Bit              = 26U,$/;"	e	enum:__anon5d9aee230103
Value64Bit	lib/tinycbor/src/cborinternal_p.h	/^    Value64Bit              = 27U,$/;"	e	enum:__anon5d9aee230103
Value8Bit	lib/tinycbor/src/cborinternal_p.h	/^    Value8Bit               = 24U,$/;"	e	enum:__anon5d9aee230103
WIN32_LEAN_AND_MEAN	lib/tinycbor/tests/parser/tst_parser.cpp	/^#  define WIN32_LEAN_AND_MEAN /;"	d	file:
With Conan	lib/cn-cbor/README.md	/^### With Conan$/;"	S
With cmake	lib/cn-cbor/README.md	/^### With cmake$/;"	S
WrongNumberOfCylinders	lib/QCBOR/example.c	/^    WrongNumberOfCylinders$/;"	e	enum:__anon03c895ae0303	file:
_	lib/tinycbor/src/cborerrorstrings.c	/^#  define _(/;"	d	file:
_BSD_SOURCE	lib/tinycbor/src/cborencoder.c	/^#define _BSD_SOURCE /;"	d	file:
_BSD_SOURCE	lib/tinycbor/src/cborencoder_close_container_checked.c	/^#define _BSD_SOURCE /;"	d	file:
_BSD_SOURCE	lib/tinycbor/src/cborencoder_float.c	/^#define _BSD_SOURCE /;"	d	file:
_BSD_SOURCE	lib/tinycbor/src/cborparser.c	/^#define _BSD_SOURCE /;"	d	file:
_BSD_SOURCE	lib/tinycbor/src/cborparser_dup_string.c	/^#define _BSD_SOURCE /;"	d	file:
_BSD_SOURCE	lib/tinycbor/src/cborparser_float.c	/^#define _BSD_SOURCE /;"	d	file:
_BSD_SOURCE	lib/tinycbor/src/cborpretty.c	/^#define _BSD_SOURCE /;"	d	file:
_BSD_SOURCE	lib/tinycbor/src/cbortojson.c	/^#define _BSD_SOURCE /;"	d	file:
_BSD_SOURCE	lib/tinycbor/src/cborvalidation.c	/^#define _BSD_SOURCE /;"	d	file:
_BSD_SOURCE	lib/tinycbor/src/compilersupport_p.h	/^#  define _BSD_SOURCE$/;"	d
_BSD_SOURCE	lib/tinycbor/src/open_memstream.c	/^#define _BSD_SOURCE /;"	d	file:
_CMAKE_SCRIPT_PATH	lib/cn-cbor/cmake/Coveralls.cmake	/^		set(_CMAKE_SCRIPT_PATH ${ARGN})$/;"	v	function:coveralls_setup
_CMAKE_SCRIPT_PATH	lib/cn-cbor/cmake/Coveralls.cmake	/^		set(_CMAKE_SCRIPT_PATH ${PROJECT_SOURCE_DIR}\/cmake)$/;"	v	function:coveralls_setup
_CRTDBG_MAP_ALLOC	lib/cn-cbor/test/cbor_test.c	/^#define _CRTDBG_MAP_ALLOC$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cn-cbor/src/cn-print.c	/^#define _CRT_SECURE_NO_WARNINGS /;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cn-cbor/test/cbor_test.c	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cn-cbor/test/file_test.c	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cn-cbor/test/memory_test.c	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_DARWIN_C_SOURCE	lib/tinycbor/tests/parser/tst_parser.cpp	/^#define  _DARWIN_C_SOURCE /;"	d	file:
_DEFAULT_SOURCE	lib/tinycbor/src/cborencoder.c	/^#define _DEFAULT_SOURCE /;"	d	file:
_DEFAULT_SOURCE	lib/tinycbor/src/cborencoder_close_container_checked.c	/^#define _DEFAULT_SOURCE /;"	d	file:
_DEFAULT_SOURCE	lib/tinycbor/src/cborencoder_float.c	/^#define _DEFAULT_SOURCE /;"	d	file:
_DEFAULT_SOURCE	lib/tinycbor/src/cborparser.c	/^#define _DEFAULT_SOURCE /;"	d	file:
_DEFAULT_SOURCE	lib/tinycbor/src/cborparser_dup_string.c	/^#define _DEFAULT_SOURCE /;"	d	file:
_DEFAULT_SOURCE	lib/tinycbor/src/cborparser_float.c	/^#define _DEFAULT_SOURCE /;"	d	file:
_DEFAULT_SOURCE	lib/tinycbor/src/cborpretty.c	/^#define _DEFAULT_SOURCE /;"	d	file:
_DEFAULT_SOURCE	lib/tinycbor/src/cbortojson.c	/^#define _DEFAULT_SOURCE /;"	d	file:
_DEFAULT_SOURCE	lib/tinycbor/src/cborvalidation.c	/^#define _DEFAULT_SOURCE /;"	d	file:
_DEFAULT_SOURCE	lib/tinycbor/src/compilersupport_p.h	/^#  define _DEFAULT_SOURCE$/;"	d
_DEFAULT_SOURCE	lib/tinycbor/src/open_memstream.c	/^#define _DEFAULT_SOURCE /;"	d	file:
_ERR_TO_STR	lib/QCBOR/src/qcbor_err_to_str.c	/^#define _ERR_TO_STR(/;"	d	file:
_GNU_SOURCE	lib/tinycbor/src/cbortojson.c	/^#define _GNU_SOURCE /;"	d	file:
_GNU_SOURCE	lib/tinycbor/src/open_memstream.c	/^#define _GNU_SOURCE /;"	d	file:
_GNU_SOURCE	lib/tinycbor/tools/json2cbor/json2cbor.c	/^#define _GNU_SOURCE$/;"	d	file:
_MyItem	lib/cn-cbor/test/context.c	/^typedef struct _MyItem {$/;"	s	file:
_POSIX_C_SOURCE	lib/tinycbor/src/cbortojson.c	/^#define _POSIX_C_SOURCE /;"	d	file:
_POSIX_C_SOURCE	lib/tinycbor/tools/cbordump/cbordump.c	/^#define _POSIX_C_SOURCE /;"	d	file:
_POSIX_C_SOURCE	lib/tinycbor/tools/json2cbor/json2cbor.c	/^#define _POSIX_C_SOURCE /;"	d	file:
_QCBORDecodeContext	lib/QCBOR/inc/qcbor/qcbor_private.h	/^struct _QCBORDecodeContext {$/;"	s
_QCBOREncodeContext	lib/QCBOR/inc/qcbor/qcbor_private.h	/^struct _QCBOREncodeContext {$/;"	s
_QCBORItem	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^typedef struct _QCBORItem {$/;"	s
_SSIZE_T_DECLARED	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^#define _SSIZE_T_DECLARED$/;"	d
_UsefulBuf_h	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^#define _UsefulBuf_h$/;"	d
_XOPEN_SOURCE	lib/tinycbor/tests/parser/tst_parser.cpp	/^#define _XOPEN_SOURCE /;"	d	file:
__CTEST2_INTERNAL	lib/cn-cbor/test/ctest.h	/^#define __CTEST2_INTERNAL(/;"	d
__CTEST_INTERNAL	lib/cn-cbor/test/ctest.h	/^#define __CTEST_INTERNAL(/;"	d
__CTEST_MAGIC	lib/cn-cbor/test/ctest.h	/^#define __CTEST_MAGIC /;"	d
__CTEST_STRUCT	lib/cn-cbor/test/ctest.h	/^#define __CTEST_STRUCT(/;"	d
__FNAME	lib/cn-cbor/test/ctest.h	/^#define __FNAME(/;"	d
__QCBORDecodeNesting	lib/QCBOR/inc/qcbor/qcbor_private.h	/^typedef struct __QCBORDecodeNesting  {$/;"	s
__QCBORTrackNesting	lib/QCBOR/inc/qcbor/qcbor_private.h	/^typedef struct __QCBORTrackNesting {$/;"	s
__QCBOR__qcbor_encode_tests__	lib/QCBOR/test/qcbor_encode_tests.h	/^#define __QCBOR__qcbor_encode_tests__$/;"	d
__QCBOR__qcbort_decode_tests__	lib/QCBOR/test/qcbor_decode_tests.h	/^#define __QCBOR__qcbort_decode_tests__$/;"	d
__STDC_LIMIT_MACROS	lib/tinycbor/src/cborencoder.c	/^#  define __STDC_LIMIT_MACROS /;"	d	file:
__STDC_LIMIT_MACROS	lib/tinycbor/src/cborencoder_close_container_checked.c	/^#  define __STDC_LIMIT_MACROS /;"	d	file:
__STDC_LIMIT_MACROS	lib/tinycbor/src/cborencoder_float.c	/^#  define __STDC_LIMIT_MACROS /;"	d	file:
__STDC_LIMIT_MACROS	lib/tinycbor/src/cborparser.c	/^#  define __STDC_LIMIT_MACROS /;"	d	file:
__STDC_LIMIT_MACROS	lib/tinycbor/src/cborparser_dup_string.c	/^#  define __STDC_LIMIT_MACROS /;"	d	file:
__STDC_LIMIT_MACROS	lib/tinycbor/src/cborparser_float.c	/^#  define __STDC_LIMIT_MACROS /;"	d	file:
__STDC_LIMIT_MACROS	lib/tinycbor/src/cborpretty.c	/^#  define __STDC_LIMIT_MACROS /;"	d	file:
__STDC_LIMIT_MACROS	lib/tinycbor/src/cbortojson.c	/^#  define __STDC_LIMIT_MACROS /;"	d	file:
__STDC_LIMIT_MACROS	lib/tinycbor/src/cborvalidation.c	/^#  define __STDC_LIMIT_MACROS /;"	d	file:
__TNAME	lib/cn-cbor/test/ctest.h	/^#define __TNAME(/;"	d
__Test_Section	lib/cn-cbor/test/ctest.h	/^#define __Test_Section /;"	d
__Test_Section	lib/cn-cbor/test/ctest.h	/^#define __Test_Section$/;"	d
__anon03c895ae0108	lib/QCBOR/example.c	/^{$/;"	s	file:
__anon03c895ae0208	lib/QCBOR/example.c	/^   struct {$/;"	s	struct:__anon03c895ae0108	file:
__anon03c895ae0303	lib/QCBOR/example.c	/^typedef enum  {$/;"	g	file:
__anon0cc4264a030a	lib/cn-cbor/src/cn-cbor.c	/^	union {$/;"	u	function:decode_item	file:
__anon0cc4264a040a	lib/cn-cbor/src/cn-cbor.c	/^	union {$/;"	u	function:decode_item	file:
__anon1cfd58550103	lib/QCBOR/inc/qcbor/qcbor_common.h	/^typedef enum {$/;"	g
__anon2f6a438d0102	lib/tinycbor/tests/parser/data.cpp	/^    auto wraparoundError = [minInvalid](uint64_t encodedSize) {$/;"	f	function:addValidationData	file:
__anon4bdbef670108	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   struct {$/;"	s	struct:__QCBORTrackNesting
__anon4bdbef67020a	lib/QCBOR/inc/qcbor/qcbor_private.h	/^      union {$/;"	u	struct:__QCBORDecodeNesting::nesting_decode_level
__anon4bdbef670308	lib/QCBOR/inc/qcbor/qcbor_private.h	/^         struct {$/;"	s	union:__QCBORDecodeNesting::nesting_decode_level::__anon4bdbef67020a
__anon4bdbef670408	lib/QCBOR/inc/qcbor/qcbor_private.h	/^         struct {$/;"	s	union:__QCBORDecodeNesting::nesting_decode_level::__anon4bdbef67020a
__anon4bdbef670508	lib/QCBOR/inc/qcbor/qcbor_private.h	/^typedef struct  {$/;"	s
__anon51af6bc00108	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^typedef struct {$/;"	s
__anon5619e4d60108	lib/QCBOR/src/ieee754.h	/^typedef struct {$/;"	s
__anon5d9aee230103	lib/tinycbor/src/cborinternal_p.h	/^enum {$/;"	g
__anon6325c0a00102	lib/tinycbor/tests/encoder/data.cpp	/^    auto neg = [](quint64 v) { return QVariant::fromValue<NegativeInteger>({v}); };$/;"	f	function:addFixedData	file:
__anon676fdaa30108	lib/cn-cbor/test/context.c	/^typedef struct {$/;"	s	file:
__anon786bb2e4030a	lib/cn-cbor/src/cn-encoder.c	/^		union {$/;"	u	function:_write_double	file:
__anon786bb2e4040a	lib/cn-cbor/src/cn-encoder.c	/^		union {$/;"	u	function:_write_double	file:
__anon7f057ad7010a	lib/tinycbor/src/cbor.h	/^    union {$/;"	u	struct:CborEncoder
__anon7f057ad7020a	lib/tinycbor/src/cbor.h	/^    union {$/;"	u	struct:CborParser
__anon7f057ad7030a	lib/tinycbor/src/cbor.h	/^    union {$/;"	u	struct:CborValue
__anon8d929ada0102	lib/tinycbor/tests/parser/tst_parser.cpp	/^    \/* can_read_bytes = *\/ [](void *token, size_t len) {$/;"	f	file:
__anon8d929ada0202	lib/tinycbor/tests/parser/tst_parser.cpp	/^    \/* read_bytes = *\/ [](void *token, void *dst, size_t offset, size_t len) {$/;"	f	file:
__anon8d929ada0302	lib/tinycbor/tests/parser/tst_parser.cpp	/^    \/* advance_bytes = *\/ [](void *token, size_t len) {$/;"	f	file:
__anon8d929ada0402	lib/tinycbor/tests/parser/tst_parser.cpp	/^    \/* transfer_string = *\/ [](void *token, const void **userptr, size_t offset, size_t len) {$/;"	f	file:
__anona55470de020a	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	union {$/;"	u	struct:cn_cbor
__anonb6499fff0103	lib/tinycbor/src/cborparser.c	/^    enum {$/;"	g	function:preparse_value	file:
__anonc1e45508010a	lib/tinycbor/tools/json2cbor/json2cbor.c	/^    union {$/;"	u	struct:MetaData	file:
__anoncfb530800102	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^    auto callback = [](void *token, const void *data, size_t len, CborEncoderAppendType) {$/;"	f	function:tst_Encoder::writerApi	file:
__anoncfb530800202	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^    auto callback = [](void *token, const void *, size_t, CborEncoderAppendType) {$/;"	f	function:tst_Encoder::writerApiFail	file:
__anond5269ae60103	include/telemetry_codec.h	/^{$/;"	g
__anond5269ae60208	include/telemetry_codec.h	/^{$/;"	s
__anond5269ae60308	include/telemetry_codec.h	/^{$/;"	s
__anonf04339f00103	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^typedef enum {$/;"	g
__anonf04339f0020a	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   union {$/;"	u	struct:_QCBORItem
__anonf04339f00308	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      struct {$/;"	s	union:_QCBORItem::__anonf04339f0020a
__anonf04339f00408	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      struct {$/;"	s	union:_QCBORItem::__anonf04339f0020a
__anonf04339f0050a	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^         union {$/;"	u	struct:_QCBORItem::__anonf04339f0020a::__anonf04339f00408
__anonf04339f0060a	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   union {$/;"	u	struct:_QCBORItem
__anonf04339f00708	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^typedef struct {$/;"	s
__anonf04339f00808	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^typedef struct {$/;"	s
__anonfdd9adb80108	lib/QCBOR/test/run_tests.c	/^typedef struct {$/;"	s	file:
__anonfdd9adb80208	lib/QCBOR/test/run_tests.c	/^typedef struct {$/;"	s	file:
__has_builtin	lib/tinycbor/src/compilersupport_p.h	/^#  define __has_builtin(/;"	d
_append_kv	lib/cn-cbor/src/cn-create.c	/^static bool _append_kv(cn_cbor* cb_map, cn_cbor* key, cn_cbor* val)$/;"	f	typeref:typename:bool	file:
_buffer	lib/cn-cbor/test/cbor_test.c	/^typedef struct _buffer {$/;"	s	file:
_build_subfolder	lib/cn-cbor/conanfile.py	/^    def _build_subfolder(self):$/;"	m	class:CnCborConan
_cbor_encoder_get_buffer_pointer	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API uint8_t *_cbor_encoder_get_buffer_pointer(const CborEncoder *encoder)$/;"	f	typeref:typename:CBOR_INLINE_API uint8_t *
_cbor_failure	lib/cn-cbor/test/cbor_test.c	/^typedef struct _cbor_failure {$/;"	s	file:
_cbor_value_begin_string_iteration	lib/tinycbor/src/cborparser.c	/^CborError _cbor_value_begin_string_iteration(CborValue *it)$/;"	f	typeref:typename:CborError
_cbor_value_copy_string	lib/tinycbor/src/cborparser.c	/^CborError _cbor_value_copy_string(const CborValue *value, void *buffer,$/;"	f	typeref:typename:CborError
_cbor_value_decode_int64_internal	lib/tinycbor/src/cborparser.c	/^uint64_t _cbor_value_decode_int64_internal(const CborValue *value)$/;"	f	typeref:typename:uint64_t
_cbor_value_dup_string	lib/tinycbor/src/cborparser_dup_string.c	/^CborError _cbor_value_dup_string(const CborValue *value, void **buffer, size_t *buflen, CborValu/;"	f	typeref:typename:CborError
_cbor_value_extract_int64_helper	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API uint64_t _cbor_value_extract_int64_helper(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API uint64_t
_cbor_value_finish_string_iteration	lib/tinycbor/src/cborparser.c	/^CborError _cbor_value_finish_string_iteration(CborValue *it)$/;"	f	typeref:typename:CborError
_cbor_value_get_string_chunk	lib/tinycbor/src/cborparser.c	/^CborError _cbor_value_get_string_chunk(const CborValue *value, const void **bufferptr,$/;"	f	typeref:typename:CborError
_cbor_value_get_string_chunk_size	lib/tinycbor/src/cborparser.c	/^CborError _cbor_value_get_string_chunk_size(const CborValue *value, size_t *len)$/;"	f	typeref:typename:CborError
_cmake	lib/cn-cbor/conanfile.py	/^    _cmake = None$/;"	v	class:CnCborConan
_cn_cbor_DLLDEFINES_H_	lib/cn-cbor/src/dll-export.h	/^#define _cn_cbor_DLLDEFINES_H_$/;"	d
_configure_cmake	lib/cn-cbor/conanfile.py	/^    def _configure_cmake(self):$/;"	m	class:CnCborConan
_doIndent	lib/cn-cbor/src/cn-print.c	/^bool _doIndent(cn_write_state *ws, int depth)$/;"	f	typeref:typename:bool
_encoder_breaker	lib/cn-cbor/src/cn-encoder.c	/^bool _encoder_breaker(const cn_cbor *cb, int depth, void *context)$/;"	f	typeref:typename:bool
_encoder_visitor	lib/cn-cbor/src/cn-encoder.c	/^bool _encoder_visitor(const cn_cbor *cb, int depth, void *context)$/;"	f	typeref:typename:bool
_isWritable	lib/cn-cbor/src/cn-print.c	/^bool _isWritable(cn_write_state *ws, size_t cb)$/;"	f	typeref:typename:bool
_print_breaker	lib/cn-cbor/src/cn-print.c	/^bool _print_breaker(const cn_cbor *cb, int depth, void *context)$/;"	f	typeref:typename:bool
_print_encoder	lib/cn-cbor/src/cn-print.c	/^bool _print_encoder(const cn_cbor *cb, int depth, void *context)$/;"	f	typeref:typename:bool
_snprintf	lib/cn-cbor/src/cn-print.c	/^#define _snprintf /;"	d	file:
_source_subfolder	lib/cn-cbor/conanfile.py	/^    def _source_subfolder(self):$/;"	m	class:CnCborConan
_visit	lib/cn-cbor/src/cn-encoder.c	/^bool _visit(const cn_cbor *cb, cn_visit_func visitor, cn_visit_func breaker, void *context)$/;"	f	typeref:typename:bool
_write_double	lib/cn-cbor/src/cn-encoder.c	/^static bool _write_double(cn_write_state *ws, double val, int size)$/;"	f	typeref:typename:bool	file:
_write_positive	lib/cn-cbor/src/cn-encoder.c	/^static bool _write_positive(cn_write_state *ws, cn_cbor_type typ, uint64_t val)$/;"	f	typeref:typename:bool	file:
_write_state	lib/cn-cbor/src/cn-encoder.c	/^typedef struct _write_state {$/;"	s	file:
_write_state	lib/cn-cbor/src/cn-print.c	/^typedef struct _write_state {$/;"	s	file:
_xlate	lib/cn-cbor/src/cn-encoder.c	/^static const uint8_t _xlate[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
abs	lib/tinycbor/tests/encoder/data.cpp	/^struct NegativeInteger { quint64 abs; };$/;"	m	struct:NegativeInteger	typeref:typename:quint64	file:
addArraysAndMaps	lib/tinycbor/tests/encoder/data.cpp	/^void addArraysAndMaps()$/;"	f	typeref:typename:void
addByteStringsData	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void addByteStringsData()$/;"	f	typeref:typename:void
addChunkedStringData	lib/tinycbor/tests/parser/data.cpp	/^void addChunkedStringData()$/;"	f	typeref:typename:void
addColumns	lib/tinycbor/tests/encoder/data.cpp	/^void addColumns()$/;"	f	typeref:typename:void
addColumns	lib/tinycbor/tests/parser/data.cpp	/^void addColumns()$/;"	f	typeref:typename:void
addColumns	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void addColumns()$/;"	f	typeref:typename:void
addEmptyContainersData	lib/tinycbor/tests/parser/data.cpp	/^void addEmptyContainersData()$/;"	f	typeref:typename:void
addEmptyContainersData	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void addEmptyContainersData()$/;"	f	typeref:typename:void
addFixedData	lib/tinycbor/tests/encoder/data.cpp	/^void addFixedData()$/;"	f	typeref:typename:void
addFixedData	lib/tinycbor/tests/parser/data.cpp	/^void addFixedData()$/;"	f	typeref:typename:void
addFixedData	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void addFixedData()$/;"	f	typeref:typename:void
addHalfFloat	lib/tinycbor/tests/encoder/data.cpp	/^void addHalfFloat()$/;"	f	typeref:typename:void
addHalfFloat	lib/tinycbor/tests/parser/tst_parser.cpp	/^static void addHalfFloat()$/;"	f	typeref:typename:void	file:
addIntegers	lib/tinycbor/tests/parser/data.cpp	/^void addIntegers()$/;"	f	typeref:typename:void
addMapMixedData	lib/tinycbor/tests/parser/data.cpp	/^void addMapMixedData()$/;"	f	typeref:typename:void
addNonChunkedStringsData	lib/tinycbor/tests/parser/data.cpp	/^void addNonChunkedStringsData()$/;"	f	typeref:typename:void
addNonJsonData	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void addNonJsonData()$/;"	f	typeref:typename:void
addStringsData	lib/tinycbor/tests/encoder/data.cpp	/^void addStringsData()$/;"	f	typeref:typename:void
addStringsData	lib/tinycbor/tests/parser/data.cpp	/^void addStringsData()$/;"	f	typeref:typename:void
addTagsData	lib/tinycbor/tests/parser/data.cpp	/^void addTagsData()$/;"	f	typeref:typename:void
addTextStringsData	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void addTextStringsData()$/;"	f	typeref:typename:void
addValidationColumns	lib/tinycbor/tests/parser/data.cpp	/^void addValidationColumns()$/;"	f	typeref:typename:void
addValidationData	lib/tinycbor/tests/parser/data.cpp	/^void addValidationData(size_t minInvalid = ~size_t(0))$/;"	f	typeref:typename:void
add_check_overflow	lib/tinycbor/src/compilersupport_p.h	/^static inline bool add_check_overflow(size_t v1, size_t v2, size_t *r)$/;"	f	typeref:typename:bool
add_value_metadata	lib/tinycbor/src/cbortojson.c	/^static CborError add_value_metadata(FILE *out, CborType type, const ConversionStatus *status)$/;"	f	typeref:typename:CborError	file:
advance_bytes	lib/tinycbor/src/cbor.h	/^    void (*advance_bytes)(void *token, size_t len);$/;"	m	struct:CborParserOperations	typeref:typename:void (*)(void * token,size_t len)
advance_bytes	lib/tinycbor/src/cborinternal_p.h	/^static inline void advance_bytes(CborValue *it, size_t n)$/;"	f	typeref:typename:void
advance_internal	lib/tinycbor/src/cborparser.c	/^static CborError advance_internal(CborValue *it)$/;"	f	typeref:typename:CborError	file:
advance_ptr	lib/tinycbor/src/cborencoder.c	/^static inline void advance_ptr(CborEncoder *encoder, size_t n)$/;"	f	typeref:typename:void	file:
advance_recursive	lib/tinycbor/src/cborparser.c	/^static CborError advance_recursive(CborValue *it, int nestingLevel)$/;"	f	typeref:typename:CborError	file:
all	Makefile	/^all: cmake_check_build_system$/;"	t
all	lib/QCBOR/Makefile	/^all: qcbortest libqcbor.a$/;"	t
all	lib/tinycbor/Makefile	/^all: $(if $(JSON2CBOR_SOURCES),bin\/json2cbor)$/;"	t
all	lib/tinycbor/Makefile	/^all: .config \\$/;"	t
all	lib/tinycbor/tools/Makefile	/^all: ..\/bin ..\/bin\/cbordump$/;"	t
alloc	lib/tinycbor/src/open_memstream.c	/^    size_t alloc;$/;"	m	struct:Buffer	typeref:typename:size_t	file:
allocCount	lib/cn-cbor/test/context.c	/^	ssize_t allocCount;$/;"	m	struct:__anon676fdaa30108	typeref:typename:ssize_t	file:
allocNumber	lib/cn-cbor/test/context.c	/^	int allocNumber;$/;"	m	struct:_MyItem	typeref:typename:int	file:
allocateMemory	lib/tinycbor/tests/parser/tst_parser.cpp	/^uint8_t *ParserWrapper::allocateMemory(size_t n)$/;"	f	class:ParserWrapper	typeref:typename:uint8_t *
append_byte_to_buffer	lib/tinycbor/src/cborencoder.c	/^static inline CborError append_byte_to_buffer(CborEncoder *encoder, uint8_t byte)$/;"	f	typeref:typename:CborError	file:
append_to_buffer	lib/tinycbor/src/cborencoder.c	/^static inline CborError append_to_buffer(CborEncoder *encoder, const void *data, size_t len,$/;"	f	typeref:typename:CborError	file:
array_to_json	lib/tinycbor/src/cbortojson.c	/^static CborError array_to_json(FILE *out, CborValue *it, int flags, ConversionStatus *status)$/;"	f	typeref:typename:CborError	file:
arrays	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::arrays()$/;"	f	class:tst_Encoder	typeref:typename:void
arrays	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::arrays()$/;"	f	class:tst_Parser	typeref:typename:void
arrays	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::arrays()$/;"	f	class:tst_ToJson	typeref:typename:void
arraysAndMaps	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^    void arraysAndMaps() { fixed(); }$/;"	f	class:tst_Encoder	typeref:typename:void	file:
arraysAndMaps_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::arraysAndMaps_data()$/;"	f	class:tst_Encoder	typeref:typename:void
arrays_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^    void arrays_data() { tags_data(); }$/;"	f	class:tst_Encoder	typeref:typename:void	file:
arrays_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::arrays_data()$/;"	f	class:tst_Parser	typeref:typename:void
arrays_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::arrays_data()$/;"	f	class:tst_ToJson	typeref:typename:void
assert_data	lib/cn-cbor/test/ctest.h	/^void assert_data(const unsigned char* exp,$/;"	f	typeref:typename:void
assert_equal	lib/cn-cbor/test/ctest.h	/^void assert_equal(size_t exp, size_t real, const char* caller, int line)$/;"	f	typeref:typename:void
assert_fail	lib/cn-cbor/test/ctest.h	/^void assert_fail(const char* caller, int line)$/;"	f	typeref:typename:void
assert_false	lib/cn-cbor/test/ctest.h	/^void assert_false(int real, const char* caller, int line)$/;"	f	typeref:typename:void
assert_not_equal	lib/cn-cbor/test/ctest.h	/^void assert_not_equal(long exp, long real, const char* caller, int line)$/;"	f	typeref:typename:void
assert_not_null	lib/cn-cbor/test/ctest.h	/^void assert_not_null(const void* real, const char* caller, int line)$/;"	f	typeref:typename:void
assert_null	lib/cn-cbor/test/ctest.h	/^void assert_null(void* real, const char* caller, int line)$/;"	f	typeref:typename:void
assert_str	lib/cn-cbor/test/ctest.h	/^void assert_str(const char* exp, const char* real, const char* caller, int line)$/;"	f	typeref:typename:void
assert_true	lib/cn-cbor/test/ctest.h	/^void assert_true(int real, const char* caller, int line)$/;"	f	typeref:typename:void
auMappedTags	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   uint64_t auMappedTags[QCBOR_NUM_MAPPED_TAGS];$/;"	m	struct:_QCBORDecodeContext	typeref:typename:uint64_t[]
bEnabled	lib/QCBOR/test/run_tests.c	/^    bool         bEnabled;$/;"	m	struct:__anonfdd9adb80108	typeref:typename:bool	file:
bEnabled	lib/QCBOR/test/run_tests.c	/^    bool         bEnabled;$/;"	m	struct:__anonfdd9adb80208	typeref:typename:bool	file:
bStringAllocateAll	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   uint8_t  bStringAllocateAll;$/;"	m	struct:_QCBORDecodeContext	typeref:typename:uint8_t
bTurboCharged	lib/QCBOR/example.c	/^   bool       bTurboCharged;$/;"	m	struct:__anon03c895ae0108	typeref:typename:bool	file:
begin	lib/tinycbor/tests/parser/tst_parser.cpp	/^    uint8_t *begin() { return data; }$/;"	f	struct:ParserWrapper	typeref:typename:uint8_t *	file:
bigNum	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^            UsefulBufC bigNum;$/;"	m	union:_QCBORItem::__anonf04339f0020a::__anonf04339f00408::__anonf04339f0050a	typeref:typename:UsefulBufC
bigNum	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      UsefulBufC  bigNum;$/;"	m	union:_QCBORItem::__anonf04339f0020a	typeref:typename:UsefulBufC
bin/cbordump	lib/tinycbor/Makefile	/^bin\/cbordump: $(CBORDUMP_SOURCES:.c=.o) $(BINLIBRARY)$/;"	t
bin/json2cbor	lib/tinycbor/Makefile	/^bin\/json2cbor: $(JSON2CBOR_SOURCES:.c=.o) $(BINLIBRARY)$/;"	t
bindir	lib/tinycbor/Makefile	/^bindir = $(exec_prefix)\/bin$/;"	m
bs	lib/QCBOR/inc/qcbor/qcbor_private.h	/^         } bs; \/* for top-level sequence and bstr wrapped CBOR *\/$/;"	m	union:__QCBORDecodeNesting::nesting_decode_level::__anon4bdbef67020a	typeref:struct:__QCBORDecodeNesting::nesting_decode_level::__anon4bdbef67020a::__anon4bdbef670408
buf	lib/cn-cbor/src/cn-cbor.c	/^	unsigned char *buf;$/;"	m	struct:parse_buf	typeref:typename:unsigned char *	file:
buf	lib/cn-cbor/src/cn-encoder.c	/^	uint8_t *buf;$/;"	m	struct:_write_state	typeref:typename:uint8_t *	file:
buffer	lib/cn-cbor/test/cbor_test.c	/^} buffer;$/;"	t	typeref:struct:_buffer	file:
buffer	lib/tinycbor/tools/json2cbor/json2cbor.c	/^uint8_t *buffer;$/;"	v	typeref:typename:uint8_t *
buffersize	lib/tinycbor/tools/json2cbor/json2cbor.c	/^size_t buffersize;$/;"	v	typeref:typename:size_t
build	lib/cn-cbor/conanfile.py	/^    def build(self):$/;"	m	class:CnCborConan
byte	lib/cn-cbor/test/context.c	/^typedef unsigned char byte;$/;"	t	typeref:typename:unsigned char	file:
byteArrayOps	lib/tinycbor/tests/parser/tst_parser.cpp	/^static const CborParserOperations byteArrayOps = {$/;"	v	typeref:typename:const CborParserOperations
bytes	include/telemetry_codec.h	/^    char bytes[64];$/;"	m	struct:__anond5269ae60208	typeref:typename:char[64]
bytes	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^		const uint8_t* bytes;$/;"	m	union:cn_cbor::__anona55470de020a	typeref:typename:const uint8_t *
bytes_needed	lib/tinycbor/src/cbor.h	/^        ptrdiff_t bytes_needed;$/;"	m	union:CborEncoder::__anon7f057ad7010a	typeref:typename:ptrdiff_t
bytestrings	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^    void bytestrings() { fixed(); }$/;"	f	class:tst_ToJson	typeref:typename:void	file:
bytestrings_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::bytestrings_data()$/;"	f	class:tst_ToJson	typeref:typename:void
calloc_func	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	cn_calloc_func calloc_func;$/;"	m	struct:cn_cbor_context	typeref:typename:cn_calloc_func
can_read_bytes	lib/tinycbor/src/cbor.h	/^    bool (*can_read_bytes)(void *token, size_t len);$/;"	m	struct:CborParserOperations	typeref:typename:bool (*)(void * token,size_t len)
can_read_bytes	lib/tinycbor/src/cborinternal_p.h	/^static inline bool can_read_bytes(const CborValue *it, size_t n)$/;"	f	typeref:typename:bool
cbLeft	lib/cn-cbor/src/cn-print.c	/^	size_t cbLeft;$/;"	m	struct:_write_state	typeref:typename:size_t	file:
cbor_assert	lib/tinycbor/src/compilersupport_p.h	/^#  define cbor_assert(/;"	d
cbor_encode_boolean	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_encode_boolean(CborEncoder *encoder, bool value)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_encode_byte_string	lib/tinycbor/src/cborencoder.c	/^CborError cbor_encode_byte_string(CborEncoder *encoder, const uint8_t *string, size_t length)$/;"	f	typeref:typename:CborError
cbor_encode_double	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_encode_double(CborEncoder *encoder, double value)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_encode_float	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_encode_float(CborEncoder *encoder, float value)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_encode_float_as_half_float	lib/tinycbor/src/cborencoder_float.c	/^CborError cbor_encode_float_as_half_float(CborEncoder *encoder, float value)$/;"	f	typeref:typename:CborError
cbor_encode_floating_point	lib/tinycbor/src/cborencoder.c	/^CborError cbor_encode_floating_point(CborEncoder *encoder, CborType fpType, const void *value)$/;"	f	typeref:typename:CborError
cbor_encode_half_float	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_encode_half_float(CborEncoder *encoder, const void *value)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_encode_int	lib/tinycbor/src/cborencoder.c	/^CborError cbor_encode_int(CborEncoder *encoder, int64_t value)$/;"	f	typeref:typename:CborError
cbor_encode_negative_int	lib/tinycbor/src/cborencoder.c	/^CborError cbor_encode_negative_int(CborEncoder *encoder, uint64_t absolute_value)$/;"	f	typeref:typename:CborError
cbor_encode_null	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_encode_null(CborEncoder *encoder)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_encode_simple_value	lib/tinycbor/src/cborencoder.c	/^CborError cbor_encode_simple_value(CborEncoder *encoder, uint8_t value)$/;"	f	typeref:typename:CborError
cbor_encode_tag	lib/tinycbor/src/cborencoder.c	/^CborError cbor_encode_tag(CborEncoder *encoder, CborTag tag)$/;"	f	typeref:typename:CborError
cbor_encode_text_string	lib/tinycbor/src/cborencoder.c	/^CborError cbor_encode_text_string(CborEncoder *encoder, const char *string, size_t length)$/;"	f	typeref:typename:CborError
cbor_encode_text_stringz	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_encode_text_stringz(CborEncoder *encoder, const char *string)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_encode_uint	lib/tinycbor/src/cborencoder.c	/^CborError cbor_encode_uint(CborEncoder *encoder, uint64_t value)$/;"	f	typeref:typename:CborError
cbor_encode_undefined	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_encode_undefined(CborEncoder *encoder)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_encoder_close_container	lib/tinycbor/src/cborencoder.c	/^CborError cbor_encoder_close_container(CborEncoder *parentEncoder, const CborEncoder *containerE/;"	f	typeref:typename:CborError
cbor_encoder_close_container_checked	lib/tinycbor/src/cborencoder_close_container_checked.c	/^CborError cbor_encoder_close_container_checked(CborEncoder *encoder, const CborEncoder *containe/;"	f	typeref:typename:CborError
cbor_encoder_create_array	lib/tinycbor/src/cborencoder.c	/^CborError cbor_encoder_create_array(CborEncoder *parentEncoder, CborEncoder *arrayEncoder, size_/;"	f	typeref:typename:CborError
cbor_encoder_create_map	lib/tinycbor/src/cborencoder.c	/^CborError cbor_encoder_create_map(CborEncoder *parentEncoder, CborEncoder *mapEncoder, size_t le/;"	f	typeref:typename:CborError
cbor_encoder_get_buffer_size	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API size_t cbor_encoder_get_buffer_size(const CborEncoder *encoder, const uint8_t *b/;"	f	typeref:typename:CBOR_INLINE_API size_t
cbor_encoder_get_extra_bytes_needed	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API size_t cbor_encoder_get_extra_bytes_needed(const CborEncoder *encoder)$/;"	f	typeref:typename:CBOR_INLINE_API size_t
cbor_encoder_init	lib/tinycbor/src/cborencoder.c	/^void cbor_encoder_init(CborEncoder *encoder, uint8_t *buffer, size_t size, int flags)$/;"	f	typeref:typename:void
cbor_encoder_init_writer	lib/tinycbor/src/cborencoder.c	/^void cbor_encoder_init_writer(CborEncoder *encoder, CborEncoderWriteFunction writer, void *token/;"	f	typeref:typename:void
cbor_error_string	lib/tinycbor/src/cborerrorstrings.c	/^const char *cbor_error_string(CborError error)$/;"	f	typeref:typename:const char *
cbor_failure	lib/cn-cbor/test/cbor_test.c	/^} cbor_failure;$/;"	t	typeref:struct:_cbor_failure	file:
cbor_fprintf	lib/tinycbor/src/cborpretty_stdio.c	/^static CborError cbor_fprintf(void *out, const char *fmt, ...)$/;"	f	typeref:typename:CborError	file:
cbor_htonl	lib/tinycbor/src/compilersupport_p.h	/^#    define cbor_htonl /;"	d
cbor_htonl	lib/tinycbor/src/compilersupport_p.h	/^#    define cbor_htonl$/;"	d
cbor_htonl	lib/tinycbor/src/compilersupport_p.h	/^#  define cbor_htonl /;"	d
cbor_htonll	lib/tinycbor/src/compilersupport_p.h	/^#    define cbor_htonll /;"	d
cbor_htonll	lib/tinycbor/src/compilersupport_p.h	/^#    define cbor_htonll$/;"	d
cbor_htonll	lib/tinycbor/src/compilersupport_p.h	/^#  define cbor_htonll /;"	d
cbor_htons	lib/tinycbor/src/compilersupport_p.h	/^#      define cbor_htons /;"	d
cbor_htons	lib/tinycbor/src/compilersupport_p.h	/^#    define cbor_htons$/;"	d
cbor_htons	lib/tinycbor/src/compilersupport_p.h	/^#  define cbor_htons /;"	d
cbor_ntohl	lib/tinycbor/src/compilersupport_p.h	/^#    define cbor_ntohl /;"	d
cbor_ntohl	lib/tinycbor/src/compilersupport_p.h	/^#    define cbor_ntohl$/;"	d
cbor_ntohl	lib/tinycbor/src/compilersupport_p.h	/^#  define cbor_ntohl /;"	d
cbor_ntohll	lib/tinycbor/src/compilersupport_p.h	/^#    define cbor_ntohll /;"	d
cbor_ntohll	lib/tinycbor/src/compilersupport_p.h	/^#    define cbor_ntohll$/;"	d
cbor_ntohll	lib/tinycbor/src/compilersupport_p.h	/^#  define cbor_ntohll /;"	d
cbor_ntohs	lib/tinycbor/src/compilersupport_p.h	/^#      define cbor_ntohs /;"	d
cbor_ntohs	lib/tinycbor/src/compilersupport_p.h	/^#      define cbor_ntohs(/;"	d
cbor_ntohs	lib/tinycbor/src/compilersupport_p.h	/^#    define cbor_ntohs$/;"	d
cbor_ntohs	lib/tinycbor/src/compilersupport_p.h	/^#  define cbor_ntohs /;"	d
cbor_parser_init	lib/tinycbor/src/cborparser.c	/^CborError cbor_parser_init(const uint8_t *buffer, size_t size, uint32_t flags, CborParser *parse/;"	f	typeref:typename:CborError
cbor_parser_init_reader	lib/tinycbor/src/cborparser.c	/^CborError cbor_parser_init_reader(const struct CborParserOperations *ops, CborParser *parser, Cb/;"	f	typeref:typename:CborError
cbor_srcs	lib/cn-cbor/CMakeLists.txt	/^set(cbor_srcs src\/cn-cbor.c src\/cn-create.c src\/cn-encoder.c src\/cn-error.c$/;"	v
cbor_static_assert	lib/tinycbor/src/compilersupport_p.h	/^#  define cbor_static_assert(/;"	d
cbor_value_advance	lib/tinycbor/src/cborparser.c	/^CborError cbor_value_advance(CborValue *it)$/;"	f	typeref:typename:CborError
cbor_value_advance_fixed	lib/tinycbor/src/cborparser.c	/^CborError cbor_value_advance_fixed(CborValue *it)$/;"	f	typeref:typename:CborError
cbor_value_at_end	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_at_end(const CborValue *it)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_begin_string_iteration	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_begin_string_iteration(CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_calculate_string_length	lib/tinycbor/src/cborparser.c	/^CborError cbor_value_calculate_string_length(const CborValue *value, size_t *len)$/;"	f	typeref:typename:CborError
cbor_value_copy_byte_string	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_copy_byte_string(const CborValue *value, uint8_t *buffer,$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_copy_text_string	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_copy_text_string(const CborValue *value, char *buffer,$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_dup_byte_string	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_dup_byte_string(const CborValue *value, uint8_t **buffer,$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_dup_text_string	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_dup_text_string(const CborValue *value, char **buffer,$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_enter_container	lib/tinycbor/src/cborparser.c	/^CborError cbor_value_enter_container(const CborValue *it, CborValue *recursed)$/;"	f	typeref:typename:CborError
cbor_value_finish_string_iteration	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_finish_string_iteration(CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_array_length	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_array_length(const CborValue *value, size_t *length)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_boolean	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_boolean(const CborValue *value, bool *result)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_byte_string_chunk	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_byte_string_chunk(const CborValue *value, const uint8_t/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_double	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_double(const CborValue *value, double *result)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_float	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_float(const CborValue *value, float *result)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_half_float	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_half_float(const CborValue *value, void *result)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_half_float_as_float	lib/tinycbor/src/cborparser_float.c	/^CborError cbor_value_get_half_float_as_float(const CborValue *value, float *result)$/;"	f	typeref:typename:CborError
cbor_value_get_int	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_int(const CborValue *value, int *result)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_int64	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_int64(const CborValue *value, int64_t *result)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_int64_checked	lib/tinycbor/src/cborparser.c	/^CborError cbor_value_get_int64_checked(const CborValue *value, int64_t *result)$/;"	f	typeref:typename:CborError
cbor_value_get_int_checked	lib/tinycbor/src/cborparser.c	/^CborError cbor_value_get_int_checked(const CborValue *value, int *result)$/;"	f	typeref:typename:CborError
cbor_value_get_map_length	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_map_length(const CborValue *value, size_t *length)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_next_byte	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API const uint8_t *cbor_value_get_next_byte(const CborValue *it)$/;"	f	typeref:typename:CBOR_INLINE_API const uint8_t *
cbor_value_get_raw_integer	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_raw_integer(const CborValue *value, uint64_t *result)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_simple_type	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_simple_type(const CborValue *value, uint8_t *result)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_string_chunk_size	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_string_chunk_size(const CborValue *value, size_t *len)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_string_length	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_string_length(const CborValue *value, size_t *length)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_tag	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_tag(const CborValue *value, CborTag *result)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_text_string_chunk	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_text_string_chunk(const CborValue *value, const char **/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_get_type	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborType cbor_value_get_type(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API CborType
cbor_value_get_uint64	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_get_uint64(const CborValue *value, uint64_t *result)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_is_array	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_array(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_boolean	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_boolean(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_byte_string	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_byte_string(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_container	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_container(const CborValue *it)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_double	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_double(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_float	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_float(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_half_float	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_half_float(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_integer	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_integer(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_length_known	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_length_known(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_map	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_map(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_negative_integer	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_negative_integer(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_null	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_null(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_simple_type	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_simple_type(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_tag	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_tag(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_text_string	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_text_string(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_undefined	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_undefined(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_unsigned_integer	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_unsigned_integer(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_is_valid	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_is_valid(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_leave_container	lib/tinycbor/src/cborparser.c	/^CborError cbor_value_leave_container(CborValue *it, const CborValue *recursed)$/;"	f	typeref:typename:CborError
cbor_value_map_find_value	lib/tinycbor/src/cborparser.c	/^CborError cbor_value_map_find_value(const CborValue *map, const char *string, CborValue *element/;"	f	typeref:typename:CborError
cbor_value_reparse	lib/tinycbor/src/cborparser.c	/^CborError cbor_value_reparse(CborValue *it)$/;"	f	typeref:typename:CborError
cbor_value_skip_tag	lib/tinycbor/src/cborparser.c	/^CborError cbor_value_skip_tag(CborValue *it)$/;"	f	typeref:typename:CborError
cbor_value_string_iteration_at_end	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API bool cbor_value_string_iteration_at_end(const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API bool
cbor_value_text_string_equals	lib/tinycbor/src/cborparser.c	/^CborError cbor_value_text_string_equals(const CborValue *value, const char *string, bool *result/;"	f	typeref:typename:CborError
cbor_value_to_json	lib/tinycbor/src/cborjson.h	/^CBOR_INLINE_API CborError cbor_value_to_json(FILE *out, const CborValue *value, int flags)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_to_json_advance	lib/tinycbor/src/cbortojson.c	/^CborError cbor_value_to_json_advance(FILE *out, CborValue *value, int flags)$/;"	f	typeref:typename:CborError
cbor_value_to_pretty	lib/tinycbor/src/cbor.h	/^CBOR_INLINE_API CborError cbor_value_to_pretty(FILE *out, const CborValue *value)$/;"	f	typeref:typename:CBOR_INLINE_API CborError
cbor_value_to_pretty_advance	lib/tinycbor/src/cborpretty_stdio.c	/^CborError cbor_value_to_pretty_advance(FILE *out, CborValue *value)$/;"	f	typeref:typename:CborError
cbor_value_to_pretty_advance_flags	lib/tinycbor/src/cborpretty_stdio.c	/^CborError cbor_value_to_pretty_advance_flags(FILE *out, CborValue *value, int flags)$/;"	f	typeref:typename:CborError
cbor_value_to_pretty_stream	lib/tinycbor/src/cborpretty.c	/^CborError cbor_value_to_pretty_stream(CborStreamFunction streamFunction, void *token, CborValue /;"	f	typeref:typename:CborError
cbor_value_validate	lib/tinycbor/src/cborvalidation.c	/^CborError cbor_value_validate(const CborValue *it, uint32_t flags)$/;"	f	typeref:typename:CborError
cbor_value_validate_basic	lib/tinycbor/src/cborparser.c	/^CborError cbor_value_validate_basic(const CborValue *it)$/;"	f	typeref:typename:CborError
cflags	lib/tinycbor/Makefile	/^cflags := $(CPPFLAGS) -I$(SRCDIR)src$/;"	m
check	lib/tinycbor/Makefile	/^check: tests\/Makefile | $(BINLIBRARY)$/;"	t
check_qmake	lib/tinycbor/Makefile	/^  check_qmake = $(strip $(shell $(1) -query QT_VERSION 2>\/dev\/null | cut -b1))$/;"	m
checkedIntegers	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::checkedIntegers()$/;"	f	class:tst_Parser	typeref:typename:void
checkedIntegers_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::checkedIntegers_data()$/;"	f	class:tst_Parser	typeref:typename:void
chunkedString	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::chunkedString()$/;"	f	class:tst_Parser	typeref:typename:void
chunkedStringInUndefArray	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::chunkedStringInUndefArray()$/;"	f	class:tst_Parser	typeref:typename:void
chunkedStringInUndefArray_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^    void chunkedStringInUndefArray_data() { chunkedString_data(); }$/;"	f	class:tst_Parser	typeref:typename:void	file:
chunkedStringTest	lib/tinycbor/tests/parser/tst_parser.cpp	/^static void chunkedStringTest(const QByteArray &data, const QString &concatenated,$/;"	f	typeref:typename:void	file:
chunkedString_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::chunkedString_data()$/;"	f	class:tst_Parser	typeref:typename:void
clean	Makefile	/^clean:$/;"	t
clean	lib/QCBOR/Makefile	/^clean:$/;"	t
clean	lib/tinycbor/Makefile	/^clean: mostlyclean$/;"	t
clean/fast	Makefile	/^clean\/fast: clean$/;"	t
client	CMakeLists.txt	/^add_executable(client main.c src\/telemetry_codec.c ${QCBOR_FILES} ${CNCBOR_FILES} ${TCBOR_FILES/;"	t
client	Makefile	/^client: cmake_check_build_system$/;"	t
client/fast	Makefile	/^client\/fast:$/;"	t
close_buffer	lib/tinycbor/src/open_memstream.c	/^static int close_buffer(void *cookie)$/;"	f	typeref:typename:int	file:
cmake_check_build_system	Makefile	/^cmake_check_build_system:$/;"	t
cmake_force	Makefile	/^cmake_force:$/;"	t
cmd_line_main.o	lib/QCBOR/Makefile	/^cmd_line_main.o: test\/run_tests.h $(PUBLIC_INTERFACE)$/;"	t
cn-cbor: A constrained node implementation of CBOR in C	lib/cn-cbor/README.md	/^# cn-cbor: A constrained node implementation of CBOR in C$/;"	c
cn-test	lib/cn-cbor/test/CMakeLists.txt	/^  add_executable(cn-test test.c)$/;"	t
cn_calloc_func	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^typedef void* (*cn_calloc_func)(size_t count, size_t size, void* context);$/;"	t	typeref:typename:void * (*)(size_t count,size_t size,void * context)
cn_cbor	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^typedef struct cn_cbor {$/;"	s
cn_cbor	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^} cn_cbor;$/;"	t	typeref:struct:cn_cbor
cn_cbor_array_append	lib/cn-cbor/src/cn-create.c	/^bool cn_cbor_array_append(cn_cbor* cb_array, cn_cbor* cb_value, cn_cbor_errback* errp)$/;"	f	typeref:typename:CN_CBOR_EXPORT bool
cn_cbor_array_create	lib/cn-cbor/src/cn-create.c	/^cn_cbor* cn_cbor_array_create(CBOR_CONTEXT_COMMA cn_cbor_errback* errp)$/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_bool_create	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^static inline cn_cbor* cn_cbor_bool_create(bool value CBOR_CONTEXT, cn_cbor_errback* errp)$/;"	f	typeref:typename:cn_cbor *
cn_cbor_chunked_append	lib/cn-cbor/src/cn-create.c	/^bool cn_cbor_chunked_append(cn_cbor* cb_array, cn_cbor* cb_value, cn_cbor_errback* errp)$/;"	f	typeref:typename:CN_CBOR_EXPORT bool
cn_cbor_chunked_create	lib/cn-cbor/src/cn-create.c	/^cn_cbor* cn_cbor_chunked_create(int type, CBOR_CONTEXT_COMMA cn_cbor_errback* errp)$/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_context	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^typedef struct cn_cbor_context {$/;"	s
cn_cbor_context	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^} cn_cbor_context;$/;"	t	typeref:struct:cn_cbor_context
cn_cbor_data_create	lib/cn-cbor/src/cn-create.c	/^cn_cbor* cn_cbor_data_create(const uint8_t* data, int len, CBOR_CONTEXT_COMMA cn_cbor_errback* e/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_data_create2	lib/cn-cbor/src/cn-create.c	/^cn_cbor* cn_cbor_data_create2(const uint8_t* data, int len, int flags CBOR_CONTEXT, cn_cbor_errb/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_decode	lib/cn-cbor/src/cn-cbor.c	/^cn_cbor *cn_cbor_decode(const unsigned char *buf, size_t len CBOR_CONTEXT, cn_cbor_errback *errp/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_decode_test	lib/cn-cbor/test/file_test.c	/^static void cn_cbor_decode_test(const unsigned char *buf, int len)$/;"	f	typeref:typename:void	file:
cn_cbor_decode_test	lib/cn-cbor/test/test.c	/^static void cn_cbor_decode_test(const unsigned char *buf, int len)$/;"	f	typeref:typename:void	file:
cn_cbor_dont_free_data	lib/cn-cbor/src/cn-cbor.c	/^void cn_cbor_dont_free_data(cn_cbor *cbor)$/;"	f	typeref:typename:CN_CBOR_EXPORT void
cn_cbor_double_create	lib/cn-cbor/src/cn-create.c	/^cn_cbor* cn_cbor_double_create(double value CBOR_CONTEXT, cn_cbor_errback* errp)$/;"	f	typeref:typename:cn_cbor *
cn_cbor_encoder_write	lib/cn-cbor/src/cn-encoder.c	/^ssize_t cn_cbor_encoder_write(uint8_t *buf, size_t buf_offset, size_t buf_size, const cn_cbor *c/;"	f	typeref:typename:ssize_t
cn_cbor_errback	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^typedef struct cn_cbor_errback {$/;"	s
cn_cbor_errback	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^} cn_cbor_errback;$/;"	t	typeref:struct:cn_cbor_errback
cn_cbor_error	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^typedef enum cn_cbor_error {$/;"	g
cn_cbor_error	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^} cn_cbor_error;$/;"	t	typeref:enum:cn_cbor_error
cn_cbor_error_str	lib/cn-cbor/src/cn-error.c	/^const char *cn_cbor_error_str[] = {"CN_CBOR_NO_ERROR", "CN_CBOR_ERR_OUT_OF_DATA", "CN_CBOR_ERR_N/;"	v	typeref:typename:CN_CBOR_EXPORT const char * []
cn_cbor_flags	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^typedef enum cn_cbor_flags {$/;"	g
cn_cbor_flags	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^} cn_cbor_flags;$/;"	t	typeref:enum:cn_cbor_flags
cn_cbor_float_create	lib/cn-cbor/src/cn-create.c	/^cn_cbor* cn_cbor_float_create(float value CBOR_CONTEXT, cn_cbor_errback* errp)$/;"	f	typeref:typename:cn_cbor *
cn_cbor_free	lib/cn-cbor/src/cn-cbor.c	/^void cn_cbor_free(cn_cbor *cb CBOR_CONTEXT)$/;"	f	typeref:typename:CN_CBOR_EXPORT void
cn_cbor_index	lib/cn-cbor/src/cn-get.c	/^cn_cbor* cn_cbor_index(const cn_cbor* cb, unsigned int idx)$/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_int_create	lib/cn-cbor/src/cn-create.c	/^cn_cbor* cn_cbor_int_create(int64_t value CBOR_CONTEXT, cn_cbor_errback* errp)$/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_map_create	lib/cn-cbor/src/cn-create.c	/^cn_cbor* cn_cbor_map_create(CBOR_CONTEXT_COMMA cn_cbor_errback* errp)$/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_map_put	lib/cn-cbor/src/cn-create.c	/^bool cn_cbor_map_put(cn_cbor* cb_map, cn_cbor* cb_key, cn_cbor* cb_value, cn_cbor_errback* errp)$/;"	f	typeref:typename:CN_CBOR_EXPORT bool
cn_cbor_mapget_int	lib/cn-cbor/src/cn-get.c	/^cn_cbor* cn_cbor_mapget_int(const cn_cbor* cb, int key)$/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_mapget_string	lib/cn-cbor/src/cn-get.c	/^cn_cbor* cn_cbor_mapget_string(const cn_cbor* cb, const char* key)$/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_mapput_int	lib/cn-cbor/src/cn-create.c	/^bool cn_cbor_mapput_int(cn_cbor* cb_map, int64_t key, cn_cbor* cb_value CBOR_CONTEXT, cn_cbor_er/;"	f	typeref:typename:CN_CBOR_EXPORT bool
cn_cbor_mapput_string	lib/cn-cbor/src/cn-create.c	/^bool cn_cbor_mapput_string(cn_cbor* cb_map, const char* key, cn_cbor* cb_value CBOR_CONTEXT, cn_/;"	f	typeref:typename:CN_CBOR_EXPORT bool
cn_cbor_mapput_string2	lib/cn-cbor/src/cn-create.c	/^bool cn_cbor_mapput_string2(cn_cbor* cb_map,$/;"	f	typeref:typename:CN_CBOR_EXPORT bool
cn_cbor_null_create	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^static inline cn_cbor* cn_cbor_null_create(CBOR_CONTEXT_COMMA cn_cbor_errback* errp)$/;"	f	typeref:typename:cn_cbor *
cn_cbor_printer_write	lib/cn-cbor/src/cn-print.c	/^ssize_t cn_cbor_printer_write(char *rgbBuffer,$/;"	f	typeref:typename:ssize_t
cn_cbor_simple_create	lib/cn-cbor/src/cn-create.c	/^cn_cbor* cn_cbor_simple_create(int simpleValue, CBOR_CONTEXT_COMMA cn_cbor_errback* errp)$/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_string_create	lib/cn-cbor/src/cn-create.c	/^cn_cbor* cn_cbor_string_create(const char* data, CBOR_CONTEXT_COMMA cn_cbor_errback* errp)$/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_string_create2	lib/cn-cbor/src/cn-create.c	/^cn_cbor* cn_cbor_string_create2(const char* data, int flags CBOR_CONTEXT, cn_cbor_errback* errp)$/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_tag_create	lib/cn-cbor/src/cn-create.c	/^cn_cbor* cn_cbor_tag_create(int tag, cn_cbor* child, CBOR_CONTEXT_COMMA cn_cbor_errback* errp)$/;"	f	typeref:typename:CN_CBOR_EXPORT cn_cbor *
cn_cbor_type	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^typedef enum cn_cbor_type {$/;"	g
cn_cbor_type	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^} cn_cbor_type;$/;"	t	typeref:enum:cn_cbor_type
cn_free_func	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^typedef void (*cn_free_func)(void* ptr, void* context);$/;"	t	typeref:typename:void (*)(void * ptr,void * context)
cn_visit_func	lib/cn-cbor/src/cn-encoder.c	/^typedef bool (*cn_visit_func)(const cn_cbor *cb, int depth, void *context);$/;"	t	typeref:typename:bool (*)(const cn_cbor * cb,int depth,void * context)	file:
cn_visit_func	lib/cn-cbor/src/cn-print.c	/^typedef bool (*cn_visit_func)(const cn_cbor *cb, int depth, void *context);$/;"	t	typeref:typename:bool (*)(const cn_cbor * cb,int depth,void * context)	file:
cn_write_state	lib/cn-cbor/src/cn-encoder.c	/^} cn_write_state;$/;"	t	typeref:struct:_write_state	file:
cn_write_state	lib/cn-cbor/src/cn-print.c	/^} cn_write_state;$/;"	t	typeref:struct:_write_state	file:
color_output	lib/cn-cbor/test/ctest.h	/^static int color_output = 1;$/;"	v	typeref:typename:int
color_print	lib/cn-cbor/test/ctest.h	/^static void color_print(const char* color, const char* text)$/;"	f	typeref:typename:void
compare	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void compare(Input input, FnUnderTest fn_under_test, const QByteArray &output)$/;"	f	typeref:typename:void
compare	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void compare(const QVariant &input, const QByteArray &output)$/;"	f	typeref:typename:void
compareFailed	lib/tinycbor/tests/parser/tst_parser.cpp	/^bool compareFailed = true;$/;"	v	typeref:typename:bool
compareFailed	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^bool compareFailed = true;$/;"	v	typeref:typename:bool
compareMetaData	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void compareMetaData(QByteArray data, const QString &expected, int otherFlags = 0)$/;"	f	typeref:typename:void
compareOne	lib/tinycbor/tests/parser/tst_parser.cpp	/^#define compareOne(/;"	d	file:
compareOne	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^#define compareOne(/;"	d	file:
compareOneSize	lib/tinycbor/tests/parser/tst_parser.cpp	/^#define compareOneSize(/;"	d	file:
compareOneString	lib/tinycbor/tests/parser/tst_parser.cpp	/^#define compareOneString(/;"	d	file:
compareOneString	lib/tinycbor/tests/parser/tst_parser.cpp	/^void compareOneString(const QByteArray &data, const QString &string, bool expected, int line)$/;"	f	typeref:typename:void
compareOne_real	lib/tinycbor/tests/parser/tst_parser.cpp	/^void compareOne_real(const QByteArray &data, const QString &expected, int line, int n = -1)$/;"	f	typeref:typename:void
compareOne_real	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void compareOne_real(const QByteArray &data, const QString &expected, int flags, int line)$/;"	f	typeref:typename:void
configure	lib/cn-cbor/conanfile.py	/^    def configure(self):$/;"	m	class:CnCborConan
configure	lib/tinycbor/Makefile	/^configure: .config$/;"	t
const	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define const$/;"	d	file:
consumed	lib/tinycbor/tests/parser/tst_parser.cpp	/^    int consumed;$/;"	m	struct:Input	typeref:typename:int	file:
container_to_pretty	lib/tinycbor/src/cborpretty.c	/^static CborError container_to_pretty(CborStreamFunction stream, void *out, CborValue *it, CborTy/;"	f	typeref:typename:CborError	file:
context	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	void* context;$/;"	m	struct:cn_cbor_context	typeref:typename:void *
context	lib/cn-cbor/test/cbor_test.c	/^cn_cbor_context *context;$/;"	v	typeref:typename:cn_cbor_context *
context	lib/cn-cbor/test/context.c	/^	cn_cbor_context context;$/;"	m	struct:__anon676fdaa30108	typeref:typename:cn_cbor_context	file:
convertToUint64	lib/tinycbor/src/cborpretty.c	/^static inline bool convertToUint64(double v, uint64_t *absolute)$/;"	f	typeref:typename:bool	file:
copy_current_position	lib/tinycbor/src/cborinternal_p.h	/^static inline void copy_current_position(CborValue *dst, const CborValue *src)$/;"	f	typeref:typename:void
count	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^		size_t count;$/;"	m	union:cn_cbor::__anona55470de020a	typeref:typename:size_t
coverage_report	lib/cn-cbor/cmake/LCov.cmake	/^  add_custom_target(coverage_report$/;"	t
coveralls	lib/cn-cbor/cmake/Coveralls.cmake	/^		add_custom_target(coveralls DEPENDS coveralls_generate)$/;"	t
coveralls	lib/cn-cbor/cmake/Coveralls.cmake	/^		add_custom_target(coveralls DEPENDS coveralls_upload)$/;"	t
coveralls_generate	lib/cn-cbor/cmake/Coveralls.cmake	/^	add_custom_target(coveralls_generate$/;"	t
coveralls_setup	lib/cn-cbor/cmake/Coveralls.cmake	/^function(coveralls_setup _COVERAGE_SRCS _COVERALLS_UPLOAD)$/;"	f
coveralls_turn_on_coverage	lib/cn-cbor/cmake/Coveralls.cmake	/^macro(coveralls_turn_on_coverage)$/;"	m
coveralls_upload	lib/cn-cbor/cmake/Coveralls.cmake	/^		add_custom_target(coveralls_upload$/;"	t
create_container	lib/tinycbor/src/cborencoder.c	/^static CborError create_container(CborEncoder *encoder, CborEncoder *container, size_t length, u/;"	f	typeref:typename:CborError	file:
create_test	lib/cn-cbor/test/CMakeLists.txt	/^function(create_test name)$/;"	f
ctest	lib/cn-cbor/test/ctest.h	/^struct ctest {$/;"	s
ctest_err	lib/cn-cbor/test/ctest.h	/^static jmp_buf ctest_err;$/;"	v	typeref:typename:jmp_buf
ctest_errorbuffer	lib/cn-cbor/test/ctest.h	/^static char ctest_errorbuffer[MSG_SIZE];$/;"	v	typeref:typename:char[]
ctest_errormsg	lib/cn-cbor/test/ctest.h	/^static char* ctest_errormsg;$/;"	v	typeref:typename:char *
ctest_errorsize	lib/cn-cbor/test/ctest.h	/^static size_t ctest_errorsize;$/;"	v	typeref:typename:size_t
ctest_main	lib/cn-cbor/test/ctest.h	/^int ctest_main(int argc, const char* argv[])$/;"	f	typeref:typename:int
cursor	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^   size_t     cursor; \/\/ Current offset in data being parse$/;"	m	struct:useful_input_buf	typeref:typename:size_t
cylinders	lib/QCBOR/example.c	/^   } cylinders[MAX_CYLINDERS];$/;"	m	struct:__anon03c895ae0108	typeref:struct:__anon03c895ae0108::__anon03c895ae0208[]	file:
d	lib/cn-cbor/src/cn-cbor.c	/^		double d;$/;"	m	union:decode_item::__anon0cc4264a040a	typeref:typename:double	file:
d	lib/cn-cbor/src/cn-encoder.c	/^			double d;$/;"	m	union:_write_double::__anon786bb2e4040a	typeref:typename:double	file:
dConvertToDouble	lib/QCBOR/test/qcbor_decode_tests.c	/^   double      dConvertToDouble;$/;"	m	struct:NumberConversion	typeref:typename:double	file:
dDesignedCompresion	lib/QCBOR/example.c	/^   double     dDesignedCompresion;$/;"	m	struct:__anon03c895ae0108	typeref:typename:double	file:
data	lib/cn-cbor/test/context.c	/^	byte data[4];$/;"	m	struct:_MyItem	typeref:typename:byte[4]	file:
data	lib/cn-cbor/test/ctest.h	/^	void* data;$/;"	m	struct:ctest	typeref:typename:void *
data	lib/tinycbor/src/cbor.h	/^    } data;$/;"	m	struct:CborEncoder	typeref:union:CborEncoder::__anon7f057ad7010a
data	lib/tinycbor/tests/parser/tst_parser.cpp	/^    QByteArray data;$/;"	m	struct:Input	typeref:typename:QByteArray	file:
data	lib/tinycbor/tests/parser/tst_parser.cpp	/^    uint8_t *data;$/;"	m	struct:ParserWrapper	typeref:typename:uint8_t *	file:
data_len	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^   size_t     data_len; \/\/ length of the data$/;"	m	struct:useful_out_buf	typeref:typename:size_t
dateString	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      UsefulBufC  dateString;$/;"	m	union:_QCBORItem::__anonf04339f0020a	typeref:typename:UsefulBufC
dbl	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^		double dbl;$/;"	m	union:cn_cbor::__anona55470de020a	typeref:typename:double
decode_base16	lib/tinycbor/tools/json2cbor/json2cbor.c	/^uint8_t *decode_base16(const char *string, size_t *len)$/;"	f	typeref:typename:uint8_t *
decode_base64	lib/tinycbor/tools/json2cbor/json2cbor.c	/^uint8_t *decode_base64(const char *string, size_t *len)$/;"	f	typeref:typename:uint8_t *
decode_base64_generic	lib/tinycbor/tools/json2cbor/json2cbor.c	/^uint8_t *decode_base64_generic(const char *string, size_t *len, const int8_t reverse_alphabet[25/;"	f	typeref:typename:uint8_t *
decode_base64url	lib/tinycbor/tools/json2cbor/json2cbor.c	/^uint8_t *decode_base64url(const char *string, size_t *len)$/;"	f	typeref:typename:uint8_t *
decode_half	lib/QCBOR/test/half_to_double_from_rfc7049.c	/^double decode_half(unsigned char *halfp) {$/;"	f	typeref:typename:double
decode_half	lib/cn-cbor/src/cn-cbor.c	/^static double decode_half(int half)$/;"	f	typeref:typename:double	file:
decode_half	lib/tinycbor/src/cborinternal_p.h	/^static inline double decode_half(unsigned short half)$/;"	f	typeref:typename:double
decode_half	lib/tinycbor/src/cborinternal_p.h	/^static inline float decode_half(unsigned short half)$/;"	f	typeref:typename:float
decode_item	lib/cn-cbor/src/cn-cbor.c	/^static cn_cbor *decode_item(struct parse_buf *pb CBOR_CONTEXT, cn_cbor *top_parent)$/;"	f	typeref:typename:cn_cbor *	file:
decode_json	lib/tinycbor/tools/json2cbor/json2cbor.c	/^CborError decode_json(cJSON *json, CborEncoder *encoder)$/;"	f	typeref:typename:CborError
decode_json_with_metadata	lib/tinycbor/tools/json2cbor/json2cbor.c	/^CborError decode_json_with_metadata(cJSON *item, CborEncoder *encoder, struct MetaData md)$/;"	f	typeref:typename:CborError
default_options	lib/cn-cbor/conanfile.py	/^    default_options = {$/;"	v	class:CnCborConan
default_target	Makefile	/^default_target: all$/;"	t
depend	Makefile	/^depend:$/;"	t
description	lib/cn-cbor/conanfile.py	/^    description = """A constrained node implementation of CBOR in C"""$/;"	v	class:CnCborConan
dfnum	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      double      dfnum;$/;"	m	union:_QCBORItem::__anonf04339f0020a	typeref:typename:double
difftest	lib/cn-cbor/test/CMakeLists.txt	/^    difftest$/;"	t
dist	lib/tinycbor/Makefile	/^dist: $(PACKAGE).tar.gz $(PACKAGE).zip$/;"	t
dist_dir	lib/cn-cbor/CMakeLists.txt	/^set(dist_dir ${CMAKE_BINARY_DIR}\/dist)$/;"	v
distcheck	lib/tinycbor/Makefile	/^distcheck: .git$/;"	t
distclean	lib/tinycbor/Makefile	/^distclean: clean$/;"	t
doc	lib/cn-cbor/CMakeLists.txt	/^      doc$/;"	t
docs	lib/tinycbor/Makefile	/^docs:$/;"	t
doxyfile	lib/cn-cbor/CMakeLists.txt	/^    set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}\/Doxyfile)$/;"	v
doxyfile_in	lib/cn-cbor/CMakeLists.txt	/^    set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}\/Doxyfile.in)$/;"	v
dump	lib/cn-cbor/test/file_test.c	/^static void dump(const cn_cbor *cb, char *out, char **end, int indent)$/;"	f	typeref:typename:void	file:
dump	lib/cn-cbor/test/test.c	/^static void dump(const cn_cbor *cb, char *out, char **end, int indent)$/;"	f	typeref:typename:void	file:
dumpFile	lib/tinycbor/tools/cbordump/cbordump.c	/^void dumpFile(FILE *in, const char *fname, bool printJosn, int flags)$/;"	f	typeref:typename:void
dump_bytestring_base16	lib/tinycbor/src/cbortojson.c	/^static CborError dump_bytestring_base16(char **result, CborValue *it)$/;"	f	typeref:typename:CborError	file:
dump_bytestring_base64	lib/tinycbor/src/cbortojson.c	/^static CborError dump_bytestring_base64(char **result, CborValue *it)$/;"	f	typeref:typename:CborError	file:
dump_bytestring_base64url	lib/tinycbor/src/cbortojson.c	/^static CborError dump_bytestring_base64url(char **result, CborValue *it)$/;"	f	typeref:typename:CborError	file:
dumpbytes	lib/tinycbor/examples/simplereader.c	/^static void dumpbytes(const uint8_t *buf, size_t len)$/;"	f	typeref:typename:void	file:
dumprecursive	lib/tinycbor/examples/simplereader.c	/^static CborError dumprecursive(CborValue *it, int nestingLevel)$/;"	f	typeref:typename:CborError	file:
ebuf	lib/cn-cbor/src/cn-cbor.c	/^	unsigned char *ebuf;$/;"	m	struct:parse_buf	typeref:typename:unsigned char *	file:
edit_cache	Makefile	/^edit_cache:$/;"	t
edit_cache/fast	Makefile	/^edit_cache\/fast: edit_cache$/;"	t
emptyContainers	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::emptyContainers()$/;"	f	class:tst_Parser	typeref:typename:void
emptyContainers	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^    void emptyContainers() { fixed(); }$/;"	f	class:tst_ToJson	typeref:typename:void	file:
emptyContainers_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::emptyContainers_data()$/;"	f	class:tst_Parser	typeref:typename:void
emptyContainers_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::emptyContainers_data()$/;"	f	class:tst_ToJson	typeref:typename:void
encodeOne	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void encodeOne(Input input, FnUnderTest fn_under_test, QByteArray &buffer, CborError &error)$/;"	f	typeref:typename:void
encodeVariant	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^CborError encodeVariant(CborEncoder *encoder, const QVariant &v)$/;"	f	typeref:typename:CborError
encode_half	lib/tinycbor/src/cborinternal_p.h	/^static inline unsigned short encode_half(double val)$/;"	f	typeref:typename:unsigned short
encode_half	lib/tinycbor/src/cborinternal_p.h	/^static inline unsigned short encode_half(float val)$/;"	f	typeref:typename:unsigned short
encode_number	lib/tinycbor/src/cborencoder.c	/^static inline CborError encode_number(CborEncoder *encoder, uint64_t ui, uint8_t shiftedMajorTyp/;"	f	typeref:typename:CborError	file:
encode_number_no_update	lib/tinycbor/src/cborencoder.c	/^static inline CborError encode_number_no_update(CborEncoder *encoder, uint64_t ui, uint8_t shift/;"	f	typeref:typename:CborError	file:
encode_string	lib/tinycbor/src/cborencoder.c	/^static CborError encode_string(CborEncoder *encoder, size_t length, uint8_t shiftedMajorType, co/;"	f	typeref:typename:CborError	file:
end	lib/tinycbor/src/cbor.h	/^        const uint8_t *end;$/;"	m	union:CborParser::__anon7f057ad7020a	typeref:typename:const uint8_t *
end	lib/tinycbor/src/cbor.h	/^    uint8_t *end;$/;"	m	struct:CborEncoder	typeref:typename:uint8_t *
end	lib/tinycbor/tests/parser/tst_parser.cpp	/^    uint8_t *end()   { return data + len; }$/;"	f	struct:ParserWrapper	typeref:typename:uint8_t *	file:
endPointer	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::endPointer()$/;"	f	class:tst_Parser	typeref:typename:void
endPointer_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::endPointer_data()$/;"	f	class:tst_Parser	typeref:typename:void
ensure_writable	lib/cn-cbor/src/cn-encoder.c	/^#define ensure_writable(/;"	d	file:
epochDate	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      } epochDate;$/;"	m	union:_QCBORItem::__anonf04339f0020a	typeref:struct:_QCBORItem::__anonf04339f0020a::__anonf04339f00308
err	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^   uint8_t    err;    \/\/ Set request goes off end or magic number is bad$/;"	m	struct:useful_input_buf	typeref:typename:uint8_t
err	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^   uint8_t    err;$/;"	m	struct:useful_out_buf	typeref:typename:uint8_t
err	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	cn_cbor_error err;$/;"	m	struct:cn_cbor_errback	typeref:typename:cn_cbor_error
err	lib/cn-cbor/src/cn-cbor.c	/^	cn_cbor_error err;$/;"	m	struct:parse_buf	typeref:typename:cn_cbor_error	file:
err	lib/cn-cbor/test/cbor_test.c	/^	cn_cbor_error err;$/;"	m	struct:_cbor_failure	typeref:typename:cn_cbor_error	file:
err_name	lib/cn-cbor/test/file_test.c	/^const char *err_name[] = {$/;"	v	typeref:typename:const char * []
err_name	lib/cn-cbor/test/test.c	/^const char *err_name[] = {$/;"	v	typeref:typename:const char * []
example.o	lib/QCBOR/Makefile	/^example.o:	$(PUBLIC_INTERFACE)$/;"	t
exec_prefix	lib/cn-cbor/CMakeLists.txt	/^set(exec_prefix ${CMAKE_INSTALL_PREFIX}\/bin)$/;"	v
exec_prefix	lib/tinycbor/Makefile	/^exec_prefix = $(prefix)$/;"	m
expAndMantissa	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      } expAndMantissa;$/;"	m	union:_QCBORItem::__anonf04339f0020a	typeref:struct:_QCBORItem::__anonf04339f0020a::__anonf04339f00408
extra	lib/tinycbor/src/cbor.h	/^    uint16_t extra;$/;"	m	struct:CborValue	typeref:typename:uint16_t
extract_number_and_advance	lib/tinycbor/src/cborparser.c	/^static uint64_t extract_number_and_advance(CborValue *it)$/;"	f	typeref:typename:uint64_t	file:
extract_number_checked	lib/tinycbor/src/cborinternal_p.h	/^static inline CborError extract_number_checked(const CborValue *it, uint64_t *value, size_t *byt/;"	f	typeref:typename:CborError
f	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^		float f;$/;"	m	union:cn_cbor::__anona55470de020a	typeref:typename:float
f	lib/cn-cbor/src/cn-cbor.c	/^		float f;$/;"	m	union:decode_item::__anon0cc4264a030a	typeref:typename:float	file:
f	lib/cn-cbor/src/cn-encoder.c	/^			float f;$/;"	m	union:_write_double::__anon786bb2e4030a	typeref:typename:float	file:
fExponentiator	lib/QCBOR/src/qcbor_decode.c	/^typedef QCBORError (*fExponentiator)(uint64_t uMantissa, int64_t nExponent, uint64_t *puResult);$/;"	t	typeref:typename:QCBORError (*)(uint64_t uMantissa,int64_t nExponent,uint64_t * puResult)	file:
fSecondsFraction	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^         double   fSecondsFraction;$/;"	m	struct:_QCBORItem::__anonf04339f0020a::__anonf04339f00308	typeref:typename:double
filter_func	lib/cn-cbor/test/ctest.h	/^typedef int (*filter_func)(struct ctest*);$/;"	t	typeref:typename:int (*)(struct ctest *)
find_symbol	lib/cn-cbor/test/ctest.h	/^static void* find_symbol(struct ctest* test, const char* fname)$/;"	f	typeref:typename:void *
find_tagged_type	lib/tinycbor/src/cbortojson.c	/^static CborError find_tagged_type(CborValue *it, CborTag *tag, CborType *type)$/;"	f	typeref:typename:CborError	file:
first	lib/tinycbor/tests/parser/tst_parser.cpp	/^    CborValue first;$/;"	m	struct:ParserWrapper	typeref:typename:CborValue	file:
first_child	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	struct cn_cbor* first_child;$/;"	m	struct:cn_cbor	typeref:struct:cn_cbor *
fixed	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::fixed()$/;"	f	class:tst_Encoder	typeref:typename:void
fixed	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::fixed()$/;"	f	class:tst_Parser	typeref:typename:void
fixed	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::fixed()$/;"	f	class:tst_ToJson	typeref:typename:void
fixed_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::fixed_data()$/;"	f	class:tst_Encoder	typeref:typename:void
fixed_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::fixed_data()$/;"	f	class:tst_Parser	typeref:typename:void
fixed_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::fixed_data()$/;"	f	class:tst_ToJson	typeref:typename:void
flags	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	cn_cbor_flags flags;$/;"	m	struct:cn_cbor	typeref:typename:cn_cbor_flags
flags	lib/tinycbor/src/cbor.h	/^    enum CborParserGlobalFlags flags;$/;"	m	struct:CborParser	typeref:enum:CborParserGlobalFlags
flags	lib/tinycbor/src/cbor.h	/^    int flags;$/;"	m	struct:CborEncoder	typeref:typename:int
flags	lib/tinycbor/src/cbor.h	/^    uint8_t flags;$/;"	m	struct:CborValue	typeref:typename:uint8_t
flags	lib/tinycbor/src/cbortojson.c	/^    int flags;$/;"	m	struct:ConversionStatus	typeref:typename:int	file:
floatAsHalfFloat	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::floatAsHalfFloat()$/;"	f	class:tst_Encoder	typeref:typename:void
floatAsHalfFloatCloseToZero	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::floatAsHalfFloatCloseToZero()$/;"	f	class:tst_Encoder	typeref:typename:void
floatAsHalfFloatCloseToZero_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::floatAsHalfFloatCloseToZero_data()$/;"	f	class:tst_Encoder	typeref:typename:void
floatAsHalfFloatNaN	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::floatAsHalfFloatNaN()$/;"	f	class:tst_Encoder	typeref:typename:void
floatAsHalfFloat_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::floatAsHalfFloat_data()$/;"	f	class:tst_Encoder	typeref:typename:void
float_tests_h	lib/QCBOR/test/float_tests.h	/^#define float_tests_h$/;"	d
fnum	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      float       fnum;$/;"	m	union:_QCBORItem::__anonf04339f0020a	typeref:typename:float
fputs_wrapper	lib/QCBOR/cmd_line_main.c	/^static void fputs_wrapper(const char *szString, void *pOutCtx, int bNewLine)$/;"	f	typeref:typename:void	file:
freeMemory	lib/tinycbor/tests/parser/tst_parser.cpp	/^void ParserWrapper::freeMemory()$/;"	f	class:ParserWrapper	typeref:typename:void
free_func	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	cn_free_func free_func;$/;"	m	struct:cn_cbor_context	typeref:typename:cn_free_func
generators	lib/cn-cbor/conanfile.py	/^    generators = "cmake"$/;"	v	class:CnCborConan
generic_dump_base64	lib/tinycbor/src/cbortojson.c	/^static CborError generic_dump_base64(char **result, CborValue *it, const char alphabet[65])$/;"	f	typeref:typename:CborError	file:
getCurrentTime	lib/cn-cbor/test/ctest.h	/^static uint64_t getCurrentTime()$/;"	f	typeref:typename:uint64_t
get_cjson_size_limited	lib/tinycbor/tools/json2cbor/json2cbor.c	/^size_t get_cjson_size_limited(cJSON *container)$/;"	f	typeref:typename:size_t
get_indicator	lib/tinycbor/src/cborpretty.c	/^static const char *get_indicator(const CborValue *it, int flags)$/;"	f	typeref:typename:const char *	file:
get_meta_data	lib/tinycbor/tools/json2cbor/json2cbor.c	/^cJSON *get_meta_data(cJSON *object, cJSON *item)$/;"	f	typeref:typename:cJSON *
get_source_path_from_gcov_filename	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^macro(get_source_path_from_gcov_filename _SRC_FILENAME _GCOV_FILENAME)$/;"	m
get_string_chunk	lib/tinycbor/src/cborparser.c	/^static CborError get_string_chunk(CborValue *it, const void **bufferptr, size_t *len)$/;"	f	typeref:typename:CborError	file:
get_string_chunk_size	lib/tinycbor/src/cborparser.c	/^static CborError get_string_chunk_size(const CborValue *it, size_t *offset, size_t *len)$/;"	f	typeref:typename:CborError	file:
get_utf8	lib/tinycbor/src/utf8_p.h	/^static inline uint32_t get_utf8(const uint8_t **buffer, const uint8_t *end)$/;"	f	typeref:typename:uint32_t
gettimeofday	lib/cn-cbor/test/ctest.h	/^int gettimeofday(struct timeval* tp, struct timezone* tzp)$/;"	f	typeref:typename:int
git_log_format	lib/cn-cbor/cmake/CoverallsGenerateGcov.cmake	/^	macro (git_log_format FORMAT_CHARS VAR_NAME)$/;"	m
halfFloat	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::halfFloat()$/;"	f	class:tst_Encoder	typeref:typename:void
halfFloat	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::halfFloat()$/;"	f	class:tst_Parser	typeref:typename:void
halfFloat_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::halfFloat_data()$/;"	f	class:tst_Encoder	typeref:typename:void
halfFloat_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::halfFloat_data()$/;"	f	class:tst_Parser	typeref:typename:void
half_to_double_from_rfc7049_h	lib/QCBOR/test/half_to_double_from_rfc7049.h	/^#define half_to_double_from_rfc7049_h$/;"	d
help	Makefile	/^help:$/;"	t
hex	lib/cn-cbor/test/cbor_test.c	/^	char *hex;$/;"	m	struct:_cbor_failure	typeref:typename:char *	file:
hexDump	lib/tinycbor/src/cborpretty.c	/^static CborError hexDump(CborStreamFunction stream, void *out, const void *ptr, size_t n)$/;"	f	typeref:typename:CborError	file:
hton16p	lib/cn-cbor/src/cn-encoder.c	/^#define hton16p(/;"	d	file:
hton32p	lib/cn-cbor/src/cn-encoder.c	/^#define hton32p(/;"	d	file:
hton64p	lib/cn-cbor/src/cn-encoder.c	/^static uint64_t hton64p(const uint8_t *p)$/;"	f	typeref:typename:uint64_t	file:
hton8p	lib/cn-cbor/src/cn-encoder.c	/^#define hton8p(/;"	d	file:
htonl	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^#define htonl(/;"	d
htonll	lib/tinycbor/src/compilersupport_p.h	/^#      define htonll /;"	d
htonll	lib/tinycbor/src/compilersupport_p.h	/^#      define htonll$/;"	d
htons	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^#define htons(/;"	d
iFailLeft	lib/cn-cbor/test/context.c	/^	ssize_t iFailLeft;$/;"	m	struct:__anon676fdaa30108	typeref:typename:ssize_t	file:
ib	lib/cn-cbor/src/cn-print.c	/^	size_t ib;$/;"	m	struct:_write_state	typeref:typename:size_t	file:
ieee754_h	lib/QCBOR/src/ieee754.h	/^#define ieee754_h$/;"	d
illegalSimpleType	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::illegalSimpleType()$/;"	f	class:tst_Encoder	typeref:typename:void
illegalSimpleType_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::illegalSimpleType_data()$/;"	f	class:tst_Encoder	typeref:typename:void
includedir	lib/cn-cbor/CMakeLists.txt	/^set(includedir ${CMAKE_INSTALL_PREFIX}\/include)$/;"	v
includedir	lib/tinycbor/Makefile	/^includedir = $(prefix)\/include$/;"	m
incompleteData	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::incompleteData()$/;"	f	class:tst_Parser	typeref:typename:void
incompleteData_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::incompleteData_data()$/;"	f	class:tst_Parser	typeref:typename:void
indent	lib/tinycbor/examples/simplereader.c	/^static void indent(int nestingLevel)$/;"	f	typeref:typename:void	file:
info_arch	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_arch	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_cray	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_cray	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_language_dialect_default	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v	typeref:typename:const char *
info_language_dialect_default	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v	typeref:typename:const char *
info_platform	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_platform	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate_version	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_simulate_version	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_version	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
init	lib/tinycbor/tests/parser/tst_parser.cpp	/^    CborError init(const QByteArray &ba, uint32_t flags = 0)$/;"	f	struct:ParserWrapper	typeref:typename:CborError	file:
init	lib/tinycbor/tests/parser/tst_parser.cpp	/^    CborError init(const char *ptr, int n, uint32_t flags = 0)$/;"	f	struct:ParserWrapper	typeref:typename:CborError	file:
initParserEmpty	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::initParserEmpty()$/;"	f	class:tst_Parser	typeref:typename:void
initTestCase	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::initTestCase()$/;"	f	class:tst_ToJson	typeref:typename:void
inline	lib/cn-cbor/src/cbor.h	/^#define inline /;"	d
inline	lib/cn-cbor/src/cn-encoder.c	/^#define inline /;"	d	file:
inline	lib/tinycbor/src/compilersupport_p.h	/^#  define inline /;"	d
install	lib/QCBOR/Makefile	/^install: libqcbor.a $(PUBLIC_INTERFACE)$/;"	t
install	lib/tinycbor/Makefile	/^install: $(INSTALL_TARGETS:%=$(DESTDIR)%)$/;"	t
install-strip	lib/tinycbor/Makefile	/^install-strip:$/;"	t
install_so	lib/QCBOR/Makefile	/^install_so: libqcbor.so$/;"	t
int64	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      int64_t     int64;$/;"	m	union:_QCBORItem::__anonf04339f0020a	typeref:typename:int64_t
int64	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      int64_t     int64;$/;"	m	union:_QCBORItem::__anonf04339f0060a	typeref:typename:int64_t
integers	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::integers()$/;"	f	class:tst_Parser	typeref:typename:void
integers_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::integers_data()$/;"	f	class:tst_Parser	typeref:typename:void
isOomError	lib/tinycbor/src/cborencoder.c	/^static inline bool isOomError(CborError err)$/;"	f	typeref:typename:bool	file:
isOomError	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^static inline bool isOomError(CborError err)$/;"	f	typeref:typename:bool	file:
is_fixed_type	lib/tinycbor/src/cborparser.c	/^static bool is_fixed_type(uint8_t type)$/;"	f	typeref:typename:bool	file:
is_indefinite	lib/cn-cbor/src/cn-encoder.c	/^static inline bool is_indefinite(const cn_cbor *cb)$/;"	f	typeref:typename:bool	file:
isatty	lib/cn-cbor/test/ctest.h	/^#define isatty /;"	d
iterate_memcmp	lib/tinycbor/src/cborparser.c	/^static uintptr_t iterate_memcmp(char *s1, const uint8_t *s2, size_t len)$/;"	f	typeref:typename:uintptr_t	file:
iterate_memcpy	lib/tinycbor/src/cborparser.c	/^static uintptr_t iterate_memcpy(char *dest, const uint8_t *src, size_t len)$/;"	f	typeref:typename:uintptr_t	file:
iterate_noop	lib/tinycbor/src/cborparser.c	/^static uintptr_t iterate_noop(char *dest, const uint8_t *src, size_t len)$/;"	f	typeref:typename:uintptr_t	file:
iterate_string_chunks	lib/tinycbor/src/cborparser.c	/^static CborError iterate_string_chunks(const CborValue *value, char *buffer, size_t *buflen,$/;"	f	typeref:typename:CborError	file:
json2cbor_CCFLAGS	lib/tinycbor/Makefile	/^    json2cbor_CCFLAGS = -I$(SRCDIR)src\/cjson$/;"	m
knownTagData	lib/tinycbor/src/cborvalidation.c	/^static const struct KnownTagData knownTagData[] = {$/;"	v	typeref:typename:const struct KnownTagData[]	file:
label	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   } label;$/;"	m	struct:_QCBORItem	typeref:union:_QCBORItem::__anonf04339f0060a
lastTag	lib/tinycbor/src/cbortojson.c	/^    CborTag lastTag;$/;"	m	struct:ConversionStatus	typeref:typename:CborTag	file:
last_child	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	struct cn_cbor* last_child;$/;"	m	struct:cn_cbor	typeref:struct:cn_cbor *
len	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^    size_t      len;$/;"	m	struct:q_useful_buf_c	typeref:typename:size_t
len	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^   size_t len;$/;"	m	struct:q_useful_buf	typeref:typename:size_t
len	lib/tinycbor/src/open_memstream.c	/^    size_t *len;$/;"	m	struct:Buffer	typeref:typename:size_t *	file:
len	lib/tinycbor/tests/parser/tst_parser.cpp	/^    size_t len;$/;"	m	struct:ParserWrapper	typeref:typename:size_t	file:
length	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	size_t length;$/;"	m	struct:cn_cbor	typeref:typename:size_t
lib/QCBOR/src/UsefulBuf.c.i	Makefile	/^lib\/QCBOR\/src\/UsefulBuf.c.i:$/;"	t
lib/QCBOR/src/UsefulBuf.c.o	Makefile	/^lib\/QCBOR\/src\/UsefulBuf.c.o:$/;"	t
lib/QCBOR/src/UsefulBuf.c.s	Makefile	/^lib\/QCBOR\/src\/UsefulBuf.c.s:$/;"	t
lib/QCBOR/src/UsefulBuf.i	Makefile	/^lib\/QCBOR\/src\/UsefulBuf.i: lib\/QCBOR\/src\/UsefulBuf.c.i$/;"	t
lib/QCBOR/src/UsefulBuf.o	Makefile	/^lib\/QCBOR\/src\/UsefulBuf.o: lib\/QCBOR\/src\/UsefulBuf.c.o$/;"	t
lib/QCBOR/src/UsefulBuf.s	Makefile	/^lib\/QCBOR\/src\/UsefulBuf.s: lib\/QCBOR\/src\/UsefulBuf.c.s$/;"	t
lib/QCBOR/src/ieee754.c.i	Makefile	/^lib\/QCBOR\/src\/ieee754.c.i:$/;"	t
lib/QCBOR/src/ieee754.c.o	Makefile	/^lib\/QCBOR\/src\/ieee754.c.o:$/;"	t
lib/QCBOR/src/ieee754.c.s	Makefile	/^lib\/QCBOR\/src\/ieee754.c.s:$/;"	t
lib/QCBOR/src/ieee754.i	Makefile	/^lib\/QCBOR\/src\/ieee754.i: lib\/QCBOR\/src\/ieee754.c.i$/;"	t
lib/QCBOR/src/ieee754.o	Makefile	/^lib\/QCBOR\/src\/ieee754.o: lib\/QCBOR\/src\/ieee754.c.o$/;"	t
lib/QCBOR/src/ieee754.s	Makefile	/^lib\/QCBOR\/src\/ieee754.s: lib\/QCBOR\/src\/ieee754.c.s$/;"	t
lib/QCBOR/src/qcbor_decode.c.i	Makefile	/^lib\/QCBOR\/src\/qcbor_decode.c.i:$/;"	t
lib/QCBOR/src/qcbor_decode.c.o	Makefile	/^lib\/QCBOR\/src\/qcbor_decode.c.o:$/;"	t
lib/QCBOR/src/qcbor_decode.c.s	Makefile	/^lib\/QCBOR\/src\/qcbor_decode.c.s:$/;"	t
lib/QCBOR/src/qcbor_decode.i	Makefile	/^lib\/QCBOR\/src\/qcbor_decode.i: lib\/QCBOR\/src\/qcbor_decode.c.i$/;"	t
lib/QCBOR/src/qcbor_decode.o	Makefile	/^lib\/QCBOR\/src\/qcbor_decode.o: lib\/QCBOR\/src\/qcbor_decode.c.o$/;"	t
lib/QCBOR/src/qcbor_decode.s	Makefile	/^lib\/QCBOR\/src\/qcbor_decode.s: lib\/QCBOR\/src\/qcbor_decode.c.s$/;"	t
lib/QCBOR/src/qcbor_encode.c.i	Makefile	/^lib\/QCBOR\/src\/qcbor_encode.c.i:$/;"	t
lib/QCBOR/src/qcbor_encode.c.o	Makefile	/^lib\/QCBOR\/src\/qcbor_encode.c.o:$/;"	t
lib/QCBOR/src/qcbor_encode.c.s	Makefile	/^lib\/QCBOR\/src\/qcbor_encode.c.s:$/;"	t
lib/QCBOR/src/qcbor_encode.i	Makefile	/^lib\/QCBOR\/src\/qcbor_encode.i: lib\/QCBOR\/src\/qcbor_encode.c.i$/;"	t
lib/QCBOR/src/qcbor_encode.o	Makefile	/^lib\/QCBOR\/src\/qcbor_encode.o: lib\/QCBOR\/src\/qcbor_encode.c.o$/;"	t
lib/QCBOR/src/qcbor_encode.s	Makefile	/^lib\/QCBOR\/src\/qcbor_encode.s: lib\/QCBOR\/src\/qcbor_encode.c.s$/;"	t
lib/QCBOR/src/qcbor_err_to_str.c.i	Makefile	/^lib\/QCBOR\/src\/qcbor_err_to_str.c.i:$/;"	t
lib/QCBOR/src/qcbor_err_to_str.c.o	Makefile	/^lib\/QCBOR\/src\/qcbor_err_to_str.c.o:$/;"	t
lib/QCBOR/src/qcbor_err_to_str.c.s	Makefile	/^lib\/QCBOR\/src\/qcbor_err_to_str.c.s:$/;"	t
lib/QCBOR/src/qcbor_err_to_str.i	Makefile	/^lib\/QCBOR\/src\/qcbor_err_to_str.i: lib\/QCBOR\/src\/qcbor_err_to_str.c.i$/;"	t
lib/QCBOR/src/qcbor_err_to_str.o	Makefile	/^lib\/QCBOR\/src\/qcbor_err_to_str.o: lib\/QCBOR\/src\/qcbor_err_to_str.c.o$/;"	t
lib/QCBOR/src/qcbor_err_to_str.s	Makefile	/^lib\/QCBOR\/src\/qcbor_err_to_str.s: lib\/QCBOR\/src\/qcbor_err_to_str.c.s$/;"	t
lib/cn-cbor/src/cn-cbor.c.i	Makefile	/^lib\/cn-cbor\/src\/cn-cbor.c.i:$/;"	t
lib/cn-cbor/src/cn-cbor.c.o	Makefile	/^lib\/cn-cbor\/src\/cn-cbor.c.o:$/;"	t
lib/cn-cbor/src/cn-cbor.c.s	Makefile	/^lib\/cn-cbor\/src\/cn-cbor.c.s:$/;"	t
lib/cn-cbor/src/cn-cbor.i	Makefile	/^lib\/cn-cbor\/src\/cn-cbor.i: lib\/cn-cbor\/src\/cn-cbor.c.i$/;"	t
lib/cn-cbor/src/cn-cbor.o	Makefile	/^lib\/cn-cbor\/src\/cn-cbor.o: lib\/cn-cbor\/src\/cn-cbor.c.o$/;"	t
lib/cn-cbor/src/cn-cbor.s	Makefile	/^lib\/cn-cbor\/src\/cn-cbor.s: lib\/cn-cbor\/src\/cn-cbor.c.s$/;"	t
lib/cn-cbor/src/cn-create.c.i	Makefile	/^lib\/cn-cbor\/src\/cn-create.c.i:$/;"	t
lib/cn-cbor/src/cn-create.c.o	Makefile	/^lib\/cn-cbor\/src\/cn-create.c.o:$/;"	t
lib/cn-cbor/src/cn-create.c.s	Makefile	/^lib\/cn-cbor\/src\/cn-create.c.s:$/;"	t
lib/cn-cbor/src/cn-create.i	Makefile	/^lib\/cn-cbor\/src\/cn-create.i: lib\/cn-cbor\/src\/cn-create.c.i$/;"	t
lib/cn-cbor/src/cn-create.o	Makefile	/^lib\/cn-cbor\/src\/cn-create.o: lib\/cn-cbor\/src\/cn-create.c.o$/;"	t
lib/cn-cbor/src/cn-create.s	Makefile	/^lib\/cn-cbor\/src\/cn-create.s: lib\/cn-cbor\/src\/cn-create.c.s$/;"	t
lib/cn-cbor/src/cn-encoder.c.i	Makefile	/^lib\/cn-cbor\/src\/cn-encoder.c.i:$/;"	t
lib/cn-cbor/src/cn-encoder.c.o	Makefile	/^lib\/cn-cbor\/src\/cn-encoder.c.o:$/;"	t
lib/cn-cbor/src/cn-encoder.c.s	Makefile	/^lib\/cn-cbor\/src\/cn-encoder.c.s:$/;"	t
lib/cn-cbor/src/cn-encoder.i	Makefile	/^lib\/cn-cbor\/src\/cn-encoder.i: lib\/cn-cbor\/src\/cn-encoder.c.i$/;"	t
lib/cn-cbor/src/cn-encoder.o	Makefile	/^lib\/cn-cbor\/src\/cn-encoder.o: lib\/cn-cbor\/src\/cn-encoder.c.o$/;"	t
lib/cn-cbor/src/cn-encoder.s	Makefile	/^lib\/cn-cbor\/src\/cn-encoder.s: lib\/cn-cbor\/src\/cn-encoder.c.s$/;"	t
lib/cn-cbor/src/cn-error.c.i	Makefile	/^lib\/cn-cbor\/src\/cn-error.c.i:$/;"	t
lib/cn-cbor/src/cn-error.c.o	Makefile	/^lib\/cn-cbor\/src\/cn-error.c.o:$/;"	t
lib/cn-cbor/src/cn-error.c.s	Makefile	/^lib\/cn-cbor\/src\/cn-error.c.s:$/;"	t
lib/cn-cbor/src/cn-error.i	Makefile	/^lib\/cn-cbor\/src\/cn-error.i: lib\/cn-cbor\/src\/cn-error.c.i$/;"	t
lib/cn-cbor/src/cn-error.o	Makefile	/^lib\/cn-cbor\/src\/cn-error.o: lib\/cn-cbor\/src\/cn-error.c.o$/;"	t
lib/cn-cbor/src/cn-error.s	Makefile	/^lib\/cn-cbor\/src\/cn-error.s: lib\/cn-cbor\/src\/cn-error.c.s$/;"	t
lib/cn-cbor/src/cn-get.c.i	Makefile	/^lib\/cn-cbor\/src\/cn-get.c.i:$/;"	t
lib/cn-cbor/src/cn-get.c.o	Makefile	/^lib\/cn-cbor\/src\/cn-get.c.o:$/;"	t
lib/cn-cbor/src/cn-get.c.s	Makefile	/^lib\/cn-cbor\/src\/cn-get.c.s:$/;"	t
lib/cn-cbor/src/cn-get.i	Makefile	/^lib\/cn-cbor\/src\/cn-get.i: lib\/cn-cbor\/src\/cn-get.c.i$/;"	t
lib/cn-cbor/src/cn-get.o	Makefile	/^lib\/cn-cbor\/src\/cn-get.o: lib\/cn-cbor\/src\/cn-get.c.o$/;"	t
lib/cn-cbor/src/cn-get.s	Makefile	/^lib\/cn-cbor\/src\/cn-get.s: lib\/cn-cbor\/src\/cn-get.c.s$/;"	t
lib/cn-cbor/src/cn-print.c.i	Makefile	/^lib\/cn-cbor\/src\/cn-print.c.i:$/;"	t
lib/cn-cbor/src/cn-print.c.o	Makefile	/^lib\/cn-cbor\/src\/cn-print.c.o:$/;"	t
lib/cn-cbor/src/cn-print.c.s	Makefile	/^lib\/cn-cbor\/src\/cn-print.c.s:$/;"	t
lib/cn-cbor/src/cn-print.i	Makefile	/^lib\/cn-cbor\/src\/cn-print.i: lib\/cn-cbor\/src\/cn-print.c.i$/;"	t
lib/cn-cbor/src/cn-print.o	Makefile	/^lib\/cn-cbor\/src\/cn-print.o: lib\/cn-cbor\/src\/cn-print.c.o$/;"	t
lib/cn-cbor/src/cn-print.s	Makefile	/^lib\/cn-cbor\/src\/cn-print.s: lib\/cn-cbor\/src\/cn-print.c.s$/;"	t
lib/libtinycbor-freestanding.a	lib/tinycbor/Makefile	/^lib\/libtinycbor-freestanding.a: $(TINYCBOR_FREESTANDING_SOURCES:.c=.o)$/;"	t
lib/libtinycbor.a	lib/tinycbor/Makefile	/^lib\/libtinycbor.a: $(TINYCBOR_SOURCES:.c=.o)$/;"	t
lib/libtinycbor.so	lib/tinycbor/Makefile	/^lib\/libtinycbor.so: $(TINYCBOR_SOURCES:.c=.pic.o)$/;"	t
lib/tinycbor/src/cborencoder.c.i	Makefile	/^lib\/tinycbor\/src\/cborencoder.c.i:$/;"	t
lib/tinycbor/src/cborencoder.c.o	Makefile	/^lib\/tinycbor\/src\/cborencoder.c.o:$/;"	t
lib/tinycbor/src/cborencoder.c.s	Makefile	/^lib\/tinycbor\/src\/cborencoder.c.s:$/;"	t
lib/tinycbor/src/cborencoder.i	Makefile	/^lib\/tinycbor\/src\/cborencoder.i: lib\/tinycbor\/src\/cborencoder.c.i$/;"	t
lib/tinycbor/src/cborencoder.o	Makefile	/^lib\/tinycbor\/src\/cborencoder.o: lib\/tinycbor\/src\/cborencoder.c.o$/;"	t
lib/tinycbor/src/cborencoder.s	Makefile	/^lib\/tinycbor\/src\/cborencoder.s: lib\/tinycbor\/src\/cborencoder.c.s$/;"	t
lib/tinycbor/src/cborencoder_close_container_checked.c.i	Makefile	/^lib\/tinycbor\/src\/cborencoder_close_container_checked.c.i:$/;"	t
lib/tinycbor/src/cborencoder_close_container_checked.c.o	Makefile	/^lib\/tinycbor\/src\/cborencoder_close_container_checked.c.o:$/;"	t
lib/tinycbor/src/cborencoder_close_container_checked.c.s	Makefile	/^lib\/tinycbor\/src\/cborencoder_close_container_checked.c.s:$/;"	t
lib/tinycbor/src/cborencoder_close_container_checked.i	Makefile	/^lib\/tinycbor\/src\/cborencoder_close_container_checked.i: lib\/tinycbor\/src\/cborencoder_close/;"	t
lib/tinycbor/src/cborencoder_close_container_checked.o	Makefile	/^lib\/tinycbor\/src\/cborencoder_close_container_checked.o: lib\/tinycbor\/src\/cborencoder_close/;"	t
lib/tinycbor/src/cborencoder_close_container_checked.s	Makefile	/^lib\/tinycbor\/src\/cborencoder_close_container_checked.s: lib\/tinycbor\/src\/cborencoder_close/;"	t
lib/tinycbor/src/cborencoder_float.c.i	Makefile	/^lib\/tinycbor\/src\/cborencoder_float.c.i:$/;"	t
lib/tinycbor/src/cborencoder_float.c.o	Makefile	/^lib\/tinycbor\/src\/cborencoder_float.c.o:$/;"	t
lib/tinycbor/src/cborencoder_float.c.s	Makefile	/^lib\/tinycbor\/src\/cborencoder_float.c.s:$/;"	t
lib/tinycbor/src/cborencoder_float.i	Makefile	/^lib\/tinycbor\/src\/cborencoder_float.i: lib\/tinycbor\/src\/cborencoder_float.c.i$/;"	t
lib/tinycbor/src/cborencoder_float.o	Makefile	/^lib\/tinycbor\/src\/cborencoder_float.o: lib\/tinycbor\/src\/cborencoder_float.c.o$/;"	t
lib/tinycbor/src/cborencoder_float.s	Makefile	/^lib\/tinycbor\/src\/cborencoder_float.s: lib\/tinycbor\/src\/cborencoder_float.c.s$/;"	t
lib/tinycbor/src/cborerrorstrings.c.i	Makefile	/^lib\/tinycbor\/src\/cborerrorstrings.c.i:$/;"	t
lib/tinycbor/src/cborerrorstrings.c.o	Makefile	/^lib\/tinycbor\/src\/cborerrorstrings.c.o:$/;"	t
lib/tinycbor/src/cborerrorstrings.c.s	Makefile	/^lib\/tinycbor\/src\/cborerrorstrings.c.s:$/;"	t
lib/tinycbor/src/cborerrorstrings.i	Makefile	/^lib\/tinycbor\/src\/cborerrorstrings.i: lib\/tinycbor\/src\/cborerrorstrings.c.i$/;"	t
lib/tinycbor/src/cborerrorstrings.o	Makefile	/^lib\/tinycbor\/src\/cborerrorstrings.o: lib\/tinycbor\/src\/cborerrorstrings.c.o$/;"	t
lib/tinycbor/src/cborerrorstrings.s	Makefile	/^lib\/tinycbor\/src\/cborerrorstrings.s: lib\/tinycbor\/src\/cborerrorstrings.c.s$/;"	t
lib/tinycbor/src/cborparser.c.i	Makefile	/^lib\/tinycbor\/src\/cborparser.c.i:$/;"	t
lib/tinycbor/src/cborparser.c.o	Makefile	/^lib\/tinycbor\/src\/cborparser.c.o:$/;"	t
lib/tinycbor/src/cborparser.c.s	Makefile	/^lib\/tinycbor\/src\/cborparser.c.s:$/;"	t
lib/tinycbor/src/cborparser.i	Makefile	/^lib\/tinycbor\/src\/cborparser.i: lib\/tinycbor\/src\/cborparser.c.i$/;"	t
lib/tinycbor/src/cborparser.o	Makefile	/^lib\/tinycbor\/src\/cborparser.o: lib\/tinycbor\/src\/cborparser.c.o$/;"	t
lib/tinycbor/src/cborparser.s	Makefile	/^lib\/tinycbor\/src\/cborparser.s: lib\/tinycbor\/src\/cborparser.c.s$/;"	t
lib/tinycbor/src/cborparser_dup_string.c.i	Makefile	/^lib\/tinycbor\/src\/cborparser_dup_string.c.i:$/;"	t
lib/tinycbor/src/cborparser_dup_string.c.o	Makefile	/^lib\/tinycbor\/src\/cborparser_dup_string.c.o:$/;"	t
lib/tinycbor/src/cborparser_dup_string.c.s	Makefile	/^lib\/tinycbor\/src\/cborparser_dup_string.c.s:$/;"	t
lib/tinycbor/src/cborparser_dup_string.i	Makefile	/^lib\/tinycbor\/src\/cborparser_dup_string.i: lib\/tinycbor\/src\/cborparser_dup_string.c.i$/;"	t
lib/tinycbor/src/cborparser_dup_string.o	Makefile	/^lib\/tinycbor\/src\/cborparser_dup_string.o: lib\/tinycbor\/src\/cborparser_dup_string.c.o$/;"	t
lib/tinycbor/src/cborparser_dup_string.s	Makefile	/^lib\/tinycbor\/src\/cborparser_dup_string.s: lib\/tinycbor\/src\/cborparser_dup_string.c.s$/;"	t
lib/tinycbor/src/cborparser_float.c.i	Makefile	/^lib\/tinycbor\/src\/cborparser_float.c.i:$/;"	t
lib/tinycbor/src/cborparser_float.c.o	Makefile	/^lib\/tinycbor\/src\/cborparser_float.c.o:$/;"	t
lib/tinycbor/src/cborparser_float.c.s	Makefile	/^lib\/tinycbor\/src\/cborparser_float.c.s:$/;"	t
lib/tinycbor/src/cborparser_float.i	Makefile	/^lib\/tinycbor\/src\/cborparser_float.i: lib\/tinycbor\/src\/cborparser_float.c.i$/;"	t
lib/tinycbor/src/cborparser_float.o	Makefile	/^lib\/tinycbor\/src\/cborparser_float.o: lib\/tinycbor\/src\/cborparser_float.c.o$/;"	t
lib/tinycbor/src/cborparser_float.s	Makefile	/^lib\/tinycbor\/src\/cborparser_float.s: lib\/tinycbor\/src\/cborparser_float.c.s$/;"	t
lib/tinycbor/src/cborpretty.c.i	Makefile	/^lib\/tinycbor\/src\/cborpretty.c.i:$/;"	t
lib/tinycbor/src/cborpretty.c.o	Makefile	/^lib\/tinycbor\/src\/cborpretty.c.o:$/;"	t
lib/tinycbor/src/cborpretty.c.s	Makefile	/^lib\/tinycbor\/src\/cborpretty.c.s:$/;"	t
lib/tinycbor/src/cborpretty.i	Makefile	/^lib\/tinycbor\/src\/cborpretty.i: lib\/tinycbor\/src\/cborpretty.c.i$/;"	t
lib/tinycbor/src/cborpretty.o	Makefile	/^lib\/tinycbor\/src\/cborpretty.o: lib\/tinycbor\/src\/cborpretty.c.o$/;"	t
lib/tinycbor/src/cborpretty.s	Makefile	/^lib\/tinycbor\/src\/cborpretty.s: lib\/tinycbor\/src\/cborpretty.c.s$/;"	t
lib/tinycbor/src/cborpretty_stdio.c.i	Makefile	/^lib\/tinycbor\/src\/cborpretty_stdio.c.i:$/;"	t
lib/tinycbor/src/cborpretty_stdio.c.o	Makefile	/^lib\/tinycbor\/src\/cborpretty_stdio.c.o:$/;"	t
lib/tinycbor/src/cborpretty_stdio.c.s	Makefile	/^lib\/tinycbor\/src\/cborpretty_stdio.c.s:$/;"	t
lib/tinycbor/src/cborpretty_stdio.i	Makefile	/^lib\/tinycbor\/src\/cborpretty_stdio.i: lib\/tinycbor\/src\/cborpretty_stdio.c.i$/;"	t
lib/tinycbor/src/cborpretty_stdio.o	Makefile	/^lib\/tinycbor\/src\/cborpretty_stdio.o: lib\/tinycbor\/src\/cborpretty_stdio.c.o$/;"	t
lib/tinycbor/src/cborpretty_stdio.s	Makefile	/^lib\/tinycbor\/src\/cborpretty_stdio.s: lib\/tinycbor\/src\/cborpretty_stdio.c.s$/;"	t
lib/tinycbor/src/cbortojson.c.i	Makefile	/^lib\/tinycbor\/src\/cbortojson.c.i:$/;"	t
lib/tinycbor/src/cbortojson.c.o	Makefile	/^lib\/tinycbor\/src\/cbortojson.c.o:$/;"	t
lib/tinycbor/src/cbortojson.c.s	Makefile	/^lib\/tinycbor\/src\/cbortojson.c.s:$/;"	t
lib/tinycbor/src/cbortojson.i	Makefile	/^lib\/tinycbor\/src\/cbortojson.i: lib\/tinycbor\/src\/cbortojson.c.i$/;"	t
lib/tinycbor/src/cbortojson.o	Makefile	/^lib\/tinycbor\/src\/cbortojson.o: lib\/tinycbor\/src\/cbortojson.c.o$/;"	t
lib/tinycbor/src/cbortojson.s	Makefile	/^lib\/tinycbor\/src\/cbortojson.s: lib\/tinycbor\/src\/cbortojson.c.s$/;"	t
lib/tinycbor/src/cborvalidation.c.i	Makefile	/^lib\/tinycbor\/src\/cborvalidation.c.i:$/;"	t
lib/tinycbor/src/cborvalidation.c.o	Makefile	/^lib\/tinycbor\/src\/cborvalidation.c.o:$/;"	t
lib/tinycbor/src/cborvalidation.c.s	Makefile	/^lib\/tinycbor\/src\/cborvalidation.c.s:$/;"	t
lib/tinycbor/src/cborvalidation.i	Makefile	/^lib\/tinycbor\/src\/cborvalidation.i: lib\/tinycbor\/src\/cborvalidation.c.i$/;"	t
lib/tinycbor/src/cborvalidation.o	Makefile	/^lib\/tinycbor\/src\/cborvalidation.o: lib\/tinycbor\/src\/cborvalidation.c.o$/;"	t
lib/tinycbor/src/cborvalidation.s	Makefile	/^lib\/tinycbor\/src\/cborvalidation.s: lib\/tinycbor\/src\/cborvalidation.c.s$/;"	t
lib/tinycbor/src/open_memstream.c.i	Makefile	/^lib\/tinycbor\/src\/open_memstream.c.i:$/;"	t
lib/tinycbor/src/open_memstream.c.o	Makefile	/^lib\/tinycbor\/src\/open_memstream.c.o:$/;"	t
lib/tinycbor/src/open_memstream.c.s	Makefile	/^lib\/tinycbor\/src\/open_memstream.c.s:$/;"	t
lib/tinycbor/src/open_memstream.i	Makefile	/^lib\/tinycbor\/src\/open_memstream.i: lib\/tinycbor\/src\/open_memstream.c.i$/;"	t
lib/tinycbor/src/open_memstream.o	Makefile	/^lib\/tinycbor\/src\/open_memstream.o: lib\/tinycbor\/src\/open_memstream.c.o$/;"	t
lib/tinycbor/src/open_memstream.s	Makefile	/^lib\/tinycbor\/src\/open_memstream.s: lib\/tinycbor\/src\/open_memstream.c.s$/;"	t
libdir	lib/cn-cbor/CMakeLists.txt	/^set(libdir ${CMAKE_INSTALL_PREFIX}\/lib)$/;"	v
libdir	lib/tinycbor/Makefile	/^libdir = $(exec_prefix)\/lib$/;"	m
libqcbor.a	lib/QCBOR/Makefile	/^libqcbor.a: $(QCBOR_OBJ)$/;"	t
libqcbor.so	lib/QCBOR/Makefile	/^libqcbor.so: $(QCBOR_OBJ)$/;"	t
license	lib/cn-cbor/conanfile.py	/^    license = "BSD"$/;"	v	class:CnCborConan
likely	lib/tinycbor/src/compilersupport_p.h	/^#  define likely(/;"	d
load_file	lib/cn-cbor/test/file_test.c	/^static unsigned char *load_file(const char *filepath, unsigned char **end)$/;"	f	typeref:typename:unsigned char *	file:
load_file	lib/cn-cbor/test/test.c	/^static unsigned char *load_file(const char *filepath, unsigned char **end)$/;"	f	typeref:typename:unsigned char *	file:
ma	lib/QCBOR/inc/qcbor/qcbor_private.h	/^         } ma; \/* for maps and arrays *\/$/;"	m	union:__QCBORDecodeNesting::nesting_decode_level::__anon4bdbef67020a	typeref:struct:__QCBORDecodeNesting::nesting_decode_level::__anon4bdbef67020a::__anon4bdbef670308
magic	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^   uint16_t   magic;    \/\/ Used to detect corruption and lack of initialization$/;"	m	struct:useful_out_buf	typeref:typename:uint16_t
magic	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^   uint16_t   magic;  \/\/ Check for corrupted or uninitialized UsefulInputBuf$/;"	m	struct:useful_input_buf	typeref:typename:uint16_t
magic	lib/cn-cbor/test/ctest.h	/^	unsigned int magic;$/;"	m	struct:ctest	typeref:typename:unsigned int
main	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f	typeref:typename:void
main	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	lib/QCBOR/cmd_line_main.c	/^int main(int argc, const char * argv[])$/;"	f	typeref:typename:int
main	lib/cn-cbor/test/cbor_test.c	/^int main(int argc, const char *argv[])$/;"	f	typeref:typename:int
main	lib/cn-cbor/test/file_test.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/cn-cbor/test/memory_test.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/cn-cbor/test/test.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/tinycbor/examples/simplereader.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	lib/tinycbor/tests/c90/tst_c90.c	/^int main()$/;"	f	typeref:typename:int
main	lib/tinycbor/tools/cbordump/cbordump.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	lib/tinycbor/tools/json2cbor/json2cbor.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	main.c	/^int main()$/;"	f	typeref:typename:int
main	main_og.c	/^int main()$/;"	f	typeref:typename:int
main.c.i	Makefile	/^main.c.i:$/;"	t
main.c.o	Makefile	/^main.c.o:$/;"	t
main.c.s	Makefile	/^main.c.s:$/;"	t
main.i	Makefile	/^main.i: main.c.i$/;"	t
main.o	Makefile	/^main.o: main.c.o$/;"	t
main.s	Makefile	/^main.s: main.c.s$/;"	t
make_ilmap	lib/tinycbor/tests/encoder/data.cpp	/^QVariant make_ilmap(const std::initializer_list<QPair<QVariant, QVariant>> &list)$/;"	f	typeref:typename:QVariant
make_nested_indefinite_arrays	lib/QCBOR/test/qcbor_decode_tests.c	/^static UsefulBufC make_nested_indefinite_arrays(int n, UsefulBuf Storage)$/;"	f	typeref:typename:UsefulBufC	file:
mapFind	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::mapFind()$/;"	f	class:tst_Parser	typeref:typename:void
mapFind_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::mapFind_data()$/;"	f	class:tst_Parser	typeref:typename:void
mapMixed	lib/tinycbor/tests/parser/tst_parser.cpp	/^    void mapMixed() { arrays(); }$/;"	f	class:tst_Parser	typeref:typename:void	file:
mapMixed_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::mapMixed_data()$/;"	f	class:tst_Parser	typeref:typename:void
map_to_json	lib/tinycbor/src/cbortojson.c	/^static CborError map_to_json(FILE *out, CborValue *it, int flags, ConversionStatus *status)$/;"	f	typeref:typename:CborError	file:
maps	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::maps()$/;"	f	class:tst_Encoder	typeref:typename:void
maps	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::maps()$/;"	f	class:tst_Parser	typeref:typename:void
maps	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::maps()$/;"	f	class:tst_ToJson	typeref:typename:void
mapsAndArrays	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::mapsAndArrays()$/;"	f	class:tst_Parser	typeref:typename:void
mapsAndArrays_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^    void mapsAndArrays_data() { arrays_data(); }$/;"	f	class:tst_Parser	typeref:typename:void	file:
maps_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^    void maps_data() { tags_data(); }$/;"	f	class:tst_Encoder	typeref:typename:void	file:
maps_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::maps_data()$/;"	f	class:tst_Parser	typeref:typename:void
maps_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^    void maps_data() { arrays_data(); }$/;"	f	class:tst_ToJson	typeref:typename:void	file:
metaData	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::metaData()$/;"	f	class:tst_ToJson	typeref:typename:void
metaDataAndTagsToObjects	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::metaDataAndTagsToObjects()$/;"	f	class:tst_ToJson	typeref:typename:void
metaDataAndTagsToObjects_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^    void metaDataAndTagsToObjects_data() { tagsToObjects_data(); }$/;"	f	class:tst_ToJson	typeref:typename:void	file:
metaDataForKeys	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::metaDataForKeys()$/;"	f	class:tst_ToJson	typeref:typename:void
metaDataForKeys_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::metaDataForKeys_data()$/;"	f	class:tst_ToJson	typeref:typename:void
metaData_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::metaData_data()$/;"	f	class:tst_ToJson	typeref:typename:void
meta_data_marker	lib/tinycbor/tools/json2cbor/json2cbor.c	/^static const char meta_data_marker[] = "$cbor";$/;"	v	typeref:typename:const char[]	file:
mmapAllocation	lib/tinycbor/tests/parser/tst_parser.cpp	/^    static inline size_t mmapAllocation(size_t n)$/;"	f	struct:ParserWrapper	typeref:typename:size_t	file:
mostlyclean	lib/tinycbor/Makefile	/^mostlyclean:$/;"	t
msg_end	lib/cn-cbor/test/ctest.h	/^static void msg_end()$/;"	f	typeref:typename:void
msg_start	lib/cn-cbor/test/ctest.h	/^static void msg_start(const char* color, const char* title)$/;"	f	typeref:typename:void
mt_trans	lib/cn-cbor/src/cn-cbor.c	/^static cn_cbor_type mt_trans[] = {$/;"	v	typeref:typename:cn_cbor_type[]	file:
myInf	lib/tinycbor/tests/encoder/data.cpp	/^static double myInf()$/;"	f	typeref:typename:double	file:
myInff	lib/tinycbor/tests/encoder/data.cpp	/^static float myInff()$/;"	f	typeref:typename:float	file:
myNInf	lib/tinycbor/tests/encoder/data.cpp	/^static double myNInf()$/;"	f	typeref:typename:double	file:
myNInff	lib/tinycbor/tests/encoder/data.cpp	/^static float myNInff()$/;"	f	typeref:typename:float	file:
myNaN	lib/tinycbor/tests/encoder/data.cpp	/^static double myNaN()$/;"	f	typeref:typename:double	file:
myNaNf	lib/tinycbor/tests/encoder/data.cpp	/^static float myNaNf()$/;"	f	typeref:typename:float	file:
my_enum	include/telemetry_codec.h	/^    my_enum,$/;"	e	enum:__anond5269ae60103
my_fav_number	include/telemetry_codec.h	/^    uint32_t my_fav_number;$/;"	m	struct:__anond5269ae60308	typeref:typename:uint32_t
n	lib/QCBOR/test/not_well_formed_cbor.h	/^    size_t         n; \/\/ Length of the bytes$/;"	m	struct:someBinaryBytes	typeref:typename:size_t
nConvertedToInt64	lib/QCBOR/test/qcbor_decode_tests.c	/^   int64_t     nConvertedToInt64;$/;"	m	struct:NumberConversion	typeref:typename:int64_t	file:
nError	lib/QCBOR/test/qcbor_decode_tests.c	/^   QCBORError nError;$/;"	m	struct:FailInput	typeref:typename:QCBORError	file:
nExponent	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^         int64_t nExponent;$/;"	m	struct:_QCBORItem::__anonf04339f0020a::__anonf04339f00408	typeref:typename:int64_t
nInt	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^            int64_t    nInt;$/;"	m	union:_QCBORItem::__anonf04339f0020a::__anonf04339f00408::__anonf04339f0050a	typeref:typename:int64_t
nSeconds	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^         int64_t  nSeconds;$/;"	m	struct:_QCBORItem::__anonf04339f0020a::__anonf04339f00308	typeref:typename:int64_t
name	lib/cn-cbor/conanfile.py	/^    name = "cn-cbor"$/;"	v	class:CnCborConan
nestedArrays	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::nestedArrays()$/;"	f	class:tst_Parser	typeref:typename:void
nestedArrays	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::nestedArrays()$/;"	f	class:tst_ToJson	typeref:typename:void
nestedArrays_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^    void nestedArrays_data() { arrays_data(); }$/;"	f	class:tst_Parser	typeref:typename:void	file:
nestedArrays_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^    void nestedArrays_data() { arrays_data(); }$/;"	f	class:tst_ToJson	typeref:typename:void	file:
nestedMaps	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::nestedMaps()$/;"	f	class:tst_Parser	typeref:typename:void
nestedMaps	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::nestedMaps()$/;"	f	class:tst_ToJson	typeref:typename:void
nestedMaps_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^    void nestedMaps_data() { maps_data(); }$/;"	f	class:tst_Parser	typeref:typename:void	file:
nestedMaps_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^    void nestedMaps_data() { maps_data(); }$/;"	f	class:tst_ToJson	typeref:typename:void	file:
nesting	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   QCBORDecodeNesting nesting;$/;"	m	struct:_QCBORDecodeContext	typeref:typename:QCBORDecodeNesting
nesting	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   QCBORTrackNesting nesting; \/\/ Keep track of array and map nesting$/;"	m	struct:_QCBOREncodeContext	typeref:typename:QCBORTrackNesting
nesting_decode_level	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   struct nesting_decode_level {$/;"	s	struct:__QCBORDecodeNesting
next	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	struct cn_cbor* next;$/;"	m	struct:cn_cbor	typeref:struct:cn_cbor *
nonStringKeyMaps	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::nonStringKeyMaps()$/;"	f	class:tst_ToJson	typeref:typename:void
nonStringKeyMaps_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::nonStringKeyMaps_data()$/;"	f	class:tst_ToJson	typeref:typename:void
nonjson	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^    void nonjson() { fixed(); }$/;"	f	class:tst_ToJson	typeref:typename:void	file:
nonjson_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::nonjson_data()$/;"	f	class:tst_ToJson	typeref:typename:void
not_well_formed_cbor_h	lib/QCBOR/test/not_well_formed_cbor.h	/^#define not_well_formed_cbor_h$/;"	d
ntoh16p	lib/cn-cbor/src/cn-cbor.c	/^#define ntoh16p(/;"	d	file:
ntoh16p	lib/cn-cbor/src/cn-cbor.c	/^static uint16_t ntoh16p(unsigned char *p)$/;"	f	typeref:typename:uint16_t	file:
ntoh32p	lib/cn-cbor/src/cn-cbor.c	/^#define ntoh32p(/;"	d	file:
ntoh32p	lib/cn-cbor/src/cn-cbor.c	/^static uint32_t ntoh32p(unsigned char *p)$/;"	f	typeref:typename:uint32_t	file:
ntoh64p	lib/cn-cbor/src/cn-cbor.c	/^static uint64_t ntoh64p(unsigned char *p)$/;"	f	typeref:typename:uint64_t	file:
ntoh8p	lib/cn-cbor/src/cn-cbor.c	/^#define ntoh8p(/;"	d	file:
ntohl	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^#define ntohl(/;"	d
ntohll	lib/tinycbor/src/compilersupport_p.h	/^#      define ntohll$/;"	d
ntohll	lib/tinycbor/src/compilersupport_p.h	/^#      define ntohll(/;"	d
ntohs	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^#define ntohs(/;"	d
offset	lib/cn-cbor/src/cn-encoder.c	/^	size_t offset;$/;"	m	struct:_write_state	typeref:typename:size_t	file:
open_memstream	lib/tinycbor/src/open_memstream.c	/^FILE *open_memstream(char **bufptr, size_t *lenptr)$/;"	f	typeref:typename:FILE *
ops	lib/tinycbor/src/cbor.h	/^        const struct CborParserOperations *ops;$/;"	m	union:CborParser::__anon7f057ad7020a	typeref:typename:const struct CborParserOperations *
options	lib/cn-cbor/conanfile.py	/^    options = {$/;"	v	class:CnCborConan
originalNumber	lib/tinycbor/src/cbortojson.c	/^    uint64_t originalNumber;$/;"	m	struct:ConversionStatus	typeref:typename:uint64_t	file:
otherTags	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::otherTags()$/;"	f	class:tst_ToJson	typeref:typename:void
otherTags_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::otherTags_data()$/;"	f	class:tst_ToJson	typeref:typename:void
p	lib/QCBOR/test/not_well_formed_cbor.h	/^    const uint8_t *p; \/\/ Pointer to the bytes$/;"	m	struct:someBinaryBytes	typeref:typename:const uint8_t *
pAllocateCxt	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   void *pAllocateCxt;$/;"	m	struct:__anon4bdbef670508	typeref:typename:void *
pArrays	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   } pArrays[QCBOR_MAX_ARRAY_NESTING1+1], \/\/ stored state for the nesting levels$/;"	m	struct:__QCBORTrackNesting	typeref:struct:__QCBORTrackNesting::__anon4bdbef670108[]
pCurrent	lib/QCBOR/inc/qcbor/qcbor_private.h	/^    *pCurrent,$/;"	m	struct:__QCBORDecodeNesting	typeref:struct:__QCBORDecodeNesting::nesting_decode_level[]*
pCurrentBounded	lib/QCBOR/inc/qcbor/qcbor_private.h	/^    *pCurrentBounded;$/;"	m	struct:__QCBORDecodeNesting	typeref:struct:__QCBORDecodeNesting::nesting_decode_level[]**
pCurrentNesting	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   *pCurrentNesting; \/\/ the current nesting level$/;"	m	struct:__QCBORTrackNesting	typeref:struct:__QCBORTrackNesting::__anon4bdbef670108[]*
pFirst	lib/cn-cbor/test/context.c	/^	byte *pFirst;$/;"	m	struct:__anon676fdaa30108	typeref:typename:byte *	file:
pLevels	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   } pLevels[QCBOR_MAX_ARRAY_NESTING1+1],$/;"	m	struct:__QCBORDecodeNesting	typeref:struct:__QCBORDecodeNesting::nesting_decode_level[]
pNext	lib/cn-cbor/test/context.c	/^	struct _MyItem *pNext;$/;"	m	struct:_MyItem	typeref:struct:_MyItem *	file:
pProtectedHeaders	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t pProtectedHeaders[] = {0xa1, 0x01, 0x26};$/;"	v	typeref:typename:const uint8_t[]	file:
pValidMapEncoded	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t pValidMapEncoded[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
pValidMapIndefEncoded	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t pValidMapIndefEncoded[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
paNotWellFormedCBOR	lib/QCBOR/test/not_well_formed_cbor.h	/^static const struct someBinaryBytes paNotWellFormedCBOR[] = {$/;"	v	typeref:typename:const struct someBinaryBytes[]
package	lib/cn-cbor/conanfile.py	/^    def package(self):$/;"	m	class:CnCborConan
package_info	lib/cn-cbor/conanfile.py	/^    def package_info(self):$/;"	m	class:CnCborConan
package_prefix	lib/cn-cbor/CMakeLists.txt	/^set(package_prefix "${CMAKE_PACKAGE_NAME}-${CMAKE_SYSTEM_NAME}")$/;"	v
pad	lib/cn-cbor/test/context.c	/^	byte pad[4];$/;"	m	struct:_MyItem	typeref:typename:byte[4]	file:
parent	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	struct cn_cbor* parent;$/;"	m	struct:cn_cbor	typeref:struct:cn_cbor *
parseOne	lib/tinycbor/tests/parser/tst_parser.cpp	/^CborError parseOne(CborValue *it, QString *parsed)$/;"	f	typeref:typename:CborError
parseOne	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^CborError parseOne(CborValue *it, QString *parsed, int flags)$/;"	f	typeref:typename:CborError
parseOneChunk	lib/tinycbor/tests/parser/tst_parser.cpp	/^CborError parseOneChunk(CborValue *it, QString *parsed)$/;"	f	typeref:typename:CborError
parse_buf	lib/cn-cbor/src/cn-cbor.c	/^struct parse_buf {$/;"	s	file:
parse_hex	lib/cn-cbor/test/cbor_test.c	/^static bool parse_hex(char *inp, buffer *b)$/;"	f	typeref:typename:bool	file:
parse_indeflen_nested	lib/QCBOR/test/qcbor_decode_tests.c	/^static int32_t parse_indeflen_nested(UsefulBufC Nested, int nNestLevel)$/;"	f	typeref:typename:int32_t	file:
parse_meta_data	lib/tinycbor/tools/json2cbor/json2cbor.c	/^struct MetaData parse_meta_data(cJSON *md)$/;"	f	typeref:struct:MetaData
parser	lib/tinycbor/src/cbor.h	/^    const CborParser *parser;$/;"	m	struct:CborValue	typeref:typename:const CborParser *
parser	lib/tinycbor/tests/parser/tst_parser.cpp	/^    CborParser parser;$/;"	m	struct:ParserWrapper	typeref:typename:CborParser	file:
pfAllocator	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   UsefulBuf (* pfAllocator)(void *pAllocateCxt, void *pOldMem, size_t uNewSize);$/;"	m	struct:__anon4bdbef670508	typeref:typename:UsefulBuf (*)(void * pAllocateCxt,void * pOldMem,size_t uNewSize)
pkgconfigdir	lib/tinycbor/Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pos	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	size_t pos;$/;"	m	struct:cn_cbor_errback	typeref:typename:size_t
prefix	lib/cn-cbor/CMakeLists.txt	/^set(prefix ${CMAKE_INSTALL_PREFIX})$/;"	v
prefix	lib/tinycbor/Makefile	/^prefix = \/usr\/local$/;"	m
preinstall	Makefile	/^preinstall: all$/;"	t
preinstall/fast	Makefile	/^preinstall\/fast:$/;"	t
preparse_next_value	lib/tinycbor/src/cborparser.c	/^static CborError preparse_next_value(CborValue *it)$/;"	f	typeref:typename:CborError	file:
preparse_next_value_nodecrement	lib/tinycbor/src/cborparser.c	/^static CborError preparse_next_value_nodecrement(CborValue *it)$/;"	f	typeref:typename:CborError	file:
preparse_value	lib/tinycbor/src/cborparser.c	/^static CborError preparse_value(CborValue *it)$/;"	f	typeref:typename:CborError	file:
printRecursionLimit	lib/tinycbor/src/cborpretty.c	/^static void printRecursionLimit(CborStreamFunction stream, void *out)$/;"	f	typeref:typename:void	file:
print_decode_data	main.c	/^void print_decode_data(telemetry_data_t *p_data)$/;"	f	typeref:typename:void
print_decode_data	main_og.c	/^void print_decode_data(telemetry_data_t *p_data)$/;"	f	typeref:typename:void
printerror	lib/tinycbor/tools/cbordump/cbordump.c	/^void printerror(CborError err, const char *fname)$/;"	f	typeref:typename:void
ptr	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^    const void *ptr;$/;"	m	struct:q_useful_buf_c	typeref:typename:const void *
ptr	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^   void  *ptr;$/;"	m	struct:q_useful_buf	typeref:typename:void *
ptr	lib/cn-cbor/test/cbor_test.c	/^	unsigned char *ptr;$/;"	m	struct:_buffer	typeref:typename:unsigned char *	file:
ptr	lib/tinycbor/src/cbor.h	/^        const uint8_t *ptr;$/;"	m	union:CborValue::__anon7f057ad7030a	typeref:typename:const uint8_t *
ptr	lib/tinycbor/src/cbor.h	/^        uint8_t *ptr;$/;"	m	union:CborEncoder::__anon7f057ad7010a	typeref:typename:uint8_t *
ptr	lib/tinycbor/src/open_memstream.c	/^    char **ptr;$/;"	m	struct:Buffer	typeref:typename:char **	file:
puTags	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   const uint64_t *puTags;$/;"	m	struct:__anonf04339f00708	typeref:typename:const uint64_t *
puTags	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   uint64_t *puTags;$/;"	m	struct:__anonf04339f00808	typeref:typename:uint64_t *
put16	lib/tinycbor/src/cborencoder.c	/^static inline void put16(void *where, uint16_t v)$/;"	f	typeref:typename:void	file:
put32	lib/tinycbor/src/cborencoder.c	/^static inline void put32(void *where, uint32_t v)$/;"	f	typeref:typename:void	file:
put64	lib/tinycbor/src/cborencoder.c	/^static inline void put64(void *where, uint64_t v)$/;"	f	typeref:typename:void	file:
q_useful_buf	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^typedef struct q_useful_buf {$/;"	s
q_useful_buf_c	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^typedef struct q_useful_buf_c {$/;"	s
qcborExample_h	lib/QCBOR/example.h	/^#define qcborExample_h$/;"	d
qcbor_common_h	lib/QCBOR/inc/qcbor/qcbor_common.h	/^#define qcbor_common_h$/;"	d
qcbor_decode_h	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^#define qcbor_decode_h$/;"	d
qcbor_encode_h	lib/QCBOR/inc/qcbor/qcbor_encode.h	/^#define qcbor_encode_h$/;"	d
qcbor_err_to_str	lib/QCBOR/src/qcbor_err_to_str.c	/^const char *qcbor_err_to_str(QCBORError err) {$/;"	f	typeref:typename:const char *
qcbor_private_h	lib/QCBOR/inc/qcbor/qcbor_private.h	/^#define qcbor_private_h$/;"	d
qcbor_spiffy_decode_h	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^#define qcbor_spiffy_decode_h$/;"	d
qcbortest	lib/QCBOR/Makefile	/^qcbortest: libqcbor.a $(TEST_OBJ) cmd_line_main.o$/;"	t
qnxnto	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qnxnto	CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qstring_printf	lib/tinycbor/tests/parser/tst_parser.cpp	/^static CborError qstring_printf(void *out, const char *fmt, ...)$/;"	f	typeref:typename:CborError	file:
raw	lib/tinycbor/tests/encoder/data.cpp	/^template <size_t N> QByteArray raw(const char (&data)[N])$/;"	f	typeref:typename:QByteArray
raw	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^template <size_t N> QByteArray raw(const char (&data)[N])$/;"	f	typeref:typename:QByteArray
read_bytes	lib/tinycbor/src/cbor.h	/^    void *(*read_bytes)(void *token, void *dst, size_t offset, size_t len);$/;"	m	struct:CborParserOperations	typeref:typename:void * (*)(void * token,void * dst,size_t offset,size_t len)
read_bytes	lib/tinycbor/src/cborinternal_p.h	/^static inline void *read_bytes(const CborValue *it, void *dst, size_t offset, size_t n)$/;"	f	typeref:typename:void *
read_bytes_unchecked	lib/tinycbor/src/cborinternal_p.h	/^static inline void *read_bytes_unchecked(const CborValue *it, void *dst, size_t offset, size_t n/;"	f	typeref:typename:void *
read_uint16	lib/tinycbor/src/cborinternal_p.h	/^static inline uint16_t read_uint16(const CborValue *it, size_t offset)$/;"	f	typeref:typename:uint16_t
read_uint32	lib/tinycbor/src/cborinternal_p.h	/^static inline uint32_t read_uint32(const CborValue *it, size_t offset)$/;"	f	typeref:typename:uint32_t
read_uint64	lib/tinycbor/src/cborinternal_p.h	/^static inline uint64_t read_uint64(const CborValue *it, size_t offset)$/;"	f	typeref:typename:uint64_t
read_uint8	lib/tinycbor/src/cborinternal_p.h	/^static inline uint16_t read_uint8(const CborValue *it, size_t offset)$/;"	f	typeref:typename:uint16_t
readerApi	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::readerApi()$/;"	f	class:tst_Parser	typeref:typename:void
readerApi_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^    void readerApi_data() { arrays_data(); }$/;"	f	class:tst_Parser	typeref:typename:void	file:
readfile	lib/tinycbor/examples/simplereader.c	/^static uint8_t *readfile(const char *fname, size_t *size)$/;"	f	typeref:typename:uint8_t *	file:
realdata	lib/tinycbor/tests/parser/tst_parser.cpp	/^    void *realdata = nullptr;$/;"	m	struct:ParserWrapper	typeref:typename:void *	file:
rebuild_cache	Makefile	/^rebuild_cache:$/;"	t
rebuild_cache/fast	Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
recursionLimit	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::recursionLimit()$/;"	f	class:tst_Parser	typeref:typename:void
recursionLimit_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::recursionLimit_data()$/;"	f	class:tst_Parser	typeref:typename:void
remaining	lib/tinycbor/src/cbor.h	/^    size_t remaining;$/;"	m	struct:CborEncoder	typeref:typename:size_t
remaining	lib/tinycbor/src/cbor.h	/^    uint32_t remaining;$/;"	m	struct:CborValue	typeref:typename:uint32_t
reparse	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::reparse()$/;"	f	class:tst_Parser	typeref:typename:void
reparse_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::reparse_data()$/;"	f	class:tst_Parser	typeref:typename:void
resolve_indicator	lib/tinycbor/src/cborpretty.c	/^static const char *resolve_indicator(const CborValue *it, int flags)$/;"	f	typeref:typename:const char *	file:
rgFlags	lib/cn-cbor/src/cn-print.c	/^	uint8_t *rgFlags;$/;"	m	struct:_write_state	typeref:typename:uint8_t *	file:
rgbOutput	lib/cn-cbor/src/cn-print.c	/^	char *rgbOutput;$/;"	m	struct:_write_state	typeref:typename:char *	file:
rssi	include/telemetry_codec.h	/^    int32_t rssi;$/;"	m	struct:__anond5269ae60308	typeref:typename:int32_t
run	lib/cn-cbor/test/ctest.h	/^	void (*run)();$/;"	m	struct:ctest	typeref:typename:void (*)()
run	lib/tinycbor/scripts/maketag.pl	/^sub run(@) {$/;"	s
sEmpties	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t sEmpties[] = {0x83, 0x00, 0x80, 0x84, 0x80, 0x81, 0x00, 0xa0,$/;"	v	typeref:typename:uint8_t[]	file:
sEmptiesIndef	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t sEmptiesIndef[] = {$/;"	v	typeref:typename:uint8_t[]	file:
s_tests	lib/QCBOR/test/run_tests.c	/^static test_entry s_tests[] = {$/;"	v	typeref:typename:test_entry[]	file:
s_tests2	lib/QCBOR/test/run_tests.c	/^static test_entry2 s_tests2[] = {$/;"	v	typeref:typename:test_entry2[]	file:
saturated_decrement	lib/tinycbor/src/cborencoder.c	/^static inline void saturated_decrement(CborEncoder *encoder)$/;"	f	typeref:typename:void	file:
settings	lib/cn-cbor/conanfile.py	/^    settings = "os", "compiler", "build_type", "arch"$/;"	v	class:CnCborConan
setup	lib/cn-cbor/test/ctest.h	/^	SetupFunc setup;$/;"	m	struct:ctest	typeref:typename:SetupFunc
shortBuffer	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::shortBuffer()$/;"	f	class:tst_Encoder	typeref:typename:void
shortBuffer_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^    void shortBuffer_data() { tags_data(); }$/;"	f	class:tst_Encoder	typeref:typename:void	file:
shouldUseMmap	lib/tinycbor/tests/parser/tst_parser.cpp	/^bool ParserWrapper::shouldUseMmap()$/;"	f	class:ParserWrapper	typeref:typename:bool
sighandler	lib/cn-cbor/test/ctest.h	/^static void sighandler(int signum)$/;"	f	typeref:typename:void
silentcheck	lib/tinycbor/Makefile	/^silentcheck: | $(BINLIBRARY)$/;"	t
simpleType	lib/tinycbor/tools/json2cbor/json2cbor.c	/^        uint8_t simpleType;$/;"	m	union:MetaData::__anonc1e45508010a	typeref:typename:uint8_t	file:
sint	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^		int64_t sint;$/;"	m	union:cn_cbor::__anona55470de020a	typeref:typename:int64_t
sint	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^		long sint;$/;"	m	union:cn_cbor::__anona55470de020a	typeref:typename:long
size	include/telemetry_codec.h	/^    size_t size;$/;"	m	struct:__anond5269ae60208	typeref:typename:size_t
size	lib/cn-cbor/CMakeLists.txt	/^    size$/;"	t
size	lib/cn-cbor/src/cn-encoder.c	/^	size_t size;$/;"	m	struct:_write_state	typeref:typename:size_t	file:
size	lib/cn-cbor/test/context.c	/^	size_t size;$/;"	m	struct:_MyItem	typeref:typename:size_t	file:
skip	lib/cn-cbor/test/ctest.h	/^	int skip;$/;"	m	struct:ctest	typeref:typename:int
snprintf	lib/cn-cbor/test/ctest.h	/^#define snprintf /;"	d
so	lib/QCBOR/Makefile	/^so:	libqcbor.so$/;"	t
someBinaryBytes	lib/QCBOR/test/not_well_formed_cbor.h	/^struct someBinaryBytes {$/;"	s
source	lib/cn-cbor/conanfile.py	/^    def source(self):$/;"	m	class:CnCborConan
source	lib/tinycbor/src/cbor.h	/^    } source;$/;"	m	struct:CborParser	typeref:union:CborParser::__anon7f057ad7020a
source	lib/tinycbor/src/cbor.h	/^    } source;$/;"	m	struct:CborValue	typeref:union:CborValue::__anon7f057ad7030a
spArrayOfEmpty	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spArrayOfEmpty[] = {0x84, 0x40, 0xa0, 0x80, 0x00};$/;"	v	typeref:typename:const uint8_t[]	file:
spBigBuf	lib/QCBOR/test/qcbor_encode_tests.c	/^static uint8_t spBigBuf[2200];$/;"	v	typeref:typename:uint8_t[2200]	file:
spBigNum	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spBigNum[] = {0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};$/;"	v	typeref:typename:uint8_t[]	file:
spBigNumInput	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spBigNumInput[] = {$/;"	v	typeref:typename:uint8_t[]	file:
spCSRInput	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spCSRInput[] = {$/;"	v	typeref:typename:uint8_t[]	file:
spCSRInputIndefLen	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spCSRInputIndefLen[] = {$/;"	v	typeref:typename:uint8_t[]	file:
spCSRWithTags	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spCSRWithTags[] = {$/;"	v	typeref:typename:uint8_t[]	file:
spCoseSign1Signature	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spCoseSign1Signature[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spCoseSign1TBSExpected	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spCoseSign1TBSExpected[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spDateTestInput	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spDateTestInput[] = {$/;"	v	typeref:typename:uint8_t[]	file:
spDeepArrays	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spDeepArrays[] = {0x81, 0x81, 0x81, 0x81, 0x81, 0x81,$/;"	v	typeref:typename:uint8_t[]	file:
spEmptyInDefinteLengthMap	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spEmptyInDefinteLengthMap[] = {0xbf, 0xff};$/;"	v	typeref:typename:const uint8_t[]	file:
spEmptyMap	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spEmptyMap[] = {0xa0};$/;"	v	typeref:typename:const uint8_t[]	file:
spEncodeRawExpected	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spEncodeRawExpected[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spEncodedLargeTag	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spEncodedLargeTag[] = {0xdb, 0x91, 0x92, 0x93, 0x94, 0x95,$/;"	v	typeref:typename:uint8_t[]	file:
spExpectedBstrWrap	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spExpectedBstrWrap[] = {0x82, 0x19, 0x01, 0xC3, 0x43, 0x19, 0x01, 0xD2};$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedDeepBstr	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spExpectedDeepBstr[] =$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedEncodedAll	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spExpectedEncodedAll[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedEncodedDates	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spExpectedEncodedDates[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedEncodedInts	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spExpectedEncodedInts[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedEncodedInts	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spExpectedEncodedInts[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedEncodedSimple	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spExpectedEncodedSimple[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedEncodedSimpleIndefiniteLength	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spExpectedEncodedSimpleIndefiniteLength[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedExponentAndMantissaArray	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spExpectedExponentAndMantissaArray[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedExponentAndMantissaMap	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spExpectedExponentAndMantissaMap[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedExponentsAndMantissas	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spExpectedExponentsAndMantissas[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedFloats	lib/QCBOR/test/float_tests.c	/^static const uint8_t spExpectedFloats[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedFloatsNoHalf	lib/QCBOR/test/float_tests.c	/^static const uint8_t spExpectedFloatsNoHalf[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedHalf	lib/QCBOR/test/float_tests.c	/^static const uint8_t spExpectedHalf[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedRTIC	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spExpectedRTIC[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedSmallest	lib/QCBOR/test/float_tests.c	/^static const uint8_t spExpectedSmallest[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spExpectedTypeAndLen	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spExpectedTypeAndLen[] = {0x81, 0x58, 0x25};$/;"	v	typeref:typename:const uint8_t[]	file:
spFiveArrarys	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spFiveArrarys[] = {0x81, 0x81, 0x81, 0x81, 0x80};$/;"	v	typeref:typename:const uint8_t[]	file:
spIndefiniteArray	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spIndefiniteArray[]     = {0x9f, 0x01, 0x82, 0x02, 0x03, 0xff};$/;"	v	typeref:typename:const uint8_t[]	file:
spIndefiniteArrayBad1	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spIndefiniteArrayBad1[] = {0x9f};$/;"	v	typeref:typename:const uint8_t[]	file:
spIndefiniteArrayBad2	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spIndefiniteArrayBad2[] = {0x9f, 0x9f, 0x02, 0xff};$/;"	v	typeref:typename:const uint8_t[]	file:
spIndefiniteArrayBad3	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spIndefiniteArrayBad3[] = {0x9f, 0x02, 0xff, 0xff};$/;"	v	typeref:typename:const uint8_t[]	file:
spIndefiniteArrayBad4	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spIndefiniteArrayBad4[] = {0x81, 0x9f};$/;"	v	typeref:typename:const uint8_t[]	file:
spIndefiniteArrayBad5	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spIndefiniteArrayBad5[] = {0x9f, 0xd1, 0xff};$/;"	v	typeref:typename:const uint8_t[]	file:
spIndefiniteLenString	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spIndefiniteLenString[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spIndefiniteLenStringBad2	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spIndefiniteLenStringBad2[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spIndefiniteLenStringBad3	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spIndefiniteLenStringBad3[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spIndefiniteLenStringBad4	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spIndefiniteLenStringBad4[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spIndefiniteLenStringLabel	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spIndefiniteLenStringLabel[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spLotsOfTags	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spLotsOfTags[] = {0xdb, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96,$/;"	v	typeref:typename:uint8_t[]	file:
spMapOfEmpty	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spMapOfEmpty[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spMapWithIndefLenStrings	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spMapWithIndefLenStrings[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spRecoverableMapErrors	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spRecoverableMapErrors[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spSimpleArray	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spSimpleArray[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spSimpleArrayBuffer	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spSimpleArrayBuffer[50];$/;"	v	typeref:typename:uint8_t[50]	file:
spSimpleValues	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spSimpleValues[] = {0x8a, 0xf4, 0xf5, 0xf6, 0xf7, 0xff,$/;"	v	typeref:typename:uint8_t[]	file:
spSpiffyDateTestInput	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spSpiffyDateTestInput[] = {$/;"	v	typeref:typename:uint8_t[]	file:
spSpiffyTagInput	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spSpiffyTagInput[] = {$/;"	v	typeref:typename:uint8_t[]	file:
spTagInput	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spTagInput[] = {$/;"	v	typeref:typename:uint8_t[]	file:
spTaggedTypes	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spTaggedTypes[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spTooDeepArrays	lib/QCBOR/test/qcbor_decode_tests.c	/^static uint8_t spTooDeepArrays[] = {0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,$/;"	v	typeref:typename:uint8_t[]	file:
spTooLarge1	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spTooLarge1[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spTooLarge2	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spTooLarge2[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spTooLarge3	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spTooLarge3[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spTooSmallNegative	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spTooSmallNegative[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spUnRecoverableMapError1	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spUnRecoverableMapError1[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spUnRecoverableMapError2	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spUnRecoverableMapError2[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spUnRecoverableMapError3	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spUnRecoverableMapError3[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spUnRecoverableMapError4	lib/QCBOR/test/qcbor_decode_tests.c	/^static const uint8_t spUnRecoverableMapError4[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
spValidMapEncoded	lib/QCBOR/test/qcbor_encode_tests.c	/^static const uint8_t spValidMapEncoded[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
src/UsefulBuf.o	lib/QCBOR/Makefile	/^src\/UsefulBuf.o: inc\/qcbor\/UsefulBuf.h$/;"	t
src/iee754.o	lib/QCBOR/Makefile	/^src\/iee754.o: src\/ieee754.h$/;"	t
src/qcbor_decode.o	lib/QCBOR/Makefile	/^src\/qcbor_decode.o: inc\/qcbor\/UsefulBuf.h inc\/qcbor\/qcbor_private.h inc\/qcbor\/qcbor_commo/;"	t
src/qcbor_encode.o	lib/QCBOR/Makefile	/^src\/qcbor_encode.o: inc\/qcbor\/UsefulBuf.h inc\/qcbor\/qcbor_private.h inc\/qcbor\/qcbor_commo/;"	t
src/qcbor_err_to_str.o	lib/QCBOR/Makefile	/^src\/qcbor_err_to_str.o: inc\/qcbor\/qcbor_common.h$/;"	t
src/telemetry_codec.c.i	Makefile	/^src\/telemetry_codec.c.i:$/;"	t
src/telemetry_codec.c.o	Makefile	/^src\/telemetry_codec.c.o:$/;"	t
src/telemetry_codec.c.s	Makefile	/^src\/telemetry_codec.c.s:$/;"	t
src/telemetry_codec.i	Makefile	/^src\/telemetry_codec.i: src\/telemetry_codec.c.i$/;"	t
src/telemetry_codec.o	Makefile	/^src\/telemetry_codec.o: src\/telemetry_codec.c.o$/;"	t
src/telemetry_codec.s	Makefile	/^src\/telemetry_codec.s: src\/telemetry_codec.c.s$/;"	t
ssize_t	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^typedef signed long ssize_t;$/;"	t	typeref:typename:signed long
ssname	lib/cn-cbor/test/ctest.h	/^	const char* ssname;	 \/\/ suite name$/;"	m	struct:ctest	typeref:typename:const char *
str	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^		const char* str;$/;"	m	union:cn_cbor::__anona55470de020a	typeref:typename:const char *
strictValidation	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::strictValidation()$/;"	f	class:tst_Parser	typeref:typename:void
strictValidation_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::strictValidation_data()$/;"	f	class:tst_Parser	typeref:typename:void
string	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      UsefulBufC  string;$/;"	m	union:_QCBORItem::__anonf04339f0020a	typeref:typename:UsefulBufC
string	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      UsefulBufC  string;$/;"	m	union:_QCBORItem::__anonf04339f0060a	typeref:typename:UsefulBufC
stringCompare	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::stringCompare()$/;"	f	class:tst_Parser	typeref:typename:void
stringCompare_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::stringCompare_data()$/;"	f	class:tst_Parser	typeref:typename:void
stringLength	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::stringLength()$/;"	f	class:tst_Parser	typeref:typename:void
stringLength_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::stringLength_data()$/;"	f	class:tst_Parser	typeref:typename:void
stringify_map_key	lib/tinycbor/src/cbortojson.c	/^static CborError stringify_map_key(char **key, CborValue *it, int flags, CborType type)$/;"	f	typeref:typename:CborError	file:
strings	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^    void strings() { fixed(); }$/;"	f	class:tst_Encoder	typeref:typename:void	file:
strings	lib/tinycbor/tests/parser/tst_parser.cpp	/^    void strings() { fixed(); }$/;"	f	class:tst_Parser	typeref:typename:void	file:
strings_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::strings_data()$/;"	f	class:tst_Encoder	typeref:typename:void
strings_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::strings_data()$/;"	f	class:tst_Parser	typeref:typename:void
suite_all	lib/cn-cbor/test/ctest.h	/^static int suite_all(struct ctest* t)$/;"	f	typeref:typename:int
suite_filter	lib/cn-cbor/test/ctest.h	/^static int suite_filter(struct ctest* t)$/;"	f	typeref:typename:int
suite_name	lib/cn-cbor/test/ctest.h	/^static const char* suite_name;$/;"	v	typeref:typename:const char *
sz	lib/cn-cbor/test/cbor_test.c	/^	size_t sz;$/;"	m	struct:_buffer	typeref:typename:size_t	file:
szDescription	lib/QCBOR/test/qcbor_decode_tests.c	/^   char       *szDescription;$/;"	m	struct:NumberConversion	typeref:typename:char *	file:
szEndOfLine	lib/cn-cbor/src/cn-print.c	/^	const char *szEndOfLine;$/;"	m	struct:_write_state	typeref:typename:const char *	file:
szIndentWith	lib/cn-cbor/src/cn-print.c	/^	const char *szIndentWith;$/;"	m	struct:_write_state	typeref:typename:const char *	file:
szMIME	lib/QCBOR/test/qcbor_encode_tests.c	/^static const char *szMIME = "\\$/;"	v	typeref:typename:const char *	file:
szTestName	lib/QCBOR/test/run_tests.c	/^    const char  *szTestName;$/;"	m	struct:__anonfdd9adb80108	typeref:typename:const char *	file:
szTestName	lib/QCBOR/test/run_tests.c	/^    const char *szTestName;$/;"	m	struct:__anonfdd9adb80208	typeref:typename:const char *	file:
t	lib/tinycbor/tools/json2cbor/json2cbor.c	/^    CborType t;$/;"	m	struct:MetaData	typeref:typename:CborType	file:
tag	lib/tinycbor/Makefile	/^tag: distcheck$/;"	t
tag	lib/tinycbor/src/cborvalidation.c	/^struct KnownTagData { uint32_t tag; uint32_t types; };$/;"	m	struct:KnownTagData	typeref:typename:uint32_t	file:
tag	lib/tinycbor/tests/encoder/data.cpp	/^struct Tag { CborTag tag; QVariant tagged; };$/;"	m	struct:Tag	typeref:typename:CborTag	file:
tag	lib/tinycbor/tools/json2cbor/json2cbor.c	/^    CborTag tag;$/;"	m	struct:MetaData	typeref:typename:CborTag	file:
tagTags	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::tagTags()$/;"	f	class:tst_Parser	typeref:typename:void
tagTags_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^    void tagTags_data() { tags_data(); }$/;"	f	class:tst_Parser	typeref:typename:void	file:
tagged	lib/tinycbor/tests/encoder/data.cpp	/^struct Tag { CborTag tag; QVariant tagged; };$/;"	m	struct:Tag	typeref:typename:QVariant	file:
tagged	lib/tinycbor/tools/json2cbor/json2cbor.c	/^    bool tagged;$/;"	m	struct:MetaData	typeref:typename:bool	file:
taggedByteStringsToBase16	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::taggedByteStringsToBase16()$/;"	f	class:tst_ToJson	typeref:typename:void
taggedByteStringsToBase16_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::taggedByteStringsToBase16_data()$/;"	f	class:tst_ToJson	typeref:typename:void
taggedByteStringsToBase64	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::taggedByteStringsToBase64()$/;"	f	class:tst_ToJson	typeref:typename:void
taggedByteStringsToBase64_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^    void taggedByteStringsToBase64_data() { taggedByteStringsToBase16_data(); }$/;"	f	class:tst_ToJson	typeref:typename:void	file:
taggedByteStringsToBigNum	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::taggedByteStringsToBigNum()$/;"	f	class:tst_ToJson	typeref:typename:void
taggedByteStringsToBigNum_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^    void taggedByteStringsToBigNum_data()  { taggedByteStringsToBase16_data(); }$/;"	f	class:tst_ToJson	typeref:typename:void	file:
tagged_value_to_json	lib/tinycbor/src/cbortojson.c	/^static CborError tagged_value_to_json(FILE *out, CborValue *it, int flags, ConversionStatus *sta/;"	f	typeref:typename:CborError	file:
tags	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::tags()$/;"	f	class:tst_Encoder	typeref:typename:void
tags	lib/tinycbor/tests/parser/tst_parser.cpp	/^    void tags() { fixed(); }$/;"	f	class:tst_Parser	typeref:typename:void	file:
tagsToObjects	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::tagsToObjects()$/;"	f	class:tst_ToJson	typeref:typename:void
tagsToObjects_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::tagsToObjects_data()$/;"	f	class:tst_ToJson	typeref:typename:void
tags_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::tags_data()$/;"	f	class:tst_Encoder	typeref:typename:void
tags_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::tags_data()$/;"	f	class:tst_Parser	typeref:typename:void
teardown	lib/cn-cbor/test/ctest.h	/^	TearDownFunc teardown;$/;"	m	struct:ctest	typeref:typename:TearDownFunc
telemetry_codec_decode	src/telemetry_codec.c	/^int telemetry_codec_decode(telemetry_data_t *p_data, const uint8_t *p_buf, size_t len)$/;"	f	typeref:typename:int
telemetry_codec_encode	src/telemetry_codec.c	/^QCBORError telemetry_codec_encode(const telemetry_data_t *p_data, uint8_t *p_buf, size_t len, si/;"	f	typeref:typename:QCBORError
telemetry_data_positions	include/telemetry_codec.h	/^} telemetry_data_positions;$/;"	v	typeref:enum:__anond5269ae60103
telemetry_data_string_t	include/telemetry_codec.h	/^} telemetry_data_string_t;$/;"	t	typeref:struct:__anond5269ae60208
telemetry_data_t	include/telemetry_codec.h	/^} telemetry_data_t;$/;"	t	typeref:struct:__anond5269ae60308
telemetry_rssi_pos	include/telemetry_codec.h	/^    telemetry_rssi_pos,$/;"	e	enum:__anond5269ae60103
telemetry_version_pos	include/telemetry_codec.h	/^    telemetry_version_pos = 0,$/;"	e	enum:__anond5269ae60103
test/UsefulBuf_Tests.o	lib/QCBOR/Makefile	/^test\/UsefulBuf_Tests.o: test\/UsefulBuf_Tests.h inc\/qcbor\/UsefulBuf.h$/;"	t
test/float_tests.o	lib/QCBOR/Makefile	/^test\/float_tests.o: test\/float_tests.h test\/half_to_double_from_rfc7049.h $(PUBLIC_INTERFACE)$/;"	t
test/half_to_double_from_rfc7049.o	lib/QCBOR/Makefile	/^test\/half_to_double_from_rfc7049.o: test\/half_to_double_from_rfc7049.h$/;"	t
test/qcbor_decode_tests.o	lib/QCBOR/Makefile	/^test\/qcbor_decode_tests.o: test\/qcbor_decode_tests.h $(PUBLIC_INTERFACE)$/;"	t
test/qcbor_encode_tests.o	lib/QCBOR/Makefile	/^test\/qcbor_encode_tests.o: test\/qcbor_encode_tests.h $(PUBLIC_INTERFACE)$/;"	t
test/run_tests.o	lib/QCBOR/Makefile	/^test\/run_tests.o: test\/UsefulBuf_Tests.h test\/float_tests.h test\/run_tests.h test\/qcbor_enc/;"	t
test_entry	lib/QCBOR/test/run_tests.c	/^} test_entry;$/;"	t	typeref:struct:__anonfdd9adb80108	file:
test_entry2	lib/QCBOR/test/run_tests.c	/^} test_entry2;$/;"	t	typeref:struct:__anonfdd9adb80208	file:
test_fun	lib/QCBOR/test/run_tests.c	/^    test_fun2_t  *test_fun;$/;"	m	struct:__anonfdd9adb80208	typeref:typename:test_fun2_t *	file:
test_fun	lib/QCBOR/test/run_tests.c	/^    test_fun_t  *test_fun;$/;"	m	struct:__anonfdd9adb80108	typeref:typename:test_fun_t *	file:
test_fun2_t	lib/QCBOR/test/run_tests.c	/^typedef const char * (test_fun2_t)(void);$/;"	t	typeref:typename:const char * ()(void)	file:
test_fun_t	lib/QCBOR/test/run_tests.c	/^typedef int32_t (test_fun_t)(void);$/;"	t	typeref:typename:int32_t ()(void)	file:
tests/Makefile	lib/tinycbor/Makefile	/^tests\/Makefile: tests\/tests.pro$/;"	t
textstrings	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^    void textstrings() { fixed(); }$/;"	f	class:tst_ToJson	typeref:typename:void	file:
textstrings_data	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^void tst_ToJson::textstrings_data()$/;"	f	class:tst_ToJson	typeref:typename:void
tinycbor.pc	lib/tinycbor/Makefile	/^tinycbor.pc: tinycbor.pc.in$/;"	t
token	lib/tinycbor/src/cbor.h	/^        void *token;$/;"	m	union:CborValue::__anon7f057ad7030a	typeref:typename:void *
tooBigArrays	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::tooBigArrays()$/;"	f	class:tst_Encoder	typeref:typename:void
tooBigArrays_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^    void tooBigArrays_data() { tags_data(); }$/;"	f	class:tst_Encoder	typeref:typename:void	file:
tooBigMaps	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::tooBigMaps()$/;"	f	class:tst_Encoder	typeref:typename:void
tooBigMaps_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^    void tooBigMaps_data() { tags_data(); }$/;"	f	class:tst_Encoder	typeref:typename:void	file:
tooShortArrays	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::tooShortArrays()$/;"	f	class:tst_Encoder	typeref:typename:void
tooShortArrays_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^    void tooShortArrays_data() { tags_data(); }$/;"	f	class:tst_Encoder	typeref:typename:void	file:
tooShortMaps	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::tooShortMaps()$/;"	f	class:tst_Encoder	typeref:typename:void
tooShortMaps_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^    void tooShortMaps_data() { tags_data(); }$/;"	f	class:tst_Encoder	typeref:typename:void	file:
topics	lib/cn-cbor/conanfile.py	/^    topics = ("cn-cbor")$/;"	v	class:CnCborConan
transfer_string	lib/tinycbor/src/cbor.h	/^    CborError (*transfer_string)(void *token, const void **userptr, size_t offset, size_t len);$/;"	m	struct:CborParserOperations	typeref:typename:CborError (*)(void * token,const void ** userptr,size_t offset,size_t len)
transfer_string	lib/tinycbor/src/cborinternal_p.h	/^static inline CborError transfer_string(CborValue *it, const void **ptr, size_t offset, size_t l/;"	f	typeref:typename:CborError
tst_Cpp	lib/tinycbor/tests/cpp/tst_cpp.cpp	/^class tst_Cpp : public QObject$/;"	c	file:
tst_Encoder	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^class tst_Encoder : public QObject$/;"	c	file:
tst_Parser	lib/tinycbor/tests/parser/tst_parser.cpp	/^class tst_Parser : public QObject$/;"	c	file:
tst_ToJson	lib/tinycbor/tests/tojson/tst_tojson.cpp	/^class tst_ToJson : public QObject$/;"	c	file:
ttname	lib/cn-cbor/test/ctest.h	/^	const char* ttname;	 \/\/ test name$/;"	m	struct:ctest	typeref:typename:const char *
type	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	cn_cbor_type type;$/;"	m	struct:cn_cbor	typeref:typename:cn_cbor_type
type	lib/tinycbor/src/cbor.h	/^    uint8_t type;$/;"	m	struct:CborValue	typeref:typename:uint8_t
type	lib/tinycbor/tests/encoder/data.cpp	/^struct SimpleType { uint8_t type; };$/;"	m	struct:SimpleType	typeref:typename:uint8_t	file:
types	lib/tinycbor/src/cborvalidation.c	/^struct KnownTagData { uint32_t tag; uint32_t types; };$/;"	m	struct:KnownTagData	typeref:typename:uint32_t	file:
u	lib/QCBOR/inc/qcbor/qcbor_private.h	/^      } u;$/;"	m	struct:__QCBORDecodeNesting::nesting_decode_level	typeref:union:__QCBORDecodeNesting::nesting_decode_level::__anon4bdbef67020a
u	lib/cn-cbor/src/cn-cbor.c	/^		uint32_t u;$/;"	m	union:decode_item::__anon0cc4264a030a	typeref:typename:uint32_t	file:
u	lib/cn-cbor/src/cn-cbor.c	/^		uint64_t u;$/;"	m	union:decode_item::__anon0cc4264a040a	typeref:typename:uint64_t	file:
u	lib/cn-cbor/src/cn-encoder.c	/^			uint32_t u;$/;"	m	union:_write_double::__anon786bb2e4030a	typeref:typename:uint32_t	file:
u	lib/cn-cbor/src/cn-encoder.c	/^			uint64_t u;$/;"	m	union:_write_double::__anon786bb2e4040a	typeref:typename:uint64_t	file:
uActual	lib/QCBOR/test/qcbor_encode_tests.c	/^   uint8_t uActual;$/;"	m	struct:UBCompareDiagnostic	typeref:typename:uint8_t	file:
uAllowedContentTypes	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^   uint8_t uAllowedContentTypes[QCBOR_TAGSPEC_NUM_TYPES];$/;"	m	struct:__anon51af6bc00108	typeref:typename:uint8_t[]
uConvertToUInt64	lib/QCBOR/test/qcbor_decode_tests.c	/^   uint64_t    uConvertToUInt64;$/;"	m	struct:NumberConversion	typeref:typename:uint64_t	file:
uCount	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      uint16_t    uCount;$/;"	m	union:_QCBORItem::__anonf04339f0020a	typeref:typename:uint16_t
uCount	lib/QCBOR/inc/qcbor/qcbor_private.h	/^      uint16_t  uCount;   \/\/ Number of items in the arrary or map; counts items$/;"	m	struct:__QCBORTrackNesting::__anon4bdbef670108	typeref:typename:uint16_t
uCountCursor	lib/QCBOR/inc/qcbor/qcbor_private.h	/^            uint16_t uCountCursor;$/;"	m	struct:__QCBORDecodeNesting::nesting_decode_level::__anon4bdbef67020a::__anon4bdbef670308	typeref:typename:uint16_t
uCountTotal	lib/QCBOR/inc/qcbor/qcbor_private.h	/^            uint16_t uCountTotal;$/;"	m	struct:__QCBORDecodeNesting::nesting_decode_level::__anon4bdbef67020a::__anon4bdbef670308	typeref:typename:uint16_t
uDataAlloc	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   uint8_t  uDataAlloc;$/;"	m	struct:_QCBORItem	typeref:typename:uint8_t
uDataType	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   uint8_t  uDataType;$/;"	m	struct:_QCBORItem	typeref:typename:uint8_t
uDecodeMode	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   uint8_t  uDecodeMode;$/;"	m	struct:_QCBORDecodeContext	typeref:typename:uint8_t
uDisplacement	lib/QCBOR/example.c	/^   int64_t    uDisplacement;$/;"	m	struct:__anon03c895ae0108	typeref:typename:int64_t	file:
uEndOfBstr	lib/QCBOR/inc/qcbor/qcbor_private.h	/^            uint32_t uEndOfBstr;$/;"	m	struct:__QCBORDecodeNesting::nesting_decode_level::__anon4bdbef67020a::__anon4bdbef670408	typeref:typename:uint32_t
uError	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   uint8_t           uError;  \/\/ Error state, always from QCBORError enum$/;"	m	struct:_QCBOREncodeContext	typeref:typename:uint8_t
uErrorDouble	lib/QCBOR/test/qcbor_decode_tests.c	/^   QCBORError  uErrorDouble;$/;"	m	struct:NumberConversion	typeref:typename:QCBORError	file:
uErrorInt64	lib/QCBOR/test/qcbor_decode_tests.c	/^   QCBORError  uErrorInt64;$/;"	m	struct:NumberConversion	typeref:typename:QCBORError	file:
uErrorUint64	lib/QCBOR/test/qcbor_decode_tests.c	/^   QCBORError  uErrorUint64;$/;"	m	struct:NumberConversion	typeref:typename:QCBORError	file:
uExpected	lib/QCBOR/test/qcbor_encode_tests.c	/^   uint8_t uExpected;$/;"	m	struct:UBCompareDiagnostic	typeref:typename:uint8_t	file:
uHorsePower	lib/QCBOR/example.c	/^   int64_t    uHorsePower;$/;"	m	struct:__anon03c895ae0108	typeref:typename:int64_t	file:
uLabelAlloc	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   uint8_t  uLabelAlloc;$/;"	m	struct:_QCBORItem	typeref:typename:uint8_t
uLabelType	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   uint8_t  uLabelType;$/;"	m	struct:_QCBORItem	typeref:typename:uint8_t
uLastError	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   uint8_t  uLastError;  \/\/ QCBORError stuffed into a uint8_t$/;"	m	struct:_QCBORDecodeContext	typeref:typename:uint8_t
uLastTags	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   uint16_t uLastTags[QCBOR_MAX_TAGS_PER_ITEM1];$/;"	m	struct:_QCBORDecodeContext	typeref:typename:uint16_t[]
uLevelType	lib/QCBOR/inc/qcbor/qcbor_private.h	/^      uint8_t  uLevelType;$/;"	m	struct:__QCBORDecodeNesting::nesting_decode_level	typeref:typename:uint8_t
uMajorType	lib/QCBOR/inc/qcbor/qcbor_private.h	/^      uint8_t   uMajorType; \/\/ Indicates if item is a map or an array$/;"	m	struct:__QCBORTrackNesting::__anon4bdbef670108	typeref:typename:uint8_t
uMapEndOffsetCache	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   uint32_t uMapEndOffsetCache;$/;"	m	struct:_QCBORDecodeContext	typeref:typename:uint32_t
uMeasuredCompression	lib/QCBOR/example.c	/^      double uMeasuredCompression;$/;"	m	struct:__anon03c895ae0108::__anon03c895ae0208	typeref:typename:double	file:
uMemPoolFreeOffset	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   uint32_t uMemPoolFreeOffset;$/;"	m	struct:_QCBORDecodeContext	typeref:typename:uint32_t
uMemPoolSize	lib/QCBOR/inc/qcbor/qcbor_private.h	/^   uint32_t uMemPoolSize;$/;"	m	struct:_QCBORDecodeContext	typeref:typename:uint32_t
uNestingLevel	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   uint8_t  uNestingLevel;$/;"	m	struct:_QCBORItem	typeref:typename:uint8_t
uNextNestLevel	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   uint8_t  uNextNestLevel;$/;"	m	struct:_QCBORItem	typeref:typename:uint8_t
uNumAllocated	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   uint8_t uNumAllocated;$/;"	m	struct:__anonf04339f00808	typeref:typename:uint8_t
uNumCylinders	lib/QCBOR/example.c	/^   int64_t    uNumCylinders;$/;"	m	struct:__anon03c895ae0108	typeref:typename:int64_t	file:
uNumTags	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   uint8_t uNumTags;$/;"	m	struct:__anonf04339f00708	typeref:typename:uint8_t
uNumUsed	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   uint8_t uNumUsed;$/;"	m	struct:__anonf04339f00808	typeref:typename:uint8_t
uOffset	lib/QCBOR/test/qcbor_encode_tests.c	/^   size_t  uOffset;$/;"	m	struct:UBCompareDiagnostic	typeref:typename:size_t	file:
uPreviousEndOffset	lib/QCBOR/inc/qcbor/qcbor_private.h	/^            uint32_t uPreviousEndOffset;$/;"	m	struct:__QCBORDecodeNesting::nesting_decode_level::__anon4bdbef67020a::__anon4bdbef670408	typeref:typename:uint32_t
uSimple	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      uint8_t     uSimple;$/;"	m	union:_QCBORItem::__anonf04339f0020a	typeref:typename:uint8_t
uSize	lib/QCBOR/src/ieee754.h	/^    uint8_t uSize;  \/\/ One of IEEE754_IS_xxxx$/;"	m	struct:__anon5619e4d60108	typeref:typename:uint8_t
uStart	lib/QCBOR/inc/qcbor/qcbor_private.h	/^      uint32_t  uStart;   \/\/ uStart is the byte position where the array starts$/;"	m	struct:__QCBORTrackNesting::__anon4bdbef670108	typeref:typename:uint32_t
uStartOffset	lib/QCBOR/inc/qcbor/qcbor_private.h	/^            uint32_t uStartOffset;$/;"	m	struct:__QCBORDecodeNesting::nesting_decode_level::__anon4bdbef67020a::__anon4bdbef670308	typeref:typename:uint32_t
uTagRequirement	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^   uint8_t uTagRequirement;$/;"	m	struct:__anon51af6bc00108	typeref:typename:uint8_t
uTagV	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      uint64_t    uTagV;  \/\/ Used internally during decoding$/;"	m	union:_QCBORItem::__anonf04339f0020a	typeref:typename:uint64_t
uTaggedTypes	lib/QCBOR/inc/qcbor/qcbor_spiffy_decode.h	/^   uint8_t uTaggedTypes[QCBOR_TAGSPEC_NUM_TYPES];$/;"	m	struct:__anon51af6bc00108	typeref:typename:uint8_t[]
uTags	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   uint16_t uTags[QCBOR_MAX_TAGS_PER_ITEM];$/;"	m	struct:_QCBORItem	typeref:typename:uint16_t[]
uValue	lib/QCBOR/src/ieee754.h	/^    uint64_t uValue;$/;"	m	struct:__anon5619e4d60108	typeref:typename:uint64_t
uint	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^		uint64_t uint;$/;"	m	union:cn_cbor::__anona55470de020a	typeref:typename:uint64_t
uint	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^		unsigned long uint;$/;"	m	union:cn_cbor::__anona55470de020a	typeref:typename:unsigned long
uint64	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      uint64_t    uint64;$/;"	m	union:_QCBORItem::__anonf04339f0020a	typeref:typename:uint64_t
uint64	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^      uint64_t    uint64;$/;"	m	union:_QCBORItem::__anonf04339f0060a	typeref:typename:uint64_t
undefLengthArrays	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::undefLengthArrays()$/;"	f	class:tst_Parser	typeref:typename:void
undefLengthArrays_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^    void undefLengthArrays_data() { arrays_data(); }$/;"	f	class:tst_Parser	typeref:typename:void	file:
undefLengthMaps	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::undefLengthMaps()$/;"	f	class:tst_Parser	typeref:typename:void
undefLengthMaps_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^    void undefLengthMaps_data() { maps_data(); }$/;"	f	class:tst_Parser	typeref:typename:void	file:
uninstall	lib/QCBOR/Makefile	/^uninstall: libqcbor.a $(PUBLIC_INTERFACE)$/;"	t
uninstall	lib/tinycbor/Makefile	/^uninstall:$/;"	t
unlikely	lib/tinycbor/src/compilersupport_p.h	/^#  define unlikely(/;"	d
unreachable	lib/tinycbor/src/compilersupport_p.h	/^#  define unreachable(/;"	d
url	lib/cn-cbor/conanfile.py	/^    url = "https:\/\/github.com\/cose-wg\/cn-cbor"$/;"	v	class:CnCborConan
useful_input_buf	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^typedef struct useful_input_buf {$/;"	s
useful_out_buf	lib/QCBOR/inc/qcbor/UsefulBuf.h	/^typedef struct useful_out_buf {$/;"	s
usingMetaData	lib/tinycbor/tools/json2cbor/json2cbor.c	/^bool usingMetaData = false;$/;"	v	typeref:typename:bool
utf8EscapedDump	lib/tinycbor/src/cborpretty.c	/^static CborError utf8EscapedDump(CborStreamFunction stream, void *out, const void *ptr, size_t n/;"	f	typeref:typename:CborError	file:
v	lib/cn-cbor/include/cn-cbor/cn-cbor.h	/^	} v; \/* TBD: optimize immediate *\/$/;"	m	struct:cn_cbor	typeref:union:cn_cbor::__anona55470de020a
v	lib/tinycbor/tools/json2cbor/json2cbor.c	/^        const char *v;$/;"	m	union:MetaData::__anonc1e45508010a	typeref:typename:const char *	file:
val	lib/QCBOR/inc/qcbor/qcbor_decode.h	/^   } val;$/;"	m	struct:_QCBORItem	typeref:union:_QCBORItem::__anonf04339f0020a
val	lib/tinycbor/tests/encoder/data.cpp	/^struct Float16Standin { uint16_t val; };$/;"	m	struct:Float16Standin	typeref:typename:uint16_t	file:
validate_container	lib/tinycbor/src/cborvalidation.c	/^static CborError validate_container(CborValue *it, int containerType, uint32_t flags, int recurs/;"	f	typeref:typename:CborError	file:
validate_floating_point	lib/tinycbor/src/cborvalidation.c	/^static inline CborError validate_floating_point(CborValue *it, CborType type, uint32_t flags)$/;"	f	typeref:typename:CborError	file:
validate_number	lib/tinycbor/src/cborvalidation.c	/^static inline CborError validate_number(const CborValue *it, CborType type, uint32_t flags)$/;"	f	typeref:typename:CborError	file:
validate_simple_type	lib/tinycbor/src/cborvalidation.c	/^static inline CborError validate_simple_type(uint8_t simple_type, uint32_t flags)$/;"	f	typeref:typename:CborError	file:
validate_tag	lib/tinycbor/src/cborvalidation.c	/^static inline CborError validate_tag(CborValue *it, CborTag tag, uint32_t flags, int recursionLe/;"	f	typeref:typename:CborError	file:
validate_utf8_string	lib/tinycbor/src/cborvalidation.c	/^static inline CborError validate_utf8_string(const void *ptr, size_t n)$/;"	f	typeref:typename:CborError	file:
validate_value	lib/tinycbor/src/cborvalidation.c	/^static CborError validate_value(CborValue *it, uint32_t flags, int recursionLeft)$/;"	f	typeref:typename:CborError	file:
validation	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::validation()$/;"	f	class:tst_Parser	typeref:typename:void
validation_data	lib/tinycbor/tests/parser/tst_parser.cpp	/^void tst_Parser::validation_data()$/;"	f	class:tst_Parser	typeref:typename:void
value_to_json	lib/tinycbor/src/cbortojson.c	/^static CborError value_to_json(FILE *out, CborValue *it, int flags, CborType type, ConversionSta/;"	f	typeref:typename:CborError	file:
value_to_pretty	lib/tinycbor/src/cborpretty.c	/^static CborError value_to_pretty(CborStreamFunction stream, void *out, CborValue *it, int flags,/;"	f	typeref:typename:CborError	file:
version	include/telemetry_codec.h	/^    telemetry_data_string_t version;$/;"	m	struct:__anond5269ae60308	typeref:typename:telemetry_data_string_t
version	lib/cn-cbor/conanfile.py	/^    version = "20200227"$/;"	v	class:CnCborConan
volatile	CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c	/^# define volatile$/;"	d	file:
would_overflow	lib/tinycbor/src/cborencoder.c	/^static inline bool would_overflow(CborEncoder *encoder, size_t len)$/;"	f	typeref:typename:bool	file:
write_byte	lib/cn-cbor/src/cn-encoder.c	/^#define write_byte(/;"	d	file:
write_byte_and_data	lib/cn-cbor/src/cn-encoder.c	/^#define write_byte_and_data(/;"	d	file:
write_byte_ensured	lib/cn-cbor/src/cn-encoder.c	/^#define write_byte_ensured(/;"	d	file:
write_data	lib/cn-cbor/src/cn-print.c	/^bool write_data(cn_write_state *ws, const char *sz, size_t cb)$/;"	f	typeref:typename:bool
write_to_buffer	lib/tinycbor/src/open_memstream.c	/^static RetType write_to_buffer(void *cookie, const char *data, LenType len)$/;"	f	typeref:typename:RetType	file:
writer	lib/tinycbor/src/cbor.h	/^        CborEncoderWriteFunction writer;$/;"	m	union:CborEncoder::__anon7f057ad7010a	typeref:typename:CborEncoderWriteFunction
writerApi	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::writerApi()$/;"	f	class:tst_Encoder	typeref:typename:void
writerApiFail	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^void tst_Encoder::writerApiFail()$/;"	f	class:tst_Encoder	typeref:typename:void
writerApiFail_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^    void writerApiFail_data() { tags_data(); }$/;"	f	class:tst_Encoder	typeref:typename:void	file:
writerApi_data	lib/tinycbor/tests/encoder/tst_encoder.cpp	/^    void writerApi_data() { tags_data(); }$/;"	f	class:tst_Encoder	typeref:typename:void	file:
x	lib/QCBOR/src/ieee754.c	/^int x;$/;"	v	typeref:typename:int
xrealloc	lib/tinycbor/tools/cbordump/cbordump.c	/^void *xrealloc(void *old, size_t size, const char *fname)$/;"	f	typeref:typename:void *
~ParserWrapper	lib/tinycbor/tests/parser/tst_parser.cpp	/^    ~ParserWrapper() { freeMemory(); }$/;"	f	struct:ParserWrapper	file:
